{"version":3,"file":"main.css","mappings":"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","sources":["webpack://beam-nft-marketplace/./src/styles/fonts.css","webpack://beam-nft-marketplace/./src/styles/global.css","webpack://beam-nft-marketplace/./src/controls/modal.vue","webpack://beam-nft-marketplace/./modal.vue","webpack://beam-nft-marketplace/./src/controls/button.vue","webpack://beam-nft-marketplace/./button.vue","webpack://beam-nft-marketplace/./src/components/error-modal.vue","webpack://beam-nft-marketplace/./error-modal.vue","webpack://beam-nft-marketplace/./src/controls/loading.vue","webpack://beam-nft-marketplace/./loading.vue","webpack://beam-nft-marketplace/./src/components/app.vue","webpack://beam-nft-marketplace/./app.vue","webpack://beam-nft-marketplace/./src/controls/btn-back.vue","webpack://beam-nft-marketplace/./btn-back.vue","webpack://beam-nft-marketplace/./src/controls/page-title.vue","webpack://beam-nft-marketplace/./page-title.vue","webpack://beam-nft-marketplace/./src/components/message-modal.vue","webpack://beam-nft-marketplace/./message-modal.vue","webpack://beam-nft-marketplace/./src/components/key-modal.vue","webpack://beam-nft-marketplace/./key-modal.vue","webpack://beam-nft-marketplace/./src/controls/tabs.vue","webpack://beam-nft-marketplace/./tabs.vue","webpack://beam-nft-marketplace/./src/controls/paginator.vue","webpack://beam-nft-marketplace/./paginator.vue","webpack://beam-nft-marketplace/./src/controls/select-item.vue","webpack://beam-nft-marketplace/./select-item.vue","webpack://beam-nft-marketplace/./src/controls/lazy-list.vue","webpack://beam-nft-marketplace/./lazy-list.vue","webpack://beam-nft-marketplace/./src/components/my-page.vue","webpack://beam-nft-marketplace/./my-page.vue","webpack://beam-nft-marketplace/./src/components/user-page.vue","webpack://beam-nft-marketplace/./user-page.vue","webpack://beam-nft-marketplace/./src/controls/amount.vue","webpack://beam-nft-marketplace/./amount.vue","webpack://beam-nft-marketplace/./src/components/balance-page.vue","webpack://beam-nft-marketplace/./balance-page.vue","webpack://beam-nft-marketplace/./src/controls/preview.vue","webpack://beam-nft-marketplace/./preview.vue","webpack://beam-nft-marketplace/./src/controls/not-found.vue","webpack://beam-nft-marketplace/./not-found.vue","webpack://beam-nft-marketplace/./src/components/collection-page.vue","webpack://beam-nft-marketplace/./collection-page.vue","webpack://beam-nft-marketplace/./src/controls/charslen.vue","webpack://beam-nft-marketplace/./charslen.vue","webpack://beam-nft-marketplace/./src/controls/form-input.vue","webpack://beam-nft-marketplace/./form-input.vue","webpack://beam-nft-marketplace/./src/components/transfer-modal.vue","webpack://beam-nft-marketplace/./transfer-modal.vue","webpack://beam-nft-marketplace/./src/controls/price-input.vue","webpack://beam-nft-marketplace/./price-input.vue","webpack://beam-nft-marketplace/./src/components/price-modal.vue","webpack://beam-nft-marketplace/./price-modal.vue","webpack://beam-nft-marketplace/./src/controls/popup-menu.vue","webpack://beam-nft-marketplace/./popup-menu.vue","webpack://beam-nft-marketplace/./src/controls/price.vue","webpack://beam-nft-marketplace/./price.vue","webpack://beam-nft-marketplace/./src/controls/moderation-status.vue","webpack://beam-nft-marketplace/./moderation-status.vue","webpack://beam-nft-marketplace/./src/controls/likes.vue","webpack://beam-nft-marketplace/./likes.vue","webpack://beam-nft-marketplace/./src/components/nft-page.vue","webpack://beam-nft-marketplace/./nft-page.vue","webpack://beam-nft-marketplace/./src/controls/textarea.vue","webpack://beam-nft-marketplace/./textarea.vue","webpack://beam-nft-marketplace/./src/controls/add-image.vue","webpack://beam-nft-marketplace/./add-image.vue","webpack://beam-nft-marketplace/./src/components/edit-artist.vue","webpack://beam-nft-marketplace/./edit-artist.vue","webpack://beam-nft-marketplace/./src/components/edit-collection.vue","webpack://beam-nft-marketplace/./edit-collection.vue","webpack://beam-nft-marketplace/./src/controls/switch-input.vue","webpack://beam-nft-marketplace/./switch-input.vue","webpack://beam-nft-marketplace/./src/controls/form-select.vue","webpack://beam-nft-marketplace/./form-select.vue","webpack://beam-nft-marketplace/./src/components/edit-nft.vue","webpack://beam-nft-marketplace/./edit-nft.vue","webpack://beam-nft-marketplace/./src/components/admin-page.vue","webpack://beam-nft-marketplace/./admin-page.vue","webpack://beam-nft-marketplace/./src/components/moderator-page.vue","webpack://beam-nft-marketplace/./moderator-page.vue","webpack://beam-nft-marketplace/./src/components/nft.vue","webpack://beam-nft-marketplace/./nft.vue","webpack://beam-nft-marketplace/./src/controls/btn-edit-collection.vue","webpack://beam-nft-marketplace/./btn-edit-collection.vue","webpack://beam-nft-marketplace/./src/components/collection.vue","webpack://beam-nft-marketplace/./collection.vue","webpack://beam-nft-marketplace/./src/components/create-collection.vue","webpack://beam-nft-marketplace/./create-collection.vue","webpack://beam-nft-marketplace/./src/components/approve-collection.vue","webpack://beam-nft-marketplace/./approve-collection.vue","webpack://beam-nft-marketplace/./src/components/approve-artist.vue","webpack://beam-nft-marketplace/./approve-artist.vue","webpack://beam-nft-marketplace/./src/components/create-nft.vue","webpack://beam-nft-marketplace/./create-nft.vue","webpack://beam-nft-marketplace/./src/components/approve-nft.vue","webpack://beam-nft-marketplace/./approve-nft.vue"],"sourcesContent":["@font-face {\n    font-family: \"SFProDisplay\";\n    font-display: swap;\n    src: url(data:application/font-woff2;charset=utf-8;base64,) format('woff2'),\n         url(data:application/font-woff;charset=utf-8;base64,) format('woff');\n    font-weight: normal;\n    font-style: normal;\n}","html, body {\n  font-family: 'SFProDisplay', sans-serif !important;\n  font-weight: normal;\n  height:      100%;\n  width:       100%;\n  overflow:    hidden;\n  margin:      0;\n  color:       white;\n  box-sizing:  border-box;\n}\n\n.pointer-cursor {\n  cursor: pointer;\n}\n\n::-webkit-scrollbar {\n  width: 11px;\n  height: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  background: rgba(255, 255, 255, .2);\n  border: 3px solid rgba(0, 0, 0, 0);\n  background-clip: padding-box;\n}\n\n::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n::-webkit-scrollbar-button {\n  display: none;\n}\n\n.darker {\n  opacity: 0.5\n}\n\n.hidden {\n  display: none;\n}\n\n*[disabled=\"true\"] {\n  cursor: default !important;\n  opacity: 0.5;\n}\n\n.error {\n  filter: grayscale(100%) brightness(40%) sepia(100%) hue-rotate(-50deg) saturate(600%) contrast(0.8);\n}\n\n.link {\n  cursor: pointer;\n  color: rgba(0, 246, 210, 1);\n}\n\n.link:hover {\n  text-decoration: underline;\n}","<template>\n  <Teleport to=\"#modals\">\n    <div v-if=\"show\" class=\"modal-dialog\">\n      <div class=\"modal-content\" :style=\"content_style\">\n        <slot/>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<style lang=\"stylus\" scoped>\n.modal-dialog {\n  width: 100%\n  height: 100%\n  overflow: hidden\n  position: fixed\n  top: 0px\n  display: flex\n  justify-content: center\n  align-items: center\n  z-index: 100\n  background-color: transparent\n    \n  .modal-content {\n    padding: 40px\n    border-radius: 10px\n  }\n}\n</style>\n\n<script>\nimport utils from 'utils/utils'\n\nexport default {\n  props: {\n    max_width: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data () {\n    return {\n      show: false,\n    }\n  },\n\n  computed: {\n    content_style() {\n      let style = {\n        'background-color': utils.getStyles().background_popup,\n      }\n      if (this.max_width) {\n        style['max-width'] = this.max_width\n      }\n      return style\n    },\n\n    id () {\n      return Math.random()\n    }\n  },\n\n  methods: {\n    close () {\n      this.show = false\n      document.getElementById('container').style.opacity = 1\n    },\n\n    open () {\n      this.show = true\n      document.getElementById('container').style.opacity = 0.3\n    }\n  }\n}\n</script>",".modal-dialog {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: fixed;\n  top: 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  background-color: transparent;\n}\n.modal-dialog .modal-content {\n  padding: 40px;\n  border-radius: 10px;\n}\n","<template>\n  <button ref=\"button\"         \n          :class=\"{\n            'button': true,\n            'reverse': reverse,\n            'transparent': color == 'transparent',\n            'disabled': disabled,\n            'no-hover': !hover\n          }\"\n          :disabled=\"disabled\"\n          :style=\"button_style\"\n          @mouseover=\"onMouseOver\"\n  >\n    <slot></slot>\n    <span class=\"text\" :style=\"text_style\">{{ text }}</span>\n    <span v-if=\"tooltip\" ref=\"tooltip\" class=\"tooltip\" :style=\"tip_style\">{{ tooltip }}</span>\n  </button>\n</template>\n\n<style scoped lang=\"stylus\">\n.button {\n  font-family: 'SFProDisplay', sans-serif\n  white-space: nowrap\n  box-sizing: border-box\n  display: flex\n  align-items: center\n  justify-content: center\n  font-size: 14px\n  border: none\n  cursor: pointer\n  background-color: rgba(255, 255, 255, 0.1)\n  user-select: none\n  position: relative\n\n  &:not(.disabled):hover {\n    box-shadow: 0 0 8px white\n  }\n\n  &.disabled {\n    opacity: 0.6\n    cursor: auto\n\n    & :slotted(img) {\n      opacity: 0.35\n    }\n  }\n\n  &:focus {\n    outline: none\n  }\n\n  &.reverse {\n    flex-direction: row-reverse\n  }\n\n  &.transparent {\n    border-radius: 0\n\n    &:not(.disabled):hover {\n      box-shadow: none\n    }\n  }\n\n  &.no-hover:hover {\n    box-shadow: none\n  }\n\n  & > span {\n    padding-bottom: 1px\n  }\n\n  & > .tooltip {\n    box-sizing: border-box\n    visibility: hidden\n    backdrop-filter: blur(10px)\n    color: #fff\n    border-radius: 6px\n    padding: 11px 11px\n    position: fixed\n    z-index: 1\n    font-family: 'SFProDisplay', sans-serif\n    font-size: 14px\n    opacity: 0.85\n  }\n\n  &:hover .tooltip {\n    visibility: visible\n  }\n}\n</style>\n\n<script>\nimport utils from 'utils/utils'\n\nexport default {\n  props: {\n    color: {  // magenta, blue, green, transparent, dark-blue\n      type: String,\n      default: undefined\n    },\n    icon: { // icon source\n      type: String,\n      default: undefined,\n    },\n    reverse: { // to put the icon to the right of the text\n      type: Boolean,\n      default: false,\n    },\n    text: {\n      type: String,\n      default: undefined,\n    },\n    text_color: { // available colors from data.text_colors\n      type: String,\n      default: undefined,\n    },\n    text_bold: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    hover: {\n      type: Boolean,\n      default: true\n    },\n    gap: {\n      type: String,\n      default: '9px'\n    },\n    padding: {\n      type: String,\n      default: '11px 25px 11px 22px'\n    },\n    height: {\n      type: String,\n      default: '38px'\n    },\n    width: {\n      type: String,\n      default: 'fit-content'\n    },\n    radius: {\n      type: String,\n      default: '50px'\n    },\n    tooltip: {\n      type: String,\n      default: ''\n    }\n  },\n\n  data() {\n    return {\n      text_colors: {\n        magenta: '#da68f5',\n        blue: '#0bccf7',\n        green: '#00f6d2',\n        dark_blue: '#032e49',\n        white: '#ffffff',\n      },\n      button_colors: {\n        magenta: '#da68f5',\n        blue: '#0bccf7',\n        green: '#00f6d2',\n        transparent: 'transparent',\n        carnation:'#f9605b',\n        red: '#ff746b',\n      },\n      tip_left: -1,\n      tip_top: -1\n    }\n  },\n\n  computed: {\n    has_icon () {\n      return !!this.$slots.default\n    },\n\n    text_style() {\n      if (!this.text) {\n        return\n      }\n\n      let tcolor = this.text_color \n      if (!tcolor) {\n        tcolor = this.color == 'transparent' || this.color == undefined ? 'white' : 'dark_blue'\n      }\n      \n      if (this.text_colors[tcolor]) {\n        tcolor = this.text_colors[tcolor]\n      }\n\n      let res = {\n        'color': tcolor,\n        'font-weight': this.text_bold ? 'bold' : 'normal'\n      }\n  \n      if (this.has_icon) {\n        let tgap_pos = this.reverse ? 'right' : 'left'\n        res[`margin-${tgap_pos}`] = this.gap\n      }\n\n      if (this.disabled) {\n        res['opacity'] = 0.3\n      }\n\n      return res\n    },\n\n    button_style() {\n      return {\n        'background-color': this.button_colors[this.color] || this.color,\n        'padding': this.padding,\n        'height': this.height,\n        'width': this.width,\n        'border-radius': this.radius\n      }\n    },\n\n    tip_style() {\n      let res = {\n        background: utils.getStyles().background_popup\n      }\n\n      if (this.tip_left != -1) {\n        res['left'] = [this.tip_left, 'px'].join('')\n      }\n\n      if (this.tip_top != -1) {\n        res['top'] = [this.tip_top, 'px'].join('')\n      }\n\n      return res\n    }\n  },\n\n  methods: {\n    onMouseOver() {\n      let tooltip = this.$refs.tooltip\n      \n      if (!tooltip) {\n        return\n      }\n\n      let tipRect  = tooltip.getBoundingClientRect()\n      let tipRight = tipRect.right\n      let windowWidth  = window.innerWidth\n      \n      if (tipRight > windowWidth) {\n        this.tip_left = windowWidth - tipRect.width\n      }\n\n      let button = this.$refs.button\n      let btnRect = button.getBoundingClientRect()\n      let btnBottom = btnRect.bottom\n      this.tip_top  = btnBottom + 12\n    }\n  }\n}\n</script>\n",".button {\n  font-family: 'SFProDisplay', sans-serif;\n  white-space: nowrap;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  border: none;\n  cursor: pointer;\n  background-color: rgba(255,255,255,0.1);\n  user-select: none;\n  position: relative;\n}\n.button:not(.disabled):hover {\n  box-shadow: 0 0 8px #fff;\n}\n.button.disabled {\n  opacity: 0.6;\n  cursor: auto;\n}\n.button.disabled :slotted(img) {\n  opacity: 0.35;\n}\n.button:focus {\n  outline: none;\n}\n.button.reverse {\n  flex-direction: row-reverse;\n}\n.button.transparent {\n  border-radius: 0;\n}\n.button.transparent:not(.disabled):hover {\n  box-shadow: none;\n}\n.button.no-hover:hover {\n  box-shadow: none;\n}\n.button > span {\n  padding-bottom: 1px;\n}\n.button > .tooltip {\n  box-sizing: border-box;\n  visibility: hidden;\n  backdrop-filter: blur(10px);\n  color: #fff;\n  border-radius: 6px;\n  padding: 11px 11px;\n  position: fixed;\n  z-index: 1;\n  font-family: 'SFProDisplay', sans-serif;\n  font-size: 14px;\n  opacity: 0.85;\n}\n.button:hover .tooltip {\n  visibility: visible;\n}\n","<template>\n  <modal ref=\"modal\" max_width=\"70%\">\n    <div class=\"error-modal\">\n      <div class=\"title\">{{ title }}</div>\n      <div class=\"description\">\n        Something went wrong. Gallery will be automatically reloaded.<br>\n        If you come across this problem again, copy error message using the copy button send it to support.\n      </div>\n      <div class=\"content\">\n        <pre class=\"error-text\">\n          {{ errtext }}\n        </pre>\n        <btn class=\"btn-copy\" color=\"transparent\" padding=\"11px 0 11px 10px\" @click=\"onCopy\">\n          <img src=\"~assets/copy.svg\"/>\n        </btn>\n      </div>\n      <div class=\"restart\">Restarting in {{ errleft }}s</div>\n      <btn color=\"carnation\" padding=\"10px 30px 10px 30px\" text=\"ok\" @click=\"onOK\">\n        <img src=\"~assets/ok.svg\"/> \n      </btn>\n    </div>\n  </modal>\n</template>\n\n<style scoped lang=\"stylus\">\n  .error-modal {\n    display: flex\n    flex-direction: column\n    align-items: center\n    font-family: 'SFProDisplay', sans-serif\n\n    .title {\n      font-family: 'SFProDisplay', sans-serif\n      font-size: 18px\n      font-weight: 700\n      margin-bottom: 20px\n      font-style: normal\n      text-align: center\n      color: #fff\n    }\n\n    .description {\n      text-align: center\n      font-size: 14px\n      line-height: 21px\n      font-style: normal\n      font-weight: 400\n      margin-bottom: 15px\n    }\n\n    .content {\n      display: flex\n      flex-direction: row\n      align-items: center\n      justify-content: center\n      max-width: 100%\n      overflow: hidden\n\n      .error-text {\n        font-family: 'SFProDisplay', sans-serif\n        font-weight: normal\n        color: rgba(255, 90, 90, 1)\n        overflow: hidden\n      }\n\n      .btn-copy {\n        cursor: pointer\n        margin-left: 10px\n        flex: 1\n      }\n    }\n    \n    .restart {\n      color: rgba(255, 255, 255, 0.7)\n      text-align: center\n      margin: 15px 0px 25px\n    }\n  }\n</style>\n\n<script>\nimport modal from 'controls/modal'\nimport btn from 'controls/button'\nimport utils from 'utils/utils'\n\nexport default {\n  components: {\n    modal, btn\n  },\n  props: {\n    error: {\n      default: undefined,\n      type: [String, Object]\n    },\n    title: {\n      type: String,\n      default: 'Gallery Error'\n    },\n  },\n  emits: ['copy'],\n\n  data () {\n    return {\n      errleft: 0,\n      timeout: null,\n    }\n  },\n\n  computed: {\n    errtext() {\n      let full = this.errfull\n      if (this.$state.debug) {\n        return full\n      }\n\n      const maxLines = 10\n      let split = full.split('\\n')\n      \n      if  (split.length > maxLines) {\n        split = split.slice(0, maxLines)\n        split.push('...')\n      }\n    \n      return split.join('\\n')\n    },\n\n    errfull() {\n      let formatError = (error) =>  {\n        if (typeof error === 'string') {\n          return error\n        }\n        \n        if (error instanceof Error) {\n          return error.cause ? [error.stack, formatError(error.cause)].join('\\n') : error.stack\n        }\n\n        error = Object.assign({}, error)\n        const maxLen = 50\n\n        if (error.answer && error.answer.result) {\n          if(error.answer.result.raw_data) {\n            // error.answer.result.raw_data = '--excluded--'\n          }\n\n          if (error.answer.result.output && error.answer.result.output.length > maxLen) {\n            // error.answer.result.output = error.answer.result.output.substring(0, maxLen) + ' --excluded--'\n          }\n        }\n        return utils.formatJSON(error)\n      }\n      return formatError(this.error.error)\n    }\n  },\n\n  mounted () {\n    this.errleft = 10\n    this.$refs.modal.open()\n    this.timeout = setInterval(() => {\n      this.errleft -= 1\n      if (this.errleft == 0) {\n        this.close()\n      }\n    }, 1000)\n  },\n\n  methods: {\n    onCopy() {\n      utils.copyText(this.errfull)\n    },\n \n    onOK() {\n      this.close()\n    },\n\n    close () {\n      clearInterval(this.timeout)\n      this.$refs.modal.close()\n      this.$store.clearError()\n    }\n  }\n}\n</script>",".error-modal {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.error-modal .title {\n  font-family: 'SFProDisplay', sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 20px;\n  font-style: normal;\n  text-align: center;\n  color: #fff;\n}\n.error-modal .description {\n  text-align: center;\n  font-size: 14px;\n  line-height: 21px;\n  font-style: normal;\n  font-weight: 400;\n  margin-bottom: 15px;\n}\n.error-modal .content {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  max-width: 100%;\n  overflow: hidden;\n}\n.error-modal .content .error-text {\n  font-family: 'SFProDisplay', sans-serif;\n  font-weight: normal;\n  color: #ff5a5a;\n  overflow: hidden;\n}\n.error-modal .content .btn-copy {\n  cursor: pointer;\n  margin-left: 10px;\n  flex: 1;\n}\n.error-modal .restart {\n  color: rgba(255,255,255,0.7);\n  text-align: center;\n  margin: 15px 0px 25px;\n}\n","<template>\n  <div v-if=\"!wait\" class=\"app-loading\">\n    <img src=\"~assets/loading.svg\" width=\"204\" height=\"236\"/>\n    <div class=\"title\">{{ text }}</div>\n    <div>Please wait...</div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.app-loading {\n  text-align: center\n  width: 100%\n  height: 100%\n  display: flex\n  flex-direction: column\n  justify-content: center\n  align-items: center\n  box-sizing: border-box\n  padding-bottom: 40px\n  font-size: 14px\n  user-select: none\n\n  .title {\n    font-size: 17px\n    font-weight: 400\n    user-select: none\n    margin: 20px 0px 3px 0px\n  }\n}\n</style>\n\n<script>\nexport default {\n  props: {\n    text: {\n      type: String,\n      default: 'BEAM Gallery is loading'\n    }\n  },\n  data() {\n    return {\n      wait: false\n    }\n  },\n  mounted() {\n    /* \n      If we switch between pages in gallery loader appears and then disappears quickly. \n      This looks like blinking. So we delay it and display only if items are taking long time to load.\n    */\n    this.history = this.$store.getPrevPage()\n    if (this.history) {\n      this.wait = true\n    }\n    setTimeout(() => {\n      this.wait = false\n    }, 1500)\n  }\n}\n</script>\n",".app-loading {\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  padding-bottom: 40px;\n  font-size: 14px;\n  user-select: none;\n}\n.app-loading .title {\n  font-size: 17px;\n  font-weight: 400;\n  user-select: none;\n  margin: 20px 0px 3px 0px;\n}\n","<template>\n  <span id=\"modals\"/>\n  <errorModal v-if=\"error\" :error=\"error\"/>\n  <loading v-if=\"loading\" id=\"container\" :text=\"loading\"/>\n  <div v-else id=\"container\" class=\"container\">\n    <router-view/>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.container {\n  width: 100%\n  height: 100%\n}\n</style>\n\n<script>\nimport errorModal from 'components/error-modal'\nimport loading from 'controls/loading'\n\nexport default {\n  components: { \n    loading, errorModal\n  },\n  computed: {\n    error () {\n      return this.$state.error\n    },\n    debug () {\n      return this.$state.debug\n    },\n    loading () {\n      return this.$state.loading\n    }\n  },\n  mounted() {\n    document.addEventListener('keydown', event => {\n      if (event.isComposing || event.keyCode === 229) {\n        return\n      }\n      if (event.code === 'KeyD' && event.ctrlKey && event.shiftKey) {\n        this.$store.toggleDebug()\n      }\n    }, true)\n  }\n}\n</script>",".container {\n  width: 100%;\n  height: 100%;\n}\n","<template>\n  <div class=\"back-btn\" @click=\"$store.toBack()\">\n    <img src=\"~assets/back.svg\"/>\n    {{ text }}\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .back-btn {\n    display: flex\n    align-items: center\n    cursor: pointer\n    font-size: 14px\n    font-weight: bolder\n    letter-spacing: 1.5px\n    opacity: 0.9\n\n    & img {\n      margin-right: 0.25em\n      width: 14px\n      height: 14px\n    }\n  }\n</style>\n\n<script>\nimport utils from 'utils/utils'\n\nexport default {\n  props: {\n    text: {\n      type: String,\n      required: false,\n      default: utils.isCompact() ? '' : 'back'\n    },\n  }\n}\n</script>\n",".back-btn {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bolder;\n  letter-spacing: 1.5px;\n  opacity: 0.9;\n}\n.back-btn img {\n  margin-right: 0.25em;\n  width: 14px;\n  height: 14px;\n}\n","<template>\n  <div :class=\"['page-title-container', compact ? 'compact' : '']\">\n    <div class=\"title\">{{ title }}</div>\n    <div class=\"overlay\">\n      <backBtn/>\n      <div/>\n      <div class=\"slot\">\n        <slot></slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .page-title-container {\n    min-height: 43px \n    user-select: none\n    display: flex\n    justify-content: center\n    align-items: center\n    position: relative\n\n    &.compact {\n      padding: 0 0 0 5px\n    }\n\n    .overlay {\n      width: 100%\n      min-height: 100%\n      position: absolute\n      left: 0\n      top: 0\n      display: flex\n      flex-flow: row\n      justify-content: center\n      align-items: center\n\n      & > * {\n        flex-grow: 1\n        flex-basis: 0\n      }\n\n      & > .slot {\n        display: flex\n        justify-content: flex-end\n        align-items: center\n\n        & :slotted(*) {\n          margin-left: 12px\n          margin-top: 5px\n\n          &:last-child {\n            margin-right: 8px\n          }\n        }\n      }\n    }\n    \n    & > .title {\n      display: flex\n      justify-content: center\n      align-items: center\n      font-family: 'SFProDisplay', sans-serif\n      font-weight: 700\n      font-size: 14px\n      line-height: 17px\n      text-transform: uppercase\n      letter-spacing: 3.1px\n      color: #fff\n      flex: 1\n    }\n  }\n</style>\n\n<script>\nimport backBtn from 'controls/btn-back'\nimport utils from 'utils/utils'\n\nexport default {\n  components: {\n    backBtn\n  },\n\n  props: {\n    title: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n\n  data () {\n    return {\n      compact: utils.isCompact()\n    }\n  }\n}\n</script>\n",".page-title-container {\n  min-height: 43px;\n  user-select: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n}\n.page-title-container.compact {\n  padding: 0 0 0 5px;\n}\n.page-title-container .overlay {\n  width: 100%;\n  min-height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n  align-items: center;\n}\n.page-title-container .overlay > * {\n  flex-grow: 1;\n  flex-basis: 0;\n}\n.page-title-container .overlay > .slot {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n}\n.page-title-container .overlay > .slot :slotted(*) {\n  margin-left: 12px;\n  margin-top: 5px;\n}\n.page-title-container .overlay > .slot :slotted(*):last-child {\n  margin-right: 8px;\n}\n.page-title-container > .title {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: 'SFProDisplay', sans-serif;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  text-transform: uppercase;\n  letter-spacing: 3.1px;\n  color: #fff;\n  flex: 1;\n}\n","<template>\n  <modal ref=\"modal\">\n    <div class=\"content\">\n      <div class=\"title\">{{ title }}</div>\n      <div class=\"message\" v-html=\"message\"/>\n      <div class=\"controls\">\n        <btn text=\"close\" :color=\"error ? 'red' : undefined\" @click=\"close\">\n          <img v-if=\"error\" src=\"~assets/cancel-blue.svg\">\n          <img v-else src=\"~assets/cancel.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style scoped lang=\"stylus\">\n  .content {\n    display: flex\n    flex-direction: column\n    align-items: center\n    \n    .title {\n      font-size: 18px\n      font-weight: bold\n      color: #fff\n    }\n\n    .message {\n      margin-top: 30px\n      text-align: center\n    }\n      \n    .controls {\n      margin-top: 35px\n      display: flex\n      flex-direction: row\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n  }\n</style>\n\n<script>\nimport modal from 'controls/modal'\nimport btn from 'controls/button'\n\nexport default {\n  components: { \n    modal, btn\n  },\n\n  data() {\n    return {\n      error: false,\n      title: '',\n      message: ''\n    }\n  },\n\n  methods: {\n    open (title, message, error) {\n      this.error = error\n      this.title = title\n      this.message = message\n      this.$refs.modal.open()\n    },\n    close () {\n      this.$refs.modal.close()\n    }\n  }\n}\n</script>",".content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.content .title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #fff;\n}\n.content .message {\n  margin-top: 30px;\n  text-align: center;\n}\n.content .controls {\n  margin-top: 35px;\n  display: flex;\n  flex-direction: row;\n}\n.content .controls > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <modal ref=\"modal\">\n    <div class=\"content\">\n      <div class=\"title\">{{ name }} Artist Key</div>\n      <div class=\"data\">\n        <span>{{ computed_key }}</span>\n        <btn class=\"icon-copy\" color=\"transparent\" padding=\"11px 0 11px 10px\" @click=\"onCopy\">\n          <img src=\"~assets/copy.svg\"/>\n        </btn>\n      </div>\n      <div class=\"controls\">\n        <btn text=\"close\" @click=\"close\">\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn text=\"copy and close\" color=\"green\" @click=\"onCopyAndClose\">\n          <img src=\"~assets/copy-blue.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style scoped lang=\"stylus\">\n  .content {\n    display: flex\n    flex-direction: column\n    align-items: center\n    \n    .title {\n      font-size: 18px\n      font-weight: bold\n      color: #fff\n    }\n\n    .data {\n      margin-top: 30px\n      display: flex\n      flex-direction: row\n      align-items: center\n\n      .icon-copy {\n        cursor: pointer\n      }\n    }\n      \n    .controls {\n      margin-top: 30px\n      display: flex\n      flex-direction: row\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n  }\n</style>\n\n<script>\nimport modal from 'controls/modal'\nimport btn from 'controls/button'\nimport utils from 'utils/utils'\nimport artistsStore from 'stores/artists'\n\nexport default {\n  components: { \n    modal, btn\n  },\n\n  props: {\n    name: {\n      type: String,\n      default: 'Your'\n    },\n    artist_key: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  computed: {\n    computed_key () {\n      return this.artist_key || artistsStore.my_id\n    },\n  },\n\n  methods: {\n    onCopyAndClose() {\n      this.onCopy()\n      this.close()\n    },\n  \n    onCopy() {\n      utils.copyText(this.computed_key)\n    },\n\n    open () {\n      this.$refs.modal.open()\n    },\n\n    close () {\n      this.$refs.modal.close()\n    }\n  }\n}\n</script>",".content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.content .title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #fff;\n}\n.content .data {\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.content .data .icon-copy {\n  cursor: pointer;\n}\n.content .controls {\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n}\n.content .controls > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <div class=\"tabs-container\">\n    <div v-for=\"tab of tabs\"\n         :key=\"tab.id\"\n         :class=\"[ modelValue === tab.id ? 'tab-active' : '','tab-item']\" \n         @click=\"$emit('update:modelValue', tab.id)\"\n    >\n      <div :class=\"['title', compact ? 'compact': '']\">{{ tab.name }}</div>\n      <div v-if=\"modelValue === tab.id\" class=\"bottom-line\"></div>\n    </div>\n    <div class=\"slot\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .tabs-container {\n    display: flex\n    flex-direction: row\n    align-items: center\n    width: 100%\n    user-select: none\n    \n    .slot {\n      margin-left: auto\n      display: flex\n      align-items: center\n\n      & :slotted(*) {\n        margin-left: 12px\n        margin-top: 5px\n\n        &:last-child {\n          margin-right: 8px\n        }\n      }\n    }\n\n    .tab-item {\n      color: rgba(255, 255, 255, 0.3)\n      font-size: 12px\n      font-weight: bold\n      cursor: pointer\n      white-space: nowrap\n\n      .title {\n        padding: 4px 16px\n        text-transform: uppercase\n\n        &.compact {\n          padding: 4px 8px\n        }\n      }\n    }\n\n    .tab-active {\n      color: #fff\n\n      .bottom-line {\n        height: 2px\n        width: 100%\n        box-shadow: 0 0 5px 0 rgba(0, 246, 210, 0.7)\n        background-color: #00f6d2\n      }\n    }\n  }\n</style>\n\n<script>\nimport utils from 'utils/utils'\n\nexport default {\n  props: {\n    tabs: {\n      type: Array,\n      required: true\n    },\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: Number,\n      required: true\n    }\n  },\n\n  emits: [\n    'update:modelValue'\n  ],\n\n  data () {\n    return {\n      compact: utils.isCompact()\n    }\n  }\n}\n</script>\n",".tabs-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  user-select: none;\n}\n.tabs-container .slot {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n}\n.tabs-container .slot :slotted(*) {\n  margin-left: 12px;\n  margin-top: 5px;\n}\n.tabs-container .slot :slotted(*):last-child {\n  margin-right: 8px;\n}\n.tabs-container .tab-item {\n  color: rgba(255,255,255,0.3);\n  font-size: 12px;\n  font-weight: bold;\n  cursor: pointer;\n  white-space: nowrap;\n}\n.tabs-container .tab-item .title {\n  padding: 4px 16px;\n  text-transform: uppercase;\n}\n.tabs-container .tab-item .title.compact {\n  padding: 4px 8px;\n}\n.tabs-container .tab-active {\n  color: #fff;\n}\n.tabs-container .tab-active .bottom-line {\n  height: 2px;\n  width: 100%;\n  box-shadow: 0 0 5px 0 rgba(0,246,210,0.7);\n  background-color: #00f6d2;\n}\n","<template>\n  <div class=\"paginator\">\n    <span class=\"prev\" :disabled=\"!hasPrev\" @click=\"hasPrev ? changePage(current - 1) : undefined\">Prev</span>\n    <span v-if=\"hasFirst\" class=\"page\" @click=\"changePage(1)\">1</span>\n    <span v-if=\"hasFirst\" class=\"page\">...</span>\n    <span v-for=\"page in pages\" :key=\"page\" class=\"page\" :selected=\"current == page\" @click=\"changePage(page)\">\n      {{ page }}\n    </span>\n    <span v-if=\"hasLast\" class=\"page\">...</span>\n    <span v-if=\"hasLast\" class=\"page\" @click=\"changePage(total)\">{{ total }}</span>\n    <span class=\"next\" :disabled=\"!hasNext\" @click=\"hasNext ? changePage(current + 1) : undefined\">Next</span>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.paginator {\n  display: flex\n  justify-content: center\n  align-items: center\n  margin-top: 10px\n  margin-bottom: 2px\n\n  & > .prev\n  & > .next {\n    width: 68px !important\n    height: 22px\n    border-radius: 2px\n    background-color: rgba(255, 255, 255, 0.1)\n    color: rgba(255, 255, 255, 0.5)\n    font-size: 14px\n    text-align: center\n    user-select: none\n\n    &[disabled=\"true\"] {\n      color: rgba(255, 255, 255, 0.15)\n    }\n\n    &:hover:not([disabled=\"true\"]) {\n      color: rgba(255, 255, 255, 0.9)\n      cursor: pointer\n    }\n  }\n\n  & > .prev {\n    margin: 0 13px 0 0\n  }\n\n  & > .next {\n    margin: 0 0 0 16px\n  }\n  \n  & > .page {\n    margin: 3px 7px\n    font-size: 14px\n    color: rgba(255, 255, 255, 0.5)\n    cursor: pointer\n    user-select: none\n\n    &[selected=\"true\"] {\n      cursor: auto\n      color: #00f6d2\n    }\n\n    &:hover:not([selected=\"true\"]) {\n      color: rgba(255, 255, 255, 0.9)\n      cursor: pointer\n    }\n  }\n}\n</style>\n\n<script>\nexport default {\n  props: {\n    current: {\n      type: Number,\n      default: 1\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    page_range: {\n      type: Number,\n      default: 2\n    }\n  }, \n\n  emits: [\n    'page-changed'\n  ],\n\n  computed: {\n    hasFirst () {\n      return this.rangeStart !== 1\n    },\n    hasLast () {\n      return this.rangeEnd < this.total\n    },\n    hasPrev () {\n      return this.current > 1\n    },\n    hasNext () {\n      return this.current < this.total\n    },\n    rangeStart () {\n      var start = this.current + this.page_range <= this.total ? this.current - this.page_range : this.total - this.page_range\n      return (start > 0) ? start : 1\n    },\n    rangeEnd () {\n      var end = this.rangeStart + (this.current > this.page_range ? this.page_range * 2 : this.page_range)\n      return (end < this.total) ? end : this.total\n    },\n    pages () {\n      var pages = []\n      for (var i = this.rangeStart; i <= this.rangeEnd; i++) {\n        pages.push(i)\n      }\n      return pages\n    },\n  },\n\n  methods: {\n    changePage (page) {\n      if (page != this.current) {\n        this.$emit('page-changed', page)\n      }\n    }\n  },\n}\n</script>",".paginator {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 2px;\n}\n.paginator > .prev,\n.paginator > .next {\n  width: 68px !important;\n  height: 22px;\n  border-radius: 2px;\n  background-color: rgba(255,255,255,0.1);\n  color: rgba(255,255,255,0.5);\n  font-size: 14px;\n  text-align: center;\n  user-select: none;\n}\n.paginator > .prev[disabled=\"true\"],\n.paginator > .next[disabled=\"true\"] {\n  color: rgba(255,255,255,0.15);\n}\n.paginator > .prev:hover:not([disabled=\"true\"]),\n.paginator > .next:hover:not([disabled=\"true\"]) {\n  color: rgba(255,255,255,0.9);\n  cursor: pointer;\n}\n.paginator > .prev {\n  margin: 0 13px 0 0;\n}\n.paginator > .next {\n  margin: 0 0 0 16px;\n}\n.paginator > .page {\n  margin: 3px 7px;\n  font-size: 14px;\n  color: rgba(255,255,255,0.5);\n  cursor: pointer;\n  user-select: none;\n}\n.paginator > .page[selected=\"true\"] {\n  cursor: auto;\n  color: #00f6d2;\n}\n.paginator > .page:hover:not([selected=\"true\"]) {\n  color: rgba(255,255,255,0.9);\n  cursor: pointer;\n}\n","<template>\n  <div class=\"select-container\" :style=\"style\">\n    <img :src=\"`assets/${icon}.svg`\" alt=\"icon\" :style=\"icon_style\">\n    <slot></slot>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n.select-container {\n  position: relative\n  cursor: pointer\n  width: 100%\n  min-width: 0\n  box-sizing: border-box\n\n  & > img {\n    position: absolute\n    z-index: 999\n    user-select: none\n    opacity: 0.9\n  }\n}\n</style>\n\n<script>\n\nexport default {\n  props: {\n    border_radius: {\n      type: String,\n      default: '10px',\n    },\n    left: {\n      type: String,\n      required: false,\n      default: '20px'\n    },\n    top: {\n      type: String,\n      required: false,\n      default: '18px'\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        'border-radius': this.border_radius,\n        'border': this.selected ? '1px solid rgba(0, 246, 210, 0.6)' : '1px solid transparent',\n      }\n    },\n\n    icon_style() {\n      return {\n        'top': this.top,\n        'left': this.left,\n      }\n    },\n\n    icon() {\n      return this.selected ? 'item-selected' : 'item-unselected'\n    }\n  }\n}\n</script>\n",".select-container {\n  position: relative;\n  cursor: pointer;\n  width: 100%;\n  min-width: 0;\n  box-sizing: border-box;\n}\n.select-container > img {\n  position: absolute;\n  z-index: 999;\n  user-select: none;\n  opacity: 0.9;\n}\n","<template>\n  <div class=\"list-container\">\n    <div v-if=\"items === undefined\" class=\"empty\">\n      <!-- If items are loaded from local store it is quite quick,\n           loader appears and then disappears quickly. This looks like blinking.\n           So we delay it and display only if items are taking long time to load.\n       -->\n      <template v-if=\"delay_passed\">\n        <img src=\"~assets/empty-gallery.svg\"/>\n        <div class=\"text\">Loading {{ items_name }}...</div>\n      </template>\n    </div>\n    <template v-else-if=\"items && items.length > 0 || new_component\">\n      <div :class=\"compact ? 'list-wrap-compact' : 'list-wrap'\">  \n        <div ref=\"itemslist\" class=\"list\" @scroll=\"onScroll\">\n          <template v-if=\"selectable\">\n            <selectItem v-for=\"item in items\" \n                        :key=\"item.id\" \n                        :left=\"selector_left\" \n                        :top=\"selector_top\" \n                        :selected=\"selected.includes(item.id)\"\n                        @click=\"onSelected(item.id)\"\n            >\n              <component :is=\"component\" \n                         :item=\"item\"\n                         v-bind=\"component_props\"\n              />\n            </selectitem>\n          </template>\n          <template v-else>\n            <component :is=\"component\" v-for=\"item in items\"\n                       :key=\"item.id\"\n                       :item=\"item\"\n                       v-bind=\"component_props\"\n            />\n          </template>\n          <component :is=\"new_component\" v-if=\"show_new\" v-bind=\"new_component_props\"/>\n        </div>\n      </div>\n      <paginator :current=\"page\"\n                 :total=\"pages\"\n                 @page-changed=\"onPage\"\n      />\n    </template>\n    <div v-else class=\"empty\"> \n      <img src=\"~assets/empty-gallery.svg\"/>\n      <div class=\"text\">There are no {{ items_name }} at the moment</div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .list-container {\n    display: flex\n    flex-direction: column\n    min-height: 0\n\n    & > .list-wrap {\n      overflow-y: auto\n      overflow-x: hidden\n      justify-content: center\n\n      & > .list {\n        display: flex\n        flex-wrap: wrap        \n        margin: -8px -8px 0 -8px\n\n        & > * {\n          margin: 8px\n        }\n      }\n    }\n\n    & > .list-wrap-compact {\n      overflow-y: overlay\n      overflow-x: hidden\n\n      & > .list {\n        display: flex\n        flex-wrap: wrap\n        justify-content: center\n        margin: -8px -8px 0 -8px\n\n        & > * {\n          margin: 8px\n        }\n      }\n    }\n\n    .empty {\n      margin: 100px auto 0 auto\n      display: flex\n      align-items: center\n      flex-direction: column\n      user-select: none\n\n      & > .text {\n        margin-top: 30px\n        opacity: 0.5\n        font-size: 14px\n        line-height: 1.43\n        text-align: center\n        color: #fff\n      }\n    }\n  }\n</style>\n\n<script>\nimport paginator from 'controls/paginator'\nimport selectItem from 'controls/select-item'\nimport utils from 'utils/utils'\nimport {computed, ref} from 'vue'\n\nexport default {\n  components: {\n    paginator,\n    selectItem\n  },\n\n  props: {\n    store: {\n      type: Object,\n      required: true\n    },\n    mode: {\n      type: String,\n      default: 'user'\n    },\n    component: {\n      type: String,\n      required: true,\n      default: undefined\n    },\n    component_props: {\n      type: Object,\n      default: undefined\n    },\n    items_name: {\n      type: String,\n      default: 'items'\n    },\n    gap: {\n      type: String,\n      default: '16px'\n    },\n    new_component: {\n      type: String,\n      default: ''\n    },\n    new_component_props: {\n      type: Object,\n      default: undefined\n    },\n    selected: {\n      type: Array,\n      default: undefined\n    },\n    selector_left: {\n      type: String,\n      default: '20px'\n    },\n    selector_top: {\n      type: String,\n      default: '18px'\n    }\n  },\n\n  emits: [\n    'selected'\n  ],\n\n  setup (props) {\n    let subscription = undefined\n    const itemsObservable = computed(() => {\n      if (subscription) {\n        subscription.unsubscribe()\n      }\n\n      const value = ref(undefined)\n      const lazyItems = props.store.getLazyPageItems(props.mode)\n      subscription = lazyItems.subscribe({\n        next: val => value.value = val,\n        error: () => {throw new Error('observable failed')}\n      })\n\n      return value\n    })\n\n    const items = computed(() => itemsObservable.value.value)\n    const page = computed(() => props.store.getPage(props.mode))\n    const pages = computed(() => props.store.getPages(props.mode))\n    const show_new = computed(() => props.new_component && page.value === pages.value)\n    const selectable = computed(() => !!props.selected)\n\n    return {\n      items,\n      page,\n      pages,\n      show_new,\n      selectable\n    }\n  },\n\n  data () {\n    return {\n      delay_passed: true,\n      // TODO: make this global somehow\n      compact: utils.isCompact()\n    }\n  },\n\n  mounted() {\n    if(this.items && this.items.length && this.$route.hash) {\n      this.$refs.itemslist.scrollTop = this.$route.hash.substr(1)\n    }\n    this.clearDelay()\n  },\n\n  methods: {\n    clearDelay() {\n      this.delay_passed = false\n      setTimeout(() => {\n        this.delay_passed = true\n      }, 100)\n    },\n    onScroll(ev) {\n      let pos = ev.target.scrollTop\n      this.$router.replace({name: this.$route.name, hash: `#${pos}`})\n    },\n    onPage(page) {\n      this.$refs.itemslist.scrollTop = 0\n      this.store.setPage(this.mode, page)\n      this.clearDelay()\n    },\n    onSelected(id) {\n      this.$emit('selected', id)\n    }\n  }\n}\n</script>\n",".list-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n}\n.list-container > .list-wrap {\n  overflow-y: auto;\n  overflow-x: hidden;\n  justify-content: center;\n}\n.list-container > .list-wrap > .list {\n  display: flex;\n  flex-wrap: wrap;\n  margin: -8px -8px 0 -8px;\n}\n.list-container > .list-wrap > .list > * {\n  margin: 8px;\n}\n.list-container > .list-wrap-compact {\n  overflow-y: overlay;\n  overflow-x: hidden;\n}\n.list-container > .list-wrap-compact > .list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: -8px -8px 0 -8px;\n}\n.list-container > .list-wrap-compact > .list > * {\n  margin: 8px;\n}\n.list-container .empty {\n  margin: 100px auto 0 auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  user-select: none;\n}\n.list-container .empty > .text {\n  margin-top: 30px;\n  opacity: 0.5;\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: center;\n  color: #fff;\n}\n","<template>\n  <div class=\"my-page\">\n    <pageTitle :title=\"page_title\">\n      <btnEditArtist/>\n      <btnWallet/>\n      <btnKey/>\n    </pageTitle>\n    <p v-if=\"self_pending\" class=\"description pending\">\n      <i>\n        Your account is pending for approval by moderator.<br>\n        Artist name and pictures would not be shown in gallery. Approved NFTs and Collections would still be shown in gallery.\n      </i>\n    </p>\n    <p v-if=\"self_rejected\" class=\"description rejected\">\n      <i>\n        Your account is rejected by moderator. Edit your profile to resubmit for approval.<br>\n        Artist name and pictures would not be shown in gallery. Approved NFTs and Collections would still be shown in gallery.\n      </i>\n    </p>\n    <div class=\"gallery-container\">\n      <tabsctrl v-model=\"active_tab\" :tabs=\"tabs\"/>\n      <list v-if=\"show_collections\"\n            class=\"list\"\n            items_name=\"your collections\"\n            component=\"collection\"\n            new_component=\"create-collection\"\n            mode=\"artist\"\n            :store=\"collsStore\"\n            :component_props=\"{'mode': 'artist'}\"\n      />\n      <list v-if=\"show_owned\"\n            class=\"list\"\n            items_name=\"owned NFTs\"\n            component=\"nft\"\n            mode=\"owned\"\n            :new_component=\"is_artist? 'create-nft' : ''\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': 'artist'}\"\n      />\n      <list v-if=\"show_sale\"\n            class=\"list\"\n            items_name=\"on sale NFTs\"\n            component=\"nft\"\n            mode=\"owned:sale\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': 'artist'}\"\n      />\n      <list v-if=\"show_sold\"\n            class=\"list\"\n            items_name=\"sold NFTs\"\n            component=\"nft\"\n            mode=\"artist:sold\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': 'artist'}\"\n      />\n      <list v-if=\"show_liked\"\n            class=\"list\"\n            items_name=\"liked NFTs\"\n            component=\"nft\"\n            mode=\"liker:liked\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': 'artist'}\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .my-page {\n    width: 100%\n    height: 100%\n    display: flex\n    flex-direction: column\n\n    .description {\n      font-size: 14px\n      text-align: center\n      margin: 0px 0px 10px 0px\n      font-family: 'SFProDisplay', sans-serif\n\n      &.pending {\n        color: #ed69ff\n        opacity: 0.8\n      }\n\n      &.rejected {\n        color: #ff746b\n        opacity: 0.8\n      }\n\n      & > i {\n        display: block\n        margin-top: 6px\n      }\n    }\n\n    & > .gallery-container {\n      flex: 1\n      box-sizing: border-box\n      display: flex\n      flex-direction: column\n      min-height: 0\n      margin-top: 15px\n\n      & > .list {\n        margin-top: 20px\n        flex: 1\n      }\n    }\n  }\n</style>\n\n<script>\nimport pageTitle from 'controls/page-title'\nimport btnWallet from 'controls/btn-wallet'\nimport btnEditArtist from 'controls/btn-edit-artist'\nimport btnKey from 'controls/btn-key'\nimport tabsctrl from 'controls/tabs'\nimport list from 'controls/lazy-list'\nimport collsStore from 'stores/collections'\nimport nftsStore from 'stores/nfts'\nimport artistsStore from 'stores/artists'\nimport utils from 'utils/utils'\nimport {my_tabs} from 'utils/consts'\n\nexport default {\n  components: {\n    pageTitle,\n    btnEditArtist,\n    btnWallet,\n    btnKey,\n    tabsctrl,\n    list\n  },\n\n  computed: {\n    active_tab: {\n      get() {\n        return this.$state.my_active_tab\n      },\n      set(value) {\n        this.$store.setMyTab(value)\n      }\n    },\n    collsStore() {\n      return collsStore\n    },\n    nftsStore() {\n      return nftsStore\n    },\n    is_artist() {\n      return artistsStore.is_artist\n    },\n    show_collections() {\n      return this.active_tab === my_tabs.COLLECTIONS\n    },\n    show_owned() {\n      return this.active_tab === my_tabs.OWNED_NFTS\n    },\n    show_sale() {\n      return this.active_tab == my_tabs.SALE_NFTS\n    },\n    show_sold() {\n      return this.active_tab == my_tabs.SOLD_NFTS\n    },\n    show_liked() {\n      return this.active_tab == my_tabs.LIKED_NFTS\n    },\n    page_title() {\n      return utils.isCompact() ? '' : 'my page'\n    },\n    tabs() {\n      let res = []\n\n      if (this.is_artist) {\n        res.push({id: my_tabs.COLLECTIONS, name: 'Collections'})\n      }\n\n      res.push({id: my_tabs.OWNED_NFTS, name: 'Owned NFTs'})\n      res.push({id: my_tabs.SALE_NFTS,  name: 'On Sale'})\n\n      if (this.is_artist) {\n        res.push({id: my_tabs.SOLD_NFTS,  name: 'Sold'})\n      }\n\n      res.push({id: my_tabs.LIKED_NFTS, name: 'Liked by Me'})\n      return res\n    },\n    self_pending () {\n      return (artistsStore.self || {}).pending\n    },\n    self_rejected () {\n      return (artistsStore.self || {}).rejected\n    }\n  }\n}\n</script>\n",".my-page {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.my-page .description {\n  font-size: 14px;\n  text-align: center;\n  margin: 0px 0px 10px 0px;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.my-page .description.pending {\n  color: #ed69ff;\n  opacity: 0.8;\n}\n.my-page .description.rejected {\n  color: #ff746b;\n  opacity: 0.8;\n}\n.my-page .description > i {\n  display: block;\n  margin-top: 6px;\n}\n.my-page > .gallery-container {\n  flex: 1;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  margin-top: 15px;\n}\n.my-page > .gallery-container > .list {\n  margin-top: 20px;\n  flex: 1;\n}\n","<template>\n  <div class=\"gallery-container\">\n    <tabsctrl v-model=\"active_tab\" class=\"tabs\" :tabs=\"tabs\">\n      <!-- div v-if=\"show_nfts\" class=\"selectors\">\n        <selector\n              v-on:selected=\"onAuthor\"\n              :options=\"artist_options\"\n              :selected=\"active_filter_by_artist\"\n              title=\"Author\"\n              v-if=\"artist_options.length\"\n        />\n        <selector v-model:selected=\"nfts_sort_by\"\n                  :options=\"selector_options\"\n                  title=\"Sort by\"\n        />\n      </div -->\n      <btn v-if=\"!compact && can_admin\" \n           :text=\"admin_btn_text\"\n           text_color=\"green\"\n           color=\"transparent\"\n           padding=\"11px 10px\"\n           @click=\"onAdmin\"\n      />\n      <btnWallet v-if=\"!compact\"/>\n      <btnKey v-if=\"!compact\"/>\n      <btnProfile/>\n    </tabsctrl>\n    <!-- searchInput v-model:search=\"search\" class=\"search_container\" :max_length=\"20\" placeholder=\"Search by artist, NFT or collection name...\"/>\n    {{ search }} -->\n    <list v-if=\"show_nfts\"\n          class=\"list\"\n          items_name=\"NFTs\"\n          component=\"nft\"\n          mode=\"user\"\n          :store=\"nftsStore\"\n    />\n    <list v-if=\"show_collections\"\n          class=\"list\"\n          items_name=\"collections\"\n          component=\"collection\"\n          mode=\"user\"\n          :store=\"collsStore\"\n    />\n    <list v-if=\"show_sale\"\n          class=\"list\"\n          items_name=\"NFTs om sale\"\n          component=\"nft\"\n          mode=\"user:sale\"\n          :store=\"nftsStore\"\n    />\n    <list v-if=\"show_liked\"\n          class=\"list\"\n          items_name=\"liked NFTs\"\n          component=\"nft\"\n          mode=\"user:liked\"\n          :store=\"nftsStore\"\n    />\n  </div>\n</template>\n\n<style lang=\"stylus\">\n.tabs {\n  & > .selectors {\n    padding-right: 12px\n    margin-top: 4px\n  }\n}\n</style>\n\n<style scoped lang=\"stylus\">\n  .gallery-container {\n    display: flex\n    flex-direction: column\n    width: 100%\n    height: 100%\n\n    & > .search_container {\n      display: flex\n      justify-content: flex-end\n      margin-top: 10px\n    }\n\n    & > .list {\n      margin-top: 20px\n      flex: 1\n    }\n  }\n</style>\n\n<script>\nimport tabsctrl from 'controls/tabs'\nimport btn from 'controls/button'\nimport btnKey from 'controls/btn-key'\nimport btnWallet from 'controls/btn-wallet'\nimport btnProfile from 'controls/btn-profile'\nimport list from 'controls/lazy-list'\nimport nftsStore from 'stores/nfts'\nimport collsStore from 'stores/collections'\nimport utils from 'utils/utils'\nimport {user_tabs, sort} from 'utils/consts'\n\nexport default {\n  components: {\n    tabsctrl,\n    btn,\n    btnKey,\n    btnWallet,\n    btnProfile,\n    list\n  },\n\n  data () {\n    return {\n      compact: utils.isCompact(),\n      tabs: [\n        {id: user_tabs.NFTS, name: 'NFTs'},\n        {id: user_tabs.COLLECTIONS, name: 'Collections'},\n        {id: user_tabs.SALE_NFTS, name: 'On Sale'},\n        {id: user_tabs.LIKED_NFTS, name: 'Liked'},\n      ],\n      search: '',\n      selector_options: [\n        {name: 'Added: Oldest to Newest', id: sort.OLDEST_TO_NEWEST},\n        {name: 'Added: Newest to Oldest', id: sort.NEWEST_TO_OLDEST},\n        {name: 'Price: Low to High', id: sort.PRICE_ASC},\n        {name: 'Price: High to Low', id: sort.PRICE_DESC},\n        {name: 'Likes: Low to High', id: sort.LIKES_ASC},\n        {name: 'Likes: High to Low', id: sort.LIKES_DESC}\n      ]\n    }\n  },\n\n  computed: {\n    active_tab: {\n      get () {\n        return this.$state.user_active_tab\n      },\n      set (value) {\n        this.$store.setUserTab(value)\n      }\n    },\n    can_admin () {\n      return this.$state.is_moderator || this.$state.is_admin\n    },\n    admin_btn_text () {\n      let role = ''\n\n      if (this.$state.is_moderator) {\n        role = 'moderator'\n      }\n\n      if (this.$state.is_admin) {\n        role = 'admin'\n      } \n\n      return `Open ${role} panel`\n    },\n    show_collections () {\n      return this.$state.user_active_tab == user_tabs.COLLECTIONS\n    },\n    show_nfts () {\n      return this.$state.user_active_tab == user_tabs.NFTS\n    },\n    show_sale () {\n      return this.$state.user_active_tab == user_tabs.SALE_NFTS\n    },\n    show_liked () {\n      return this.$state.user_active_tab == user_tabs.LIKED_NFTS\n    },\n    nftsStore () {\n      return nftsStore\n    },\n    collsStore () {\n      return collsStore\n    }\n  },\n  methods: {\n    onAdmin() {\n      this.$store.toAdmin()\n    }\n  }\n}\n</script>\n",".tabs > .selectors {\n  padding-right: 12px;\n  margin-top: 4px;\n}\n","<template>\n  <div class=\"amount-container\" :style=\"text_style\">\n    <img src=\"~assets/beam.svg\" :style=\"icon_style\"/>\n    <div>\n      <div>{{ value }} BEAM</div>\n      <div v-if=\"info\">{{ info }}</div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.amount-container {\n  display: flex\n  font-family: 'SFProDisplay', sans-serif\n  font-weight: bolder\n\n  & > *:not(:first-child) {\n    margin-left: 8px\n  }\n}\n</style>\n\n<script>\nimport utils from 'utils/utils'\n\nexport default {\n  props: {\n    amount: {\n      type: Number,\n      required: true,\n      default: 0\n    },\n    size: {\n      type: String,\n      default: '18px'\n    },\n    info: {\n      type: String,\n      default: ''\n    },\n    compact: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    value () {\n      return utils.formatAmountFixed(this.amount, 3)\n    },\n    text_style () {\n      return {\n        'font-size': this.size\n      }\n    },\n    icon_style () {\n      return {\n        'width': `${parseInt(this.size.substring(0, this.size.length-2)) + 6}px`\n      }\n    }\n  }\n}\n</script>",".amount-container {\n  display: flex;\n  font-family: 'SFProDisplay', sans-serif;\n  font-weight: bolder;\n}\n.amount-container > *:not(:first-child) {\n  margin-left: 8px;\n}\n","<template>\n  <keyModal ref=\"keyModal\"/>\n  <pageTitle title=\"balance\">\n    <btnEditArtist/>\n    <btnKey/>\n  </pageTitle>\n  <div :class=\"['balance-container', compact ? 'compact' : '']\">\n    <div class=\"balance\">\n      <div>\n        <div class=\"description\">Current balance</div>\n        <amount :amount=\"balance\"/>\n      </div>\n\n      <div v-if=\"balance\" class=\"withdraw\">\n        <btn text=\"withdraw\"\n             text_color=\"blue\"\n             color=\"transparent\"\n             height=\"20px\"\n             padding=\"0px\"\n             @click=\"onWithdrawClick\"\n        >\n          <img src=\"~assets/receive.svg\">\n        </btn>\n      </div>\n    </div>\n\n    <div class=\"balance\">\n      <div>\n        <div class=\"description\">Total sold NFT amount</div>\n        <amount :amount=\"total_sold.volume\"/>\n      </div>\n\n      <div>\n        <div class=\"description\">NFT sold</div>\n        <div>{{ total_sold.count }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.balance-container {\n  margin-bottom: 10px\n  margin-top: 20px\n\n  &:not(.compact) {\n    display: grid\n    grid-template-columns: 1fr 1fr\n    column-gap: 20px\n  }\n\n  &.compact {\n    display: grid\n    grid-template-columns: 1fr\n    row-gap: 20px\n  }\n\n  .balance {\n    background-color: rgba(255, 255, 255, 0.1)\n    display: grid\n    grid-template-columns: auto auto\n    border-radius: 10px\n    padding: 20px\n\n    & .description {\n      font-size: 12px\n      color: rgba(255, 255, 255, 0.5)\n      margin-bottom: 7px\n    }\n    \n    & .withdraw {\n      align-self: end\n      display: flex\n      justify-content: flex-end\n      padding-bottom: 10px\n    }\n  }\n}\n</style>\n\n<script>\nimport keyModal from 'components/key-modal'\nimport btn from 'controls/button'\nimport btnKey from 'controls/btn-key'\nimport btnEditArtist from 'controls/btn-edit-artist'\nimport pageTitle from 'controls/page-title'\nimport amount from 'controls/amount'\nimport artistsStore from 'stores/artists'\nimport utils from 'utils/utils'\n\nexport default {\n  components: {\n    keyModal,\n    btn,\n    pageTitle,\n    amount,\n    btnEditArtist,\n    btnKey\n  },\n\n  props: {\n    nft_sold: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  data () {\n    return {\n      compact: utils.isCompact()\n    }\n  },\n\n  computed: {\n    balance () {\n      return this.$state.balance_beam\n    },\n\n    my_name () {\n      let self = artistsStore.self\n      return (self || {}).label\n    },\n\n    total_sold () {\n      let self = artistsStore.self\n      if (self) return self.total_sold\n      return {count: 0, volume: 0, aid: 0}\n    }\n  },\n\n  methods: {\n    onWithdrawClick () {\n      if (this.$state.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n      this.$store.withdrawBEAM()\n    }\n  }\n}\n</script>\n",".balance-container {\n  margin-bottom: 10px;\n  margin-top: 20px;\n}\n.balance-container:not(.compact) {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 20px;\n}\n.balance-container.compact {\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: 20px;\n}\n.balance-container .balance {\n  background-color: rgba(255,255,255,0.1);\n  display: grid;\n  grid-template-columns: auto auto;\n  border-radius: 10px;\n  padding: 20px;\n}\n.balance-container .balance .description {\n  font-size: 12px;\n  color: rgba(255,255,255,0.5);\n  margin-bottom: 7px;\n}\n.balance-container .balance .withdraw {\n  align-self: end;\n  display: flex;\n  justify-content: flex-end;\n  padding-bottom: 10px;\n}\n","<template>\n  <div class=\"preview-container\" :style=\"style\">\n    <div v-if=\"loading && show_text\" class=\"loading\">Loading</div>\n    <img v-if=\"src\" :class=\"{'preview': true, 'error': error}\" :src=\"src\" :style=\"image_style\"/>\n    <slot></slot>\n  </div>  \n</template>\n\n<style scoped lang=\"stylus\">\n  .preview-container {\n    background-color: rgba(240, 205, 205, 0.07)\n    display: flex\n    align-items: center\n    justify-content: center\n    overflow: hidden\n    position: relative\n    user-select: none\n    \n    &>.preview {\n      width: 100%\n      height: 100%\n      position: absolute\n    }\n\n    &>.loading {\n      position: absolute\n      z-index: 100\n      border-radius: 10px\n      backdrop-filter: blur(30px) brightness(70%)\n      padding: 3px 10px 6px 10px\n      color: rgba(255, 255, 255, 0.85)\n      font-size: 14px\n    }\n\n    &>.error {\n      color: black\n      z-index: 100\n    }\n  }\n</style>\n\n<script>\nexport default {\n  props: {\n    image: {\n      type: [Object, String],\n      required: false,\n      default: undefined\n    },\n    height: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    width: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    radius: {\n      type: String,\n      required: false,\n      default: '10px 10px 0 0'\n    },\n    cover: {\n      type: Boolean,\n      default: false\n    },\n    contain: {\n      type: Boolean,\n      default: false\n    },\n    show_text: {\n      type: Boolean,\n      default: true\n    },\n    text_color: {\n      type: String,\n      default: '#fff'\n    },\n    default: {\n      type: String,\n      default: ''\n    }\n  },\n\n  computed: {\n    src () {\n      if (typeof this.image == 'string') {\n        return this.image\n      }\n\n      if (this.image && this.image.object) {\n        return this.image.object\n      }\n      \n      return (this.default || undefined)\n    },\n\n    loading () {\n      return (this.image || {}).loading\n    },\n\n    error () {\n      return (this.image || {}).error\n    },\n\n    debug () {\n      return this.$state.debug\n    },\n\n    style () {\n      let res = {\n        'border-radius': this.radius,\n      }\n\n      if (this.height) {\n        res['height'] = this.height\n      }\n\n      if (this.width) {\n        res['width'] = this.width\n      }\n\n      if (this.$attrs && this.$attrs['onClick']) {\n        res['cursor'] = 'pointer'\n      }\n\n      return res\n    },\n\n    image_style() {\n      let res = {}\n\n      if (this.cover) {\n        res['object-fit'] = 'cover'\n      }\n\n      if (this.contain) {\n        res['object-fit'] = 'contain'\n      }\n\n      return res\n    },\n\n    text_style() {\n      return {\n        'color': this.text_color\n      }\n    }\n  }\n}\n</script>\n",".preview-container {\n  background-color: rgba(240,205,205,0.07);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  position: relative;\n  user-select: none;\n}\n.preview-container>.preview {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n.preview-container>.loading {\n  position: absolute;\n  z-index: 100;\n  border-radius: 10px;\n  backdrop-filter: blur(30px) brightness(70%);\n  padding: 3px 10px 6px 10px;\n  color: rgba(255,255,255,0.85);\n  font-size: 14px;\n}\n.preview-container>.error {\n  color: #000;\n  z-index: 100;\n}\n","<template>\n  <div :class=\"{'not-found': true, 'error': error}\">\n    <img src=\"~assets/empty-wallet.svg\"/>\n    <div class=\"text\">{{ text }}</div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.not-found {\n  text-align: center\n  margin: 0 auto\n  margin-top: 50px\n\n  & > .text {\n    font-size: px\n    font-weight: 400\n    user-select: none\n    padding: 15px 25px 0 25px\n    color: rgba(255, 255, 255, 0.5)\n  }\n}\n</style>\n\n<script>\nexport default {\n  props: {\n    text: {\n      type: String,\n      default: 'Not Found'\n    },\n    error: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n</script>\n",".not-found {\n  text-align: center;\n  margin: 0 auto;\n  margin-top: 50px;\n}\n.not-found > .text {\n  font-size: px;\n  font-weight: 400;\n  user-select: none;\n  padding: 15px 25px 0 25px;\n  color: rgba(255,255,255,0.5);\n}\n","<template>\n  <div class=\"collection-container\">\n    <!-- TODO: handle author loading error (first collection) -->\n    <pageTitle :title=\"title\"/>\n    <loading v-if=\"collection === undefined\" text=\"Loading Collection\"/>\n    <notFound v-else-if=\"collection === null\" text=\"Collection Not Found\"/>\n    <template v-else>\n      <keyModal ref=\"keyModal\" :name=\"author_error ? '' : author_name\" :artist_key=\"author_key\"/>\n      <preview v-if=\"!compact\" :class=\"{'error': collection.error}\" :image=\"cover\" width=\"100%\" height=\"170px\" :default=\"def_banner\" cover>\n        <div class=\"info-container\">\n          <div class=\"left\">\n            <preview :class=\"{'error': collection.author_error}\" \n                     :image=\"avatar\" \n                     :default=\"def_avatar\" \n                     :show_text=\"false\" \n                     radius=\"36px 36px\" \n                     class=\"avatar\"\n            />\n            <div class=\"info\">\n              <span class=\"name\">{{ author_name }}</span>\n              <span class=\"about\">{{ author_about }}</span>\n            </div>\n          </div>\n          <div class=\"right\">\n            <div class=\"social\">\n              <div>\n                <btn v-if=\"website\" color=\"transparent\" height=\"20px\" padding=\"5px 7px 5px 7px\" @click=\"onWebsite\">\n                  <img src=\"~assets/globe-green.svg\">\n                </btn>\n                <btn v-if=\"twitter\" color=\"transparent\" height=\"20px\" padding=\"5px 7px 5px 7px\" @click=\"onTwitter\">\n                  <img src=\"~assets/twitter-green.svg\">\n                </btn>\n                <btn v-if=\"instagram\" color=\"transparent\" height=\"20px\" padding=\"5px 7px 5px 7px\" @click=\"onInstagram\">\n                  <img src=\"~assets/instagram-green.svg\">\n                </btn>\n                <btn color=\"transparent\" height=\"20px\" padding=\"5px 7px 5px 7px\" @click=\"onKey\">\n                  <img src=\"~assets/key-small.svg\">\n                </btn>\n              </div>  \n            </div>\n            <div class=\"stats\">\n              <div>\n                <div class=\"value\">{{ nfts_count }}</div>\n                <span>{{ nfts_count == 1 ? 'NFT' : 'NFTs' }}</span>\n              </div>\n              <div>\n                <div>\n                  <img src=\"~assets/beam.svg\">\n                  <span class=\"value\">{{ max_sale }}</span>\n                </div>\n                <span>max sale</span>\n              </div>\n              <div>\n                <div>\n                  <img src=\"~assets/beam.svg\">\n                  <span class=\"value\">{{ trade_volume }}</span>\n                </div>\n                <span>trade volume</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </preview>  \n\n      <!-- TODO: same layout as in approve containers -->\n      <div v-if=\"!compact\" :class=\"{'block': true, 'block-long': long_text}\">\n        <span ref=\"desc\" :class=\"{'desc-short': !full_text}\">{{ description }}</span>\n        <btn v-if=\"long_text && !full_text\"\n             class=\"btn-right\"\n             text=\"See more\" \n             height=\"20px\"\n             color=\"transparent\"\n             text_color=\"green\"\n             padding=\"0px 7px 0px 7px\"\n             :text_bold=\"false\"\n             @click=\"full_text = true\"\n        />  \n        <btn v-if=\"long_text && full_text\"\n             class=\"btn-center\"\n             text=\"See less\" \n             height=\"20px\"\n             color=\"transparent\"\n             text_color=\"green\"\n             padding=\"0px 7px 0px 7px\"\n             :text_bold=\"false\"\n             @click=\"full_text = false\"\n        /> \n      </div>\n      <div v-if=\"debug && collection.error\" class=\"debug error\">\n        {{ collection.error }}\n      </div>\n      <tabsctrl v-model=\"active_tab\" :tabs=\"tabs\"/>\n      <!--- TODO: set collection to the current one when opening 'new-nft' -->\n      <list v-if=\"show_all\"\n            class=\"list\"\n            items_name=\"NFTs\"\n            component=\"nft\"\n            :new_component=\"owned && safe_mode == 'artist' ? 'create-nft' : ''\"\n            :new_component_props=\"{'selected_collection': id, limit_reached}\"\n            :mode=\"`${safe_mode}:collection:${id}`\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': safe_mode}\"\n      />\n      <list v-if=\"show_sale\"\n            class=\"list\"\n            items_name=\"NFTs\"\n            component=\"nft\"\n            :new_component=\"owned && safe_mode == 'artist' ? 'create-nft' : ''\"\n            :new_component_props=\"{'selected_collection': id, limit_reached}\"\n            :mode=\"`${safe_mode}:collection:sale:${id}`\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': safe_mode}\"\n      />\n      <list v-if=\"show_liked\"\n            class=\"list\"\n            items_name=\"NFTs\"\n            component=\"nft\"\n            :new_component=\"owned && safe_mode == 'artist' ? 'create-nft' : ''\"\n            :new_component_props=\"{'selected_collection': id, limit_reached}\"\n            :mode=\"`${safe_mode}:collection:liked:${id}`\"\n            :store=\"nftsStore\"\n            :component_props=\"{'mode': safe_mode}\"\n      />\n    </template>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  .collection-container {\n    display: flex\n    flex-direction: column\n    width: 100%\n    height: 100%\n\n    & > .debug {\n      width: 100%\n      margin-bottom: 10px\n      text-align: center\n    }\n\n    & > .list {\n      margin-top: 20px\n      flex: 1\n    }\n\n    & > .block {\n      display: flex\n      flex-direction: column\n      padding: 20px 20px 25px 20px\n      background-color: rgba(255, 255, 255, 0.05)\n      border-bottom-left-radius: 10px\n      border-bottom-right-radius: 10px\n      margin-bottom: 15px\n      color: #8897a8\n      font-size: 14px\n\n      & .desc-short {\n        display: -webkit-box\n        -webkit-line-clamp: 2\n        -webkit-box-orient: vertical\n        overflow: hidden\n      }\n\n      & .btn-right {\n        margin-left: auto\n      }\n\n      & .btn-center {\n        margin-left: auto\n        margin-right: auto\n      }\n    }\n\n    & > .block-long {\n      padding-bottom: 10px\n    }\n\n    .info-container {\n      display: flex\n      justify-content: space-between\n      align-items: flex-end\n      width: 100%\n      height: 100%\n      padding: 12px 12px 12px 12px\n      box-sizing: border-box\n      z-index: 100\n\n      & > .left {\n        display: flex\n        flex-direction: row\n        border-radius: 10px\n        backdrop-filter: blur(30px) brightness(40%)\n        margin-right: 20px\n        padding: 8px 18px 9px 15px\n        box-sizing: border-box\n\n        & > .avatar {\n          margin-right: 16px\n          min-width: 72px\n          min-height: 72px\n          width: 72px\n          height: 72px\n        }\n\n        & > .info {\n          display: flex\n          flex-direction: column\n          justify-content: center\n\n          & > .name {\n            font-weight: bold\n            font-size: 16px\n            margin-bottom: 4px\n            overflow: hidden\n            text-overflow: ellipsis\n          }\n        }\n      }\n\n      .right {\n        .social {\n          height: 16px\n          display: flex\n          justify-content: flex-end\n          align-items: center\n          margin-bottom: 20px\n\n          & > * {\n            backdrop-filter: blur(30px) brightness(40%)\n            display: flex\n            border-radius: 5px\n            padding: 5px 5px\n\n            & > *:not(:first-child) {\n              margin-left: 6px\n            }\n          }\n        }\n\n        .stats {\n          height: 89px\n          box-sizing: border-box\n          padding: 16px 0\n          border-radius: 10px\n          backdrop-filter: blur(30px) brightness(40%)\n          display: flex\n          flex-direction: row\n\n          & > div {\n            min-width: 110px\n            box-sizing: border-box\n            padding: 0px 10px\n            display: flex\n            flex-direction: column\n            align-items: center\n            justify-content: center\n            \n            & > div {\n              display: flex\n              margin-bottom: 4px\n\n              & > img {\n                margin-right: 8px\n              }\n            }\n            \n            & > span:not(.value) {\n              font-size: 14px\n            }\n\n            & .value {\n              display: flex\n              font-size: 16px\n            }\n          }\n\n          & > *:not(:last-child) {\n            border-right: 1px solid rgba(255, 255, 255, 0.1)\n          }\n        }\n      }\n    }\n  }\n</style>\n\n<script>\nimport keyModal from 'components/key-modal'\nimport pageTitle from 'controls/page-title'\nimport btn from 'controls/button'\nimport tabsctrl from 'controls/tabs'\nimport preview from 'controls/preview'\nimport loading from 'controls/loading'\nimport notFound from 'controls/not-found'\nimport list from 'controls/lazy-list'\nimport collsStore from 'stores/collections'\nimport artistsStore from 'stores/artists'\nimport nftsStore from 'stores/nfts'\nimport utils from 'utils/utils'\nimport {coll_tabs, def_images} from 'utils/consts'\n\nexport default {\n  components: {\n    pageTitle,\n    btn,\n    preview,\n    loading,\n    notFound,\n    keyModal,\n    tabsctrl,\n    list\n  },\n\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    mode: {\n      type: String,\n      default: 'user'\n    }\n  },\n\n  setup (props) {\n    let collection = collsStore.getLazyItem(props.id)\n    return {\n      collection\n    }\n  },\n\n  data() {\n    return {\n      compact: utils.isCompact(),\n      observer: undefined,\n      full_text: false,\n      long_text: false,\n      tabs: [\n        {id: coll_tabs.ALL_NFTS, name: 'All'},\n        {id: coll_tabs.SALE_NFTS, name: 'On Sale'},\n        {id: coll_tabs.LIKED_NFTS, name: 'Liked'},\n      ],\n      def_avatar: def_images.artist_avatar,\n      def_banner: def_images.artist_banner\n    }\n  },\n\n  computed: {\n    owned() {\n      return this.collection.owned\n    },\n    title () {\n      if (!this.collection) return 'Loading...'\n      let prefix = this.$state.debug ? `[${this.collection.id}] - ` : ''\n      if (this.collection.error) return [prefix, 'Failed to load collection'].join('')\n      return [prefix, this.show_safe ? this.collection.safe_label : this.collection.label].join('')\n    },\n    avatar() {\n      return this.collection.safe_avatar\n    },\n    show_safe () {\n      if (this.mode === 'artist' && this.collection.author === artistsStore.my_key) return false\n      return true\n    },\n    safe_mode () {\n      return this.show_safe ? 'user' : this.mode\n    },\n    approved () {\n      return this.collection.approved\n    },\n    cover() {\n      return this.show_safe ? this.collection.safe_cover : this.collection.cover\n    },\n    author_name() {\n      if (this.$state.debug && this.collection.author_error) {\n        return this.collection.author_error\n      }\n      return this.show_safe ? this.collection.safe_author_name : this.collection.author_name\n    },\n    author_about() {\n      if(this.show_safe) {\n        return this.collection.author_approved ? this.collection.author_about : ''\n      }\n      return this.collection.author_about\n    },\n    author_key() {\n      return this.collection.author\n    },\n    author_error() {\n      return this.collection.author_error\n    },\n    instagram() {\n      if (this.show_safe) {\n        if (this.approved && this.collection.instagram) return this.collection.instagram\n        if (this.collection.author_approved && this.collection.author_instagram) return this.collection.author_instagram\n        return undefined\n      }\n      return this.collection.instagram || this.collection.author_instagram\n    },\n    twitter() {\n      if (this.show_safe) {\n        if (this.approved && this.collection.twitter) return this.collection.twitter\n        if (this.collection.author_approved && this.collection.author_twitter) return this.collection.author_twitter\n        return undefined\n      }\n      return this.collection.twitter || this.collection.author_twitter\n    },\n    website() {\n      if (this.show_safe) {\n        if (this.approved && this.collection.website) return this.collection.website\n        if (this.collection.author_approved && this.collection.author_website) return this.collection.author_website\n        return undefined\n      }\n      return this.collection.website || this.collection.author_website\n    },\n    description() {\n      return this.show_safe ? this.collection.safe_description : this.collection.description\n    },\n    nfts_count() {\n      return (this.show_safe ? this.collection.approved_nfts_count : this.collection.nfts_count) || 0\n    },\n    limit_reached() {\n      // TODO: get limit value from contract\n      return this.collection.nfts_count >= 500\n    },\n    max_sale() {\n      let value = this.collection.max_price.value \n      return utils.formatAmount3(value)\n    },\n    trade_volume() {\n      let value = this.collection.total_sold.volume\n      return utils.formatAmount3(value)\n    },\n    active_tab: {\n      get() {\n        return this.$state.coll_active_tab\n      },\n      set(value) {\n        this.$store.setCollTab(value)\n      }\n    },\n    show_all() {\n      return this.active_tab === coll_tabs.ALL_NFTS\n    },\n    show_sale() {\n      return this.active_tab === coll_tabs.SALE_NFTS\n    },\n    show_liked() {\n      return this.active_tab === coll_tabs.LIKED_NFTS\n    },\n    nftsStore() {\n      return nftsStore\n    },\n    debug() {\n      return this.$state.debug\n    }\n  },\n\n  updated() {\n    if (!this.observer) {\n      let desc = this.$refs.desc\n      if (desc) {\n        this.observer = new ResizeObserver(() => {\n          this.calcLongText()\n        })\n        this.observer.observe(desc)\n      }\n    }\n  },\n\n  unmounted() {\n    if (this.observer) {\n      this.observer.disconnect()\n    }\n  },\n\n  methods: {\n    calcLongText() {\n      if (!this.full_text) {\n        const scrollHeight = this.$refs.desc.scrollHeight\n        const offsetHeight = this.$refs.desc.offsetHeight\n        this.long_text = scrollHeight > offsetHeight\n      }\n    },\n    onKey() {\n      this.$refs.keyModal.open()\n    },\n    onInstagram() {\n      this.$store.openInstagram(this.instagram)\n    },\n    onTwitter() {\n      this.$store.openTwitter(this.twitter)\n    },\n    onWebsite() {\n      this.$store.openUrl(this.website)\n    }\n  }\n}\n</script>\n",".collection-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.collection-container > .debug {\n  width: 100%;\n  margin-bottom: 10px;\n  text-align: center;\n}\n.collection-container > .list {\n  margin-top: 20px;\n  flex: 1;\n}\n.collection-container > .block {\n  display: flex;\n  flex-direction: column;\n  padding: 20px 20px 25px 20px;\n  background-color: rgba(255,255,255,0.05);\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n  margin-bottom: 15px;\n  color: #8897a8;\n  font-size: 14px;\n}\n.collection-container > .block .desc-short {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n.collection-container > .block .btn-right {\n  margin-left: auto;\n}\n.collection-container > .block .btn-center {\n  margin-left: auto;\n  margin-right: auto;\n}\n.collection-container > .block-long {\n  padding-bottom: 10px;\n}\n.collection-container .info-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  width: 100%;\n  height: 100%;\n  padding: 12px 12px 12px 12px;\n  box-sizing: border-box;\n  z-index: 100;\n}\n.collection-container .info-container > .left {\n  display: flex;\n  flex-direction: row;\n  border-radius: 10px;\n  backdrop-filter: blur(30px) brightness(40%);\n  margin-right: 20px;\n  padding: 8px 18px 9px 15px;\n  box-sizing: border-box;\n}\n.collection-container .info-container > .left > .avatar {\n  margin-right: 16px;\n  min-width: 72px;\n  min-height: 72px;\n  width: 72px;\n  height: 72px;\n}\n.collection-container .info-container > .left > .info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.collection-container .info-container > .left > .info > .name {\n  font-weight: bold;\n  font-size: 16px;\n  margin-bottom: 4px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.collection-container .info-container .right .social {\n  height: 16px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.collection-container .info-container .right .social > * {\n  backdrop-filter: blur(30px) brightness(40%);\n  display: flex;\n  border-radius: 5px;\n  padding: 5px 5px;\n}\n.collection-container .info-container .right .social > * > *:not(:first-child) {\n  margin-left: 6px;\n}\n.collection-container .info-container .right .stats {\n  height: 89px;\n  box-sizing: border-box;\n  padding: 16px 0;\n  border-radius: 10px;\n  backdrop-filter: blur(30px) brightness(40%);\n  display: flex;\n  flex-direction: row;\n}\n.collection-container .info-container .right .stats > div {\n  min-width: 110px;\n  box-sizing: border-box;\n  padding: 0px 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n.collection-container .info-container .right .stats > div > div {\n  display: flex;\n  margin-bottom: 4px;\n}\n.collection-container .info-container .right .stats > div > div > img {\n  margin-right: 8px;\n}\n.collection-container .info-container .right .stats > div > span:not(.value) {\n  font-size: 14px;\n}\n.collection-container .info-container .right .stats > div .value {\n  display: flex;\n  font-size: 16px;\n}\n.collection-container .info-container .right .stats > *:not(:last-child) {\n  border-right: 1px solid rgba(255,255,255,0.1);\n}\n","<template>\n  <div class=\"info\">\n    <span>{{ tip_computed }}</span> \n    <span>{{ value }} / {{ max_length }} </span>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .info {\n    display: flex\n    justify-content: space-between\n    font-family: 'SFProDisplay', sans-serif\n    opacity: 0.7\n    font-style: italic\n    font-weight: 400\n    font-size: 12px\n    \n    &[readonly] {\n      color: rgba(255, 255, 255, 0.35)\n    }\n  }\n</style>\n<script>\nexport default {\n  props: {\n    max_length:{\n      type: Number,\n      default: 10,\n      required: true\n    },\n    value: {\n      type: Number,\n      default: 0,\n      required: false\n    },\n    tip: {\n      type: String,\n      default: undefined,\n      required: false\n    },\n  },\n\n  computed: {\n    tip_computed () {\n      if (this.tip === undefined) {\n        return `${this.max_length} characters max`\n      }\n      return this.tip\n    }\n  }\n}\n</script>",".info {\n  display: flex;\n  justify-content: space-between;\n  font-family: 'SFProDisplay', sans-serif;\n  opacity: 0.7;\n  font-style: italic;\n  font-weight: 400;\n  font-size: 12px;\n}\n.info[readonly] {\n  color: rgba(255,255,255,0.35);\n}\n","<template>\n  <div class=\"input-container\">\n    <label v-if=\"label\" class=\"label\" :class=\"{'err': !valid}\">\n      {{ label }}\n    </label>\n    <div class=\"input\" :class=\"{'err': !valid, 'readonly': readonly}\">\n      <img v-if=\"img\" :src=\"icon_src\" :class=\"{'error': !valid}\" alt=\"icon\"/>\n      <input :value=\"modelValue\"\n             :placeholder=\"placeholder\"\n             :style=\"style\"\n             :maxlength=\"max_length\"\n             :class=\"{'err': !valid}\"\n             :readonly=\"readonly\"\n             @input=\"$emit('update:modelValue', $event.target.value)\"\n             @keydown=\"onKeyDown\"\n      />\n      <slot></slot>\n    </div>\n    <charslen v-if=\"max_length && counter\" \n              :readonly=\"readonly\" \n              :max_length=\"max_length\" \n              :value=\"modelValue.length\"\n              :class=\"{'chars-err': !valid}\"\n              :tip=\"tip\"\n              style=\"margin-top:3px;\"\n    />\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n.input-container {\n  box-sizing: border-box\n\n  .label {\n    display: block\n    margin-bottom:10px\n    color: rgba(255, 255, 255, 0.6)\n    font-family: 'SFProDisplay', sans-serif\n    font-size: 14px\n\n    &.err {\n      color: rgba(255, 98, 92, 0.7)\n    }\n  }\n\n  .input {\n    display: flex\n    background-color: rgba(255, 255, 255, 0.08)\n    border: none\n    border-radius: 10px\n    align-items: center\n    position: relative\n\n    & > img {\n      position: absolute\n      padding: 15px 15px\n    }\n\n    &.readonly {\n      background-color: rgba(255, 255, 255, 0.03)\n    }\n\n    &.err {\n      background-color: rgba(255, 98, 92, 0.07)\n      &:focus-within {\n        background-color: rgba(255, 98, 92, 0.12)\n      }\n    }\n\n    &:not(.err):not(.readonly):focus-within {\n      background-color: rgba(255, 255, 255, 0.12)\n    }\n\n    & > input {\n      font-family: 'SFProDisplay', sans-serif\n      background-color: transparent\n      border: none\n      border-radius: 10px\n      outline-width: 0\n      font-size: 14px\n      color: rgba(255, 255, 255, 0.8)\n      padding: 10px 8px\n      width: 100%\n\n      &:read-only {\n        color: rgba(255, 255, 255, 0.3)\n      }\n\n      &.err {\n        color: rgba(255, 98, 92, 1)\n      }\n\n      &:not(.err)::placeholder {\n        font-size: 14px\n        color: rgba(255, 255, 255, 0.3)\n      }\n\n      &.err::placeholder {\n        font-size: 14px\n        color: rgba(255, 98, 92, 0.4)\n      }\n    }\n  }\n\n  .chars-err {\n    color: rgba(255, 98, 92, 0.7)\n  }\n}\n</style>\n\n<script>\nimport charslen from 'controls/charslen'\nimport validators from 'utils/validators'\n\nexport default {\n  components: {\n    charslen\n  },\n\n  props: {\n    label: {\n      type: String,\n      default: '',\n      required: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '',\n      required: false\n    },\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: String,\n      default: '',\n      required: true\n    },\n    valid: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    img: {\n      type: String,\n      default:'',\n      required: false,\n    },\n    max_length:{\n      type: Number,\n      default: undefined,\n      required: false\n    },\n    counter: {\n      type: Boolean,\n      default: true,\n      required: false\n    },\n    tip: {\n      type: String,\n      default: undefined,\n      required: false\n    },\n    allowed: {\n      type: Object,\n      default: validators.text_allowed(),\n      required: false\n    }\n  },\n\n  emits: [\n    'update:modelValue'\n  ],\n\n  computed: {\n    style() {\n      return {\n        'padding-left': this.img.length ? '38px' : '15px'\n      }\n    },\n    icon_src() {\n      return require('assets/' + this.img + '.svg')\n    }\n  },\n\n  methods: {\n    onKeyDown(ev) {\n      // TODO: merge 'allowed', 'valid' & 'max_chars' to one regex\n      if (this.allowed && !this.allowed.test(ev.key)) {\n        ev.preventDefault()\n      }\n    }\n  }\n}\n</script>\n",".input-container {\n  box-sizing: border-box;\n}\n.input-container .label {\n  display: block;\n  margin-bottom: 10px;\n  color: rgba(255,255,255,0.6);\n  font-family: 'SFProDisplay', sans-serif;\n  font-size: 14px;\n}\n.input-container .label.err {\n  color: rgba(255,98,92,0.7);\n}\n.input-container .input {\n  display: flex;\n  background-color: rgba(255,255,255,0.08);\n  border: none;\n  border-radius: 10px;\n  align-items: center;\n  position: relative;\n}\n.input-container .input > img {\n  position: absolute;\n  padding: 15px 15px;\n}\n.input-container .input.readonly {\n  background-color: rgba(255,255,255,0.03);\n}\n.input-container .input.err {\n  background-color: rgba(255,98,92,0.07);\n}\n.input-container .input.err:focus-within {\n  background-color: rgba(255,98,92,0.12);\n}\n.input-container .input:not(.err):not(.readonly):focus-within {\n  background-color: rgba(255,255,255,0.12);\n}\n.input-container .input > input {\n  font-family: 'SFProDisplay', sans-serif;\n  background-color: transparent;\n  border: none;\n  border-radius: 10px;\n  outline-width: 0;\n  font-size: 14px;\n  color: rgba(255,255,255,0.8);\n  padding: 10px 8px;\n  width: 100%;\n}\n.input-container .input > input:read-only {\n  color: rgba(255,255,255,0.3);\n}\n.input-container .input > input.err {\n  color: #ff625c;\n}\n.input-container .input > input:not(.err)::placeholder {\n  font-size: 14px;\n  color: rgba(255,255,255,0.3);\n}\n.input-container .input > input.err::placeholder {\n  font-size: 14px;\n  color: rgba(255,98,92,0.4);\n}\n.input-container .chars-err {\n  color: rgba(255,98,92,0.7);\n}\n","<template>\n  <modal ref=\"modal\">\n    <div class=\"content\">\n      <div class=\"title\">Transfer NFT</div>\n      <div class=\"message\">Paste the artist key of the person you want to transfer this NFT to</div>\n      <formInput v-model=\"artist_key\" \n                 class=\"input\"\n                 max_length=\"66\"\n                 tip=\"Valid key is 66 chars long\"\n                 :allowed=\"key_allowed\"\n      />\n      <div class=\"controls\">\n        <btn text=\"close\" @click=\"close\">\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn id=\"proceed\"\n             text=\"proceed\"\n             color=\"green\"\n             :disabled=\"!key_valid\" \n             @click=\"onProceed\"\n        >\n          <img src=\"~assets/proceed.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style scoped lang=\"stylus\">\n  .content {\n    display: flex\n    flex-direction: column\n    align-items: center\n    \n    .title {\n      font-size: 18px\n      font-weight: bold\n      color: #fff\n    }\n\n    .message {\n      margin: 30px 0px 25px 0px\n      font-size: 14px\n    }\n\n    .input {\n      width: 570px\n    }\n      \n    .controls {\n      margin-top: 35px\n      display: flex\n      flex-direction: row\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n  }\n</style>\n\n<script>\nimport modal from 'controls/modal'\nimport btn from 'controls/button'\nimport formInput from 'controls/form-input'\nimport nftsStore from 'stores/nfts'\n\nexport default {\n  components: { \n    modal, \n    btn,\n    formInput\n  },\n\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n  },\n\n  data() {\n    return {\n      artist_key: '',\n      key_allowed: /^[a-zA-Z0-9]{1,66}$/\n    }\n  },\n\n  computed: {\n    key_valid() {\n      return /^[a-zA-Z0-9]{66}$/.test(this.artist_key)\n    }\n  },\n\n  methods: {\n    open () {\n      this.$refs.modal.open()\n    },\n\n    close () {\n      this.$refs.modal.close()\n    },\n\n    async onProceed () {\n      await nftsStore.transferNFT(this.id, this.artist_key)\n      this.close()\n    }\n  }\n}\n</script>",".content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.content .title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #fff;\n}\n.content .message {\n  margin: 30px 0px 25px 0px;\n  font-size: 14px;\n}\n.content .input {\n  width: 570px;\n}\n.content .controls {\n  margin-top: 35px;\n  display: flex;\n  flex-direction: row;\n}\n.content .controls > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <div class=\"price-input\">\n    <formInput v-model=\"computedValue\"\n               :label=\"label\"\n               :readonly=\"readonly\"\n               @keydown=\"onKey\"\n               @paste=\"onPaste\"\n    >\n      <span class=\"beam\" :class=\"{'readonly': readonly}\">BEAM</span>\n    </formInput>\n  </div>\n</template>\n\n<style lang=\"stylus\">\n  .price-input {\n    input {\n      font-size: 24px !important\n      padding-top: 8px !important\n      padding-bottom: 10px !important\n    }\n\n    .beam {\n      font-size: 20px\n      padding-right: 12px\n\n      &.readonly {\n        color: rgba(255, 255, 255, 0.3)\n      }\n    }\n  }\n</style>\n\n<script>\nimport formInput from 'controls/form-input'\nimport utils from 'utils/utils'\n\nexport default {\n  components: {\n    formInput\n  },\n  props: {\n    label: {\n      type: String,\n      default: '',\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '0',\n      required: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: String,\n      default: '',\n      required: true\n    },\n  },\n  \n  emits: [\n    'update:modelValue'\n  ],\n\n  computed: {\n    computedValue: {\n      get() {\n        return this.modelValue\n      },\n      set (val) {\n        this.$emit('update:modelValue', val)\n      }\n    }\n  },\n\n  methods: {    \n    onKey(ev) {\n      if (ev.isComposing || ev.keyCode === 229 || ev.ctrlKey || ev.altKey || ev.metaKey) {\n        return\n      }\n\n      const specialKeys = [\n        'Backspace', 'Tab', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp',\n        'Control', 'Delete', 'F5'\n      ]\n\n      if (specialKeys.indexOf(ev.key) !== -1) {\n        return\n      }\n\n      const current = ev.target.value\n      const next = current.concat(ev.key)\n      if (!utils.handleString(next)) {\n        ev.preventDefault()\n      }\n    },\n\n    onPaste(ev) {\n      if (ev.clipboardData != undefined) {\n        const text = ev.clipboardData.getData('text')\n        if (!utils.handleString(text)) {\n          ev.preventDefault()\n        }\n      }\n    },\n  }\n}\n</script>",".price-input input {\n  font-size: 24px !important;\n  padding-top: 8px !important;\n  padding-bottom: 10px !important;\n}\n.price-input .beam {\n  font-size: 20px;\n  padding-right: 12px;\n}\n.price-input .beam.readonly {\n  color: rgba(255,255,255,0.3);\n}\n","<template>\n  <modal ref=\"modal\">\n    <div class=\"content\">\n      <div class=\"title\">\n        Set the price\n      </div>\n      <priceInput v-model=\"price\" color=\"#0bccf7\" placeholder=\"0\" @trigger-key=\"onKey\" @trigger-paste=\"onPaste\"/>\n      <!-- div class=\"fee\">\n        <span class=\"title\">Fee</span>\n        <span class=\"value\">0.011 BEAM</span>\n      </div -->\n      <div class=\"info\">\n        Small transaction fee must be paid\n      </div>\n      <div class=\"controls\">\n        <btn text=\"cancel\" @click=\"close\">\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn id=\"proceed\"\n             text=\"proceed\"\n             color=\"blue\"\n             :disabled=\"!price_valid\" \n             @click=\"onProceed\"\n        >\n          <img src=\"~assets/proceed.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style scoped lang=\"stylus\">\n  .content {\n    display: flex\n    flex-direction: column\n    align-items: center\n  \n    & > .title {\n      font-size: 18px\n      font-weight: bold\n      color: #fff\n      margin-bottom: 30px\n    }\n\n    .fee {\n      display: flex\n      flex-direction: row\n      margin-top: 10px\n      align-self: flex-start\n      \n      & > .title {\n        opacity: 0.5\n        font-size: 12px\n        color: #fff\n      }\n\n      .value {\n        font-size: 14px\n        font-weight: 500\n        color: #0bccf7\n        margin-left: 10px\n      }\n    }\n\n    .info {\n      margin-top: 20px\n      opacity: 0.7\n      font-size: 14px\n      font-style: italic\n      color: #fff\n    }\n\n    .controls {\n      margin-top: 30px\n      display: flex\n      flex-direction: row\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n\n    .disabled {\n      opacity: 0.3\n      cursor: auto !important\n    }\n  }\n</style>\n\n<script>\nimport modal from 'controls/modal'\nimport btn from 'controls/button'\nimport priceInput from 'controls/price-input'\nimport utils from 'utils/utils'\nimport {common} from 'utils/consts'\n\nexport default {\n  components: { \n    modal, btn, priceInput\n  }, \n  \n  emits:[\n    'sell-nft'\n  ],\n\n  data() {  \n    return {\n      price: '',\n    } \n  },\n\n  computed: {\n    price_valid () {\n      return parseFloat(this.price || '0') > 0\n    } \n  },\n    \n  methods: {\n    onKey(ev) {\n      if (ev.isComposing || ev.keyCode === 229 || ev.ctrlKey || ev.altKey || ev.metaKey) {\n        return\n      }\n\n      const specialKeys = [\n        'Backspace', 'Tab', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp',\n        'Control', 'Delete', 'F5'\n      ]\n\n      if (specialKeys.indexOf(ev.key) !== -1) {\n        return\n      }\n\n      const current = this.price\n      const next = current.concat(ev.key)\n      if (!utils.handleString(next)) {\n        ev.preventDefault()\n      }\n    },\n\n    onPaste(ev) {\n      if (ev.clipboardData != undefined) {\n        const text = ev.clipboardData.getData('text')\n        if (!utils.handleString(text)) {\n          ev.preventDefault()\n        }\n      }\n    },\n\n    onProceed() {\n      if (!this.price_valid) {\n        return\n      }\n      let price = parseFloat(this.price) * common.GROTHS_IN_BEAM\n      this.$emit('sell-nft',price)\n      this.close()\n    },\n\n    open () {\n      this.price = ''\n      this.$refs.modal.open()\n    },\n\n    close () {\n      this.$refs.modal.close()\n    }\n  }\n}\n</script>",".content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.content > .title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #fff;\n  margin-bottom: 30px;\n}\n.content .fee {\n  display: flex;\n  flex-direction: row;\n  margin-top: 10px;\n  align-self: flex-start;\n}\n.content .fee > .title {\n  opacity: 0.5;\n  font-size: 12px;\n  color: #fff;\n}\n.content .fee .value {\n  font-size: 14px;\n  font-weight: 500;\n  color: #0bccf7;\n  margin-left: 10px;\n}\n.content .info {\n  margin-top: 20px;\n  opacity: 0.7;\n  font-size: 14px;\n  font-style: italic;\n  color: #fff;\n}\n.content .controls {\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n}\n.content .controls > *:not(:first-child) {\n  margin-left: 30px;\n}\n.content .disabled {\n  opacity: 0.3;\n  cursor: auto !important;\n}\n","<template>\n  <Teleport to=\"#modals\">\n    <div v-show=\"show\" ref=\"menu\" class=\"popup-menu\" :style=\"style\" tabindex=\"0\">\n      <slot></slot>\n    </div>\n  </Teleport>\n</template>\n\n<style scoped lang=\"stylus\">\n  .popup-menu {\n    border-radius: 10px\n    z-index:  999\n    position: fixed\n    outline:  none\n    padding:  10px 20px\n\n    :slotted(.item) {\n      color: #fff\n      padding: 6px 0\n      cursor: pointer\n      display: flex\n      align-items: center\n      line-height: normal !important\n      white-space: nowrap\n      user-select: none\n\n      &:hover {\n        color: #00f6d2\n      }\n\n      &>img {\n        margin-right: 10px\n      }\n    }\n  }\n</style>\n\n<script>\nimport {nextTick} from 'vue'\nimport utils from 'utils/utils'\n\nexport default {\n  data() {\n    return {\n      left: 0,\n      top: 0,\n      show: false,\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        top: this.top + 'px',\n        left: this.left + 'px',\n        'background-color': utils.getStyles().background_popup,\n      }\n    }\n  },\n\n  methods: { \n    close () {\n      this.show = false\n      this.left = 0\n      this.top  = 0\n    },\n\n    open(ev) {\n      this.show = true\n      \n      nextTick(() => {\n        let menu = this.$refs.menu\n        let menuRect  = menu.getBoundingClientRect()\n\n        const largestHeight = window.innerHeight \n        const largestWidth  = window.innerWidth\n\n        let top = ev.clientY\n        if (top + menuRect.height > largestHeight) {\n          top = largestHeight - menuRect.height\n        }\n\n        let left = ev.clientX\n        if (left + menuRect.width > largestWidth) {\n          left = largestWidth - menuRect.width\n        }\n\n        this.left = left\n        this.top = top\n\n        let removeListeners \n\n        let downAway = evc => {\n          if (evc.which === 3 && !this.$refs.menu.contains(evc.target)) {\n            evc.stopPropagation()\n            removeListeners()\n            this.close()\n          }\n        }\n\n        let clickAway = evc => {\n          console.log('click away')\n          if (!this.$refs.menu.contains(evc.target)) {\n            evc.stopPropagation()\n          }\n          removeListeners()\n          this.close()\n        }\n        \n        let scrollAway = evc => {\n          removeListeners()\n          this.close()\n        }\n\n        removeListeners = () => {\n          document.removeEventListener('mousedown', downAway, true)\n          document.removeEventListener('click', clickAway, true)\n          document.removeEventListener('scroll', scrollAway, true)\n        }\n\n        document.addEventListener('mousedown', downAway, true)\n        document.addEventListener('click', clickAway, true)\n        document.addEventListener('scroll', scrollAway, true)\n      })\n    }\n  },\n}\n</script>",".popup-menu {\n  border-radius: 10px;\n  z-index: 999;\n  position: fixed;\n  outline: none;\n  padding: 10px 20px;\n}\n.popup-menu :slotted(.item) {\n  color: #fff;\n  padding: 6px 0;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  line-height: normal !important;\n  white-space: nowrap;\n  user-select: none;\n}\n.popup-menu :slotted(.item):hover {\n  color: #00f6d2;\n}\n.popup-menu :slotted(.item)>img {\n  margin-right: 10px;\n}\n","<template>\n  <priceModal ref=\"priceModal\" @sell-nft=\"onSellNFT\"/>\n  <span class=\"price-container\">\n    <!--- has price, so display it --->\n    <template v-if=\"price\">\n      <amount :amount=\"price.amount\" :size=\"mode == 'normal' ? '18px' : '14px'\"/>\n        \n      <!--- has price and owned, display change price / remove from sale options --->\n      <template v-if=\"owned\">\n        <img class=\"dots\" src=\"~assets/actions.svg\" @click=\"onSaleMenu\"/>\n        <popupMenu ref=\"saleMenu\">\n          <div class=\"item\" @click=\"onChangePrice\">\n            <img src=\"~assets/change.svg\"/>\n            update the price\n          </div>\n          <div class=\"item\" @click=\"onRemoveFromSale\">\n            <img src=\"~assets/eye-crossed.svg\"/>\n            remove from sale\n          </div>\n        </popupMenu>\n      </template>\n\n      <!---- has price but not owned, can buy ---->\n      <template v-if=\"!owned\">\n        <btn v-if=\"compact\" \n             text=\"buy\" \n             color=\"transparent\" \n             padding=\"0px 7px 0px 7px\"\n             height=\"31px\"\n             text_color=\"magenta\"\n             @click=\"onBuy\"\n        />\n        <btn v-else \n             text=\"buy\" \n             color=\"magenta\"\n             height=\"33px\" \n             @click=\"onBuy\"\n        >\n          <img src=\"~assets/buy-sell.svg\">\n        </btn>\n      </template>  \n    </template>\n\n    <span v-if=\"!price\" class=\"price-container\">\n      <!---- doesn't have price & owned, can sell ---->\n      <template v-if=\"owned\">\n        <btn v-if=\"compact\" \n             text=\"sell\" \n             color=\"transparent\" \n             padding=\"0px 7px 0px 7px\"\n             height=\"31px\"\n             text_color=\"blue\"\n             @click=\"onSell\"\n        />\n        <btn v-else \n             text=\"sell\" \n             color=\"blue\" \n             height=\"33px\"\n             @click=\"onSell\"\n        >\n          <img src=\"~assets/buy-sell.svg\">\n        </btn>\n      </template>\n\n      <!---- doesn't have price & not owned & author, means sold ----> \n      <span v-if=\"!owned && author\" class=\"not-for-sale\">Sold</span>\n\n      <!---- doesn't have price & not owned & author,     \n            can be anything - not approved yet, not sold by\n            owner &c. Just dispaly that it is not on sale\n        ---->\n      <span v-if=\"!owned && !author\" class=\"not-for-sale\">Not for sale</span>\n    </span>\n  </span>\n</template>\n\n<style scoped lang=\"stylus\">\n.price-container {\n  display: flex\n  flex-wrap: wrap\n  align-items: center\n  width: 100%\n\n  & .dots {\n    margin-left: auto\n    cursor: pointer\n    margin-right: -4px\n  }\n\n  & .button {\n    margin-left: auto\n  }\n}\n\n.not-for-sale {\n  margin-left: auto\n  opacity: 0.5\n  font-size: 14px\n  font-style: italic\n  color: #fff\n}\n</style>\n\n<script>\nimport priceModal from 'components/price-modal'\nimport btn from 'controls/button'\nimport popupMenu from 'controls/popup-menu'\nimport amount from 'controls/amount'\nimport nftsStore from 'stores/nfts'\nimport artistsStore from 'stores/artists'\n\nexport default {\n  components: {\n    btn,\n    popupMenu,\n    priceModal,\n    amount\n  },\n\n  props: {\n    nft: {\n      type: Object,\n      required: true,\n    },\n    mode: {\n      type: String,\n      default: 'normal'\n    }\n  },\n\n  computed: {\n    is_headless() {\n      return this.$state.is_headless\n    },\n\n    id() {\n      return this.nft.id\n    },\n\n    approved() {\n      return this.nft.approved\n    },\n\n    owned() {\n      return this.nft.owned\n    },\n\n    author () {\n      return artistsStore.my_id === artistsStore.author\n    },\n\n    price () {\n      return this.nft.price\n    },\n\n    compact() {\n      return this.mode == 'compact'\n    }\n  },\n\n  methods: {\n    onSaleMenu(ev) {\n      ev.stopPropagation()\n      this.$refs.saleMenu.open(ev)\n    },\n\n    onChangePrice(ev) {\n      ev.stopPropagation()\n      this.$refs.priceModal.open()\n    },\n\n    onSell (ev) {\n      ev.stopPropagation()\n      this.$refs.priceModal.open()\n    },\n\n    onBuy (ev) {\n      ev.stopPropagation()\n      if (this.is_headless) {\n        return this.$store.switchToHeaded()\n      }\n      nftsStore.buyNFT(this.id)\n    },\n\n    onSellNFT (price) {\n      nftsStore.setPrice(this.id, price)\n    },\n\n    onRemoveFromSale (ev) {\n      ev.stopPropagation()\n      nftsStore.setPrice(this.id, 0)\n    },\n  }\n}\n</script>\n",".price-container {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  width: 100%;\n}\n.price-container .dots {\n  margin-left: auto;\n  cursor: pointer;\n  margin-right: -4px;\n}\n.price-container .button {\n  margin-left: auto;\n}\n.not-for-sale {\n  margin-left: auto;\n  opacity: 0.5;\n  font-size: 14px;\n  font-style: italic;\n  color: #fff;\n}\n","<template>\n  <div v-if=\"!approved\"\n       :class=\"{'top-message': true, 'pending': pending, 'rejected': rejected}\" \n       :style=\"style\"\n  >\n    {{ rejected ? (short ? 'Rejected' : 'Rejected by moderator') : (short ? 'Pending' : 'Pending for approval') }}\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  & > .top-message {\n    position: absolute\n    left: 0\n    top: 0\n    width: 100%\n    display: flex\n    justify-content: center\n    align-items: center\n    border-top-left-radius: 10px\n    border-top-right-radius: 10px\n    backdrop-filter: blur(4px)\n\n    &.pending {\n      background-color: rgba(23, 46, 43, 0.85)\n      color: rgba(255, 255, 255, 0.75)\n    }\n\n    &.rejected {\n      background-color: rgba(255, 116, 107, 0.85)\n      color: rgba(255, 255, 255, 0.9)\n    }\n  }\n</style>\n\n<script>\nexport default {\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    short: {\n      type: Boolean,\n      default: false,\n    }\n  },\n\n  computed: {\n    approved() {\n      return this.item.approved\n    },\n    pending () {\n      return this.item.pending\n    },\n    rejected () {\n      return this.item.rejected\n    },\n    style() {\n      let res = {\n        'height': this.short ? '25px' : '40px',\n        'font-size': this.short ? '14px' : '15px'\n      }\n      return res\n    }\n  }\n}\n</script>\n",".top-message {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  backdrop-filter: blur(4px);\n}\n.top-message.pending {\n  background-color: rgba(23,46,43,0.85);\n  color: rgba(255,255,255,0.75);\n}\n.top-message.rejected {\n  background-color: rgba(255,116,107,0.85);\n  color: rgba(255,255,255,0.9);\n}\n","<template>\n  <div v-if=\"is_approved\" class=\"likes-container\" :disabled=\"!can_vote\" v-on=\"{click: liked ? onUnlike : onLike}\">\n    <div>{{ likes }}</div>\n    <img :src=\"like_icon\"/>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  & .likes-container {\n    display: flex\n    align-items: center\n    cursor: pointer\n    box-sizing: border-box\n    background-color: rgba(0, 0, 0, 0.6)\n    border-radius: 10px\n\n    & > div {\n      padding: 6px 0px 8px 12px\n    }\n    \n    & > img {\n      padding: 8px\n    }\n  }\n</style>\n\n<script>\nimport nftsStore from 'stores/nfts'\n\nexport default {\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    }\n  },\n\n  computed: {\n    id () {\n      return this.item.id\n    },\n\n    is_approved() {\n      return this.item.approved\n    },\n\n    can_vote () {\n      return !this.item.error && this.$state.balance_reward > 0\n    },\n\n    liked () {\n      return !!this.item.my_like\n    },\n\n    likes () {\n      return this.item.likes || 0\n    },\n\n    like_icon() {\n      let liked = require('assets/heart-red.svg')\n      let unliked = require('assets/heart.svg')\n      return this.liked ? liked : unliked\n    },\n\n    is_headless () {\n      return this.$state.is_headless\n    },\n  },\n\n  methods: {\n    onLike (ev) {\n      ev.stopPropagation()\n\n      if (this.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n\n      if (this.can_vote) {\n        return nftsStore.likeNFT(this.id)\n      }\n      \n      return false\n    },\n\n    onUnlike (ev) {\n      ev.stopPropagation()\n\n      if (this.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n\n      if (this.can_vote) {\n        return nftsStore.unlikeNFT(this.id)\n      }\n\n      return false\n    }\n  }\n}\n</script>\n",".likes-container {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  box-sizing: border-box;\n  background-color: rgba(0,0,0,0.6);\n  border-radius: 10px;\n}\n.likes-container > div {\n  padding: 6px 0px 8px 12px;\n}\n.likes-container > img {\n  padding: 8px;\n}\n","<template>\n  <messageModal ref=\"messageModal\"/>\n  <transferModal :id=\"id\" ref=\"transferModal\"/>\n  <div :class=\"['nft-page-container', compact ? 'compact' : '']\">\n    <pageTitle/>\n    <loading v-if=\"nft === undefined\" text=\"Loading NFT\"/>\n    <notFound v-else-if=\"nft == null\" text=\"NFT Not Found\"/>\n    <div v-else class=\"content-wrapper\" :class=\"{'error': error}\">\n      <div class=\"details-row\"> \n        <div v-if=\"!compact\" class=\"nft-container\">\n          <preview :image=\"image\" \n                   :default=\"def_nft\" \n                   contain\n                   height=\"360px\" \n                   radius=\"0\"\n          >\n            <div v-if=\"error && debug\" class=\"debug error\">[{{ nft.id }}] - {{ error }}</div>\n            <moderationStatus :item=\"nft\"/>\n            <likes class=\"likes\" :item=\"nft\"/>\n          </preview>\n        </div>\n        <div class=\"info-container\">\n          <div class=\"info-box\">\n            <div class=\"title-row\" :class=\"{'error': error}\">\n              <div class=\"title\">\n                {{ title }}\n              </div>\n              <btn v-if=\"approved\" color=\"transparent\" height=\"24px\" padding=\"0px\" @click=\"onShare\">\n                <img src=\"~assets/share.svg\" width=\"24\">\n              </btn>\n              <btn v-if=\"approved & owned\" color=\"transparent\" height=\"20px\" padding=\"0px 0px 2px 0px\" @click=\"onTransfer\">\n                <img src=\"~assets/transfer.svg\" width=\"20\">\n              </btn>\n            </div>\n            <div class=\"description\" :class=\"{'error': error}\">{{ description }}</div>\n            <div class=\"bottom\">\n              <div class=\"separator\"/>\n              <div class=\"author\" :class=\"{'error': error}\">Creator: <span>{{ author_name }}</span></div>\n              <div class=\"collection\" :class=\"{'error': error || collection_error}\">\n                Collection: <span :class=\"{'link': !(error || collection_error)}\" @click=\"toCollection\">{{ collection_name }}</span>\n              </div>\n              <div class=\"separator\"/>\n              <price :nft=\"nft\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"table-title\">Nft trading history</div>\n      <div :class=\"['table-head', compact ? 'compact' : '']\"> \n        <div>Coin</div>\n        <div>Amount</div>\n        <div v-if=\"sales && sales.length\" class=\"sorted\">\n          Height\n          <img src=\"~assets/arrow-down.svg\" class=\"arrow\"/>\n        </div>\n        <div v-else>\n          Height\n        </div>\n      </div>  \n      <div v-if=\"sales != undefined && sales.length\" class=\"table-body\">\n        <div v-for=\"(sale, index) in sales.slice().reverse()\" :key=\"`sale-${sales.length - index}`\" \n             :class=\"['row', compact ? 'compact' : '']\"\n        >\n          <div>\n            <img src=\"~assets/beam.svg\"/>\n            <span class=\"curr\">BEAM</span>\n          </div>\n          <div class=\"text\">{{ formatAmountFixed(sale.amount) }}</div>\n          <div class=\"text\">{{ formatHeight(sale.height) }}</div>\n        </div>\n      </div>\n      <div v-else-if=\"sales !== undefined && !sales.length\" class=\"table-body-empty\">\n        <img src=\"~assets/empty-wallet.svg\"/>\n        <div>Trading history is empty</div>\n      </div>  \n      <div v-else class=\"table-body-loading\">\n        Loading...\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .nft-page-container {\n    display: flex\n    flex-direction: column\n    box-sizing: border-box\n    width: 100%\n    height: 100%\n\n    &.compact {\n      padding: 0px 5px\n    }\n\n    & .content-wrapper {\n      display: flex\n      flex-direction: column\n      min-height: 0\n      flex: 1\n\n      & .debug {\n        text-align: center\n        color: black\n        padding: 0px 10px\n      }\n\n      & .table-title {\n        box-sizing: border-box\n        padding: 30px 0 20px 0\n        color: rgba(255, 255, 255, 0.5)\n        font-size: 14px\n        text-transform: uppercase\n        font-weight: bold\n        letter-spacing: 3.1px\n        user-select: none\n      }\n      \n      /*\n      *  TABLE HEAD\n      */ \n      & .table-head {\n        border-radius: 10px 10px 0 0\n        background-color: rgba(255, 255, 255, 0.08)\n        font-weight: 700\n        font-size: 14px\n        color: rgba(255, 255, 255, 0.5)     \n        display: flex\n\n        & > div {\n          padding: 9px 5px 12px 5px\n          text-align: center\n          box-sizing: border-box\n\n          &.sorted {\n            color: #fff\n            white-space: nowrap\n\n            .arrow {\n              width:8px\n              height:8px\n              margin-left:3px\n            }\n          }\n\n          &:not(:first-child) {\n            flex: 1\n          }\n        }\n\n        &.compact > div {\n          &:first-child {\n            width: 90px\n          }\n        }\n\n        &:not(.compact) > div {\n          &:first-child {\n            width: 130px\n          }\n        }\n      }\n\n      & .table-body-loading {\n        padding: 35px 25px 0 25px\n        text-align: center\n        color: rgba(255, 255, 255, 0.5)\n      }\n\n      & .table-body-empty {\n        padding: 35px 25px 0 25px\n        text-align: center\n        color: rgba(255, 255, 255, 0.5)\n\n        & img {\n          padding-bottom: 10px\n        }\n      }\n\n      /*\n      *  TABLE BODY\n      */ \n      & .table-body {\n        display: block\n        overflow-y: overlay\n\n        & .row {\n          display: flex\n          padding: 12px 0 11px 0\n\n          & > div {\n            display: flex\n            align-items: center\n            justify-content: center\n            padding: 0px 5px\n            box-sizing: border-box\n\n            &:first-child {\n              padding-left: 9px\n            }\n\n            &:last-child {\n              padding-right: 9px\n            }\n          \n            &:not(:first-child) {\n              flex: 1\n            }\n          }\n\n          &.compact > div {\n            &:first-child {\n              width: 90px\n            }\n          }\n\n          &:not(.compact) > div {\n            &:first-child {\n              width: 130px\n            }\n          }\n\n          .curr {\n            padding: 0 0 3px 10px\n            line-height: 17px\n            box-sizing: border-box\n          }\n\n          .text {\n            padding-bottom: 3px\n          }\n        }\n\n        & > div:nth-child(odd) {\n          background: rgba(255, 255, 255, 0.04)\n        }\n\n        & > div:nth-child(even) {\n          background: rgba(255, 255, 255, 0.02)\n        }\n      }\n\n      & .details-row {\n        display: flex\n        flex-direction: row\n        margin-top: 5px\n\n        .separator {\n          height: 1px\n          margin: 20px 0 15px 0\n          opacity: 0.2\n          border-top: solid 1px #fff\n        }\n\n        & .nft-container {\n          width: 360px\n          background-color: rgba(255, 255, 255, 0.05)\n          border-radius: 10px\n          min-height: 360px\n          margin-right: 10px\n          overflow: hidden\n          \n          & .likes {\n            position: absolute\n            bottom: 9px\n            right: 9px\n          }\n        }\n\n        & .info-container {\n          flex: 1\n          box-sizing: border-box\n          \n          &:not(:first-child) {\n            padding-left: 10px\n          }\n          \n          & .info-box {\n            background-color: rgba(255, 255, 255, 0.05)\n            border-radius: 10px\n            height: 100%\n            box-sizing: border-box\n            padding: 20px 27px \n            display: flex\n            flex-direction: column\n\n            & > .title-row {\n              display: flex\n              flex-direction: row\n              align-items: center\n\n              & > .title {\n                font-size: 20px\n                font-weight: bold\n                color: #fff\n                white-space: nowrap\n                text-overflow: ellipsis\n                overflow: hidden\n                flex: 1\n                padding-right: 15px\n              }\n\n              & > button {\n                &:not(:last-child) {\n                  margin-right: 15px\n                }\n              }\n            }\n\n            & > .description {\n              color: white\n              margin-top: 20px\n              font-size: 16px\n            }\n\n            & .bottom {\n              margin-top: auto\n              \n              & > .author {\n                font-size: 16px\n                color: #fff\n                display: flex\n                flex-direction: row\n\n                & > span {\n                  color: #00f6d2\n                  margin-left: 4px\n                  white-space: nowrap\n                  text-overflow: ellipsis\n                  overflow: hidden\n                }\n              }\n\n              & > .collection {\n                font-size: 16px\n                color: #fff\n                margin-top: 6px\n                display: flex\n                flex-direction: row\n\n                & > span {\n                  color: #00f6d2\n                  margin-left: 4px\n                  white-space: nowrap\n                  text-overflow: ellipsis\n                  overflow: hidden\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n</style>\n\n<script>\nimport messageModal from 'components/message-modal'\nimport transferModal from 'components/transfer-modal'\nimport btn from 'controls/button.vue'\nimport price from 'controls/price'\nimport preview from 'controls/preview'\nimport loading from 'controls/loading'\nimport pageTitle from 'controls/page-title'\nimport moderationStatus from 'controls/moderation-status'\nimport notFound from 'controls/not-found'\nimport likes from 'controls/likes'\nimport artistsStore from 'stores/artists'\nimport nftsStore from 'stores/nfts'\nimport collsStore from 'stores/collections'\nimport utils from 'utils/utils'\nimport {def_images} from 'utils/consts'\n\n/*\nimport \"ag-grid-community/dist/styles/ag-grid.css\"\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\"\nimport { AgGridVue } from \"ag-grid-vue3\"\n*/\n\nexport default {\n  components: {\n    btn,\n    price,\n    preview,\n    pageTitle,\n    loading,\n    notFound,\n    likes,\n    moderationStatus,\n    messageModal,\n    transferModal\n  },\n\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    mode: {\n      type: String,\n      default: 'user'\n    }\n  },\n\n  setup(props) {\n    let nft = nftsStore.getLazyItem(props.id)    \n    let compact = utils.isCompact()\n    return {\n      nft, compact\n    }\n  },\n\n  data () {\n    return {\n      sales: undefined,\n      def_nft: def_images.nft,\n      collection: undefined\n    }\n  },\n\n  computed: {\n    error () {\n      return this.nft.error\n    },\n\n    debug () {\n      return this.$state.debug\n    },\n\n    approved() {\n      return this.nft.approved\n    },\n\n    owned() {\n      return this.nft.owned\n    },\n\n    show_safe () {\n      if (this.mode === 'artist' && this.nft.author === artistsStore.my_key) return false\n      return true\n    },\n    \n    title () {\n      return [this.debug ? `[${this.nft.id}] - ` : '', this.show_safe ? this.nft.safe_label : this.nft.label].join('')\n    },\n\n    description () {\n      return this.show_safe ? this.nft.safe_description : this.nft.description\n    },\n\n    author_name () {\n      return this.show_safe ? this.nft.safe_author_name : this.nft.author_name\n    },\n\n    collection_name() {\n      if (this.collection === null) return 'Error: not found'\n      if (this.collection === undefined) return 'Loading...'\n      return this.show_safe ? this.collection.safe_label : this.collection.label\n    },\n\n    collection_error() {\n      return this.collection === null || (this.collection && this.collection.error)\n    },\n\n    image () {\n      return this.show_safe? this.nft.safe_image : this.nft.image\n    },\n\n    artists () {\n      return artistsStore.artists\n    }\n  },\n\n  watch: {\n    'nft': function (val) {\n      this.collection = collsStore.getLazyItem(val.collection)\n    }\n  },\n\n  created() {\n    (async () => {\n      this.sales = await nftsStore.getSales(this.id)\n    })()\n  },\n\n  methods: {  \n    formatAmountFixed(amount) {\n      return utils.formatAmountFixed(amount, 8)\n    },\n    formatHeight(height) {\n      return utils.formatHeight(height)\n    },\n    onShare() {\n      utils.copyText(window.location.href)\n      let title = this.error ? '' : ` '${this.title}' `\n      this.$refs.messageModal.open('Share NFT', `Link to the NFT ${title} has been copied to clipboard.`)\n    },\n    onTransfer() {\n      this.$refs.transferModal.open()\n    },\n    toAuthor () {\n      // FUTURE\n    },\n    toCollection () {\n      collsStore.toDetails(this.nft.collection, this.mode)\n    }\n  }\n}\n</script>",".nft-page-container {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n.nft-page-container.compact {\n  padding: 0px 5px;\n}\n.nft-page-container .content-wrapper {\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  flex: 1;\n/*\n      *  TABLE HEAD\n      */\n/*\n      *  TABLE BODY\n      */\n}\n.nft-page-container .content-wrapper .debug {\n  text-align: center;\n  color: #000;\n  padding: 0px 10px;\n}\n.nft-page-container .content-wrapper .table-title {\n  box-sizing: border-box;\n  padding: 30px 0 20px 0;\n  color: rgba(255,255,255,0.5);\n  font-size: 14px;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 3.1px;\n  user-select: none;\n}\n.nft-page-container .content-wrapper .table-head {\n  border-radius: 10px 10px 0 0;\n  background-color: rgba(255,255,255,0.08);\n  font-weight: 700;\n  font-size: 14px;\n  color: rgba(255,255,255,0.5);\n  display: flex;\n}\n.nft-page-container .content-wrapper .table-head > div {\n  padding: 9px 5px 12px 5px;\n  text-align: center;\n  box-sizing: border-box;\n}\n.nft-page-container .content-wrapper .table-head > div.sorted {\n  color: #fff;\n  white-space: nowrap;\n}\n.nft-page-container .content-wrapper .table-head > div.sorted .arrow {\n  width: 8px;\n  height: 8px;\n  margin-left: 3px;\n}\n.nft-page-container .content-wrapper .table-head > div:not(:first-child) {\n  flex: 1;\n}\n.nft-page-container .content-wrapper .table-head.compact > div:first-child {\n  width: 90px;\n}\n.nft-page-container .content-wrapper .table-head:not(.compact) > div:first-child {\n  width: 130px;\n}\n.nft-page-container .content-wrapper .table-body-loading {\n  padding: 35px 25px 0 25px;\n  text-align: center;\n  color: rgba(255,255,255,0.5);\n}\n.nft-page-container .content-wrapper .table-body-empty {\n  padding: 35px 25px 0 25px;\n  text-align: center;\n  color: rgba(255,255,255,0.5);\n}\n.nft-page-container .content-wrapper .table-body-empty img {\n  padding-bottom: 10px;\n}\n.nft-page-container .content-wrapper .table-body {\n  display: block;\n  overflow-y: overlay;\n}\n.nft-page-container .content-wrapper .table-body .row {\n  display: flex;\n  padding: 12px 0 11px 0;\n}\n.nft-page-container .content-wrapper .table-body .row > div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0px 5px;\n  box-sizing: border-box;\n}\n.nft-page-container .content-wrapper .table-body .row > div:first-child {\n  padding-left: 9px;\n}\n.nft-page-container .content-wrapper .table-body .row > div:last-child {\n  padding-right: 9px;\n}\n.nft-page-container .content-wrapper .table-body .row > div:not(:first-child) {\n  flex: 1;\n}\n.nft-page-container .content-wrapper .table-body .row.compact > div:first-child {\n  width: 90px;\n}\n.nft-page-container .content-wrapper .table-body .row:not(.compact) > div:first-child {\n  width: 130px;\n}\n.nft-page-container .content-wrapper .table-body .row .curr {\n  padding: 0 0 3px 10px;\n  line-height: 17px;\n  box-sizing: border-box;\n}\n.nft-page-container .content-wrapper .table-body .row .text {\n  padding-bottom: 3px;\n}\n.nft-page-container .content-wrapper .table-body > div:nth-child(odd) {\n  background: rgba(255,255,255,0.04);\n}\n.nft-page-container .content-wrapper .table-body > div:nth-child(even) {\n  background: rgba(255,255,255,0.02);\n}\n.nft-page-container .content-wrapper .details-row {\n  display: flex;\n  flex-direction: row;\n  margin-top: 5px;\n}\n.nft-page-container .content-wrapper .details-row .separator {\n  height: 1px;\n  margin: 20px 0 15px 0;\n  opacity: 0.2;\n  border-top: solid 1px #fff;\n}\n.nft-page-container .content-wrapper .details-row .nft-container {\n  width: 360px;\n  background-color: rgba(255,255,255,0.05);\n  border-radius: 10px;\n  min-height: 360px;\n  margin-right: 10px;\n  overflow: hidden;\n}\n.nft-page-container .content-wrapper .details-row .nft-container .likes {\n  position: absolute;\n  bottom: 9px;\n  right: 9px;\n}\n.nft-page-container .content-wrapper .details-row .info-container {\n  flex: 1;\n  box-sizing: border-box;\n}\n.nft-page-container .content-wrapper .details-row .info-container:not(:first-child) {\n  padding-left: 10px;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box {\n  background-color: rgba(255,255,255,0.05);\n  border-radius: 10px;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 20px 27px;\n  display: flex;\n  flex-direction: column;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box > .title-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box > .title-row > .title {\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex: 1;\n  padding-right: 15px;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box > .title-row > button:not(:last-child) {\n  margin-right: 15px;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box > .description {\n  color: #fff;\n  margin-top: 20px;\n  font-size: 16px;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box .bottom {\n  margin-top: auto;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box .bottom > .author {\n  font-size: 16px;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box .bottom > .author > span {\n  color: #00f6d2;\n  margin-left: 4px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box .bottom > .collection {\n  font-size: 16px;\n  color: #fff;\n  margin-top: 6px;\n  display: flex;\n  flex-direction: row;\n}\n.nft-page-container .content-wrapper .details-row .info-container .info-box .bottom > .collection > span {\n  color: #00f6d2;\n  margin-left: 4px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n","<template>\n  <div class=\"textarea-container\">\n    <label v-if=\"label\" class=\"label\">{{ label }}</label>\n    <textarea v-bind=\"$attrs\" class=\"input\"\n              :value=\"modelValue\"\n              :placeholder=\"placeholder\"\n              :maxlength=\"max_length\"\n              :readonly=\"readonly\"\n              :style=\"input_style\"\n              @input=\"$emit('update:modelValue', $event.target.value)\"\n              @keydown=\"onKeyDown\"\n    >\n    </textarea>\n    <charslen v-if=\"max_length\" :readonly=\"readonly\" :max_length=\"max_length\" :value=\"modelValue.length\"/>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n.textarea-container {\n  width: 100%\n  box-sizing: border-box\n\n  .label {\n    display: block\n    margin-bottom: 10px\n    color: rgba(255,255,255,0.6)\n    font-family: 'SFProDisplay', sans-serif\n    font-size: 14px\n  }\n\n  .input {\n    box-sizing: border-box\n    font-family: 'SFProDisplay', sans-serif\n    background-color: rgba(255, 255, 255, 0.08)\n    border: none\n    outline-width: 0\n    font-size: 14px\n    color: white\n    padding: 0\n    border-radius: 10px\n    padding: 10px 12px \n    width: 100%\n    resize: none\n\n    &:read-only {\n      background-color: rgba(255, 255, 255, 0.03)\n      color: rgba(255, 255, 255, 0.3)\n    }\n\n    &::placeholder {\n      font-size: 14px\n      color: rgba(255, 255, 255, 0.3)\n    }\n\n    &:not(:read-only):focus {\n      background-color: rgba(255, 255, 255, 0.12)\n      outline-width: 0\n    }\n  }\n\n  .info {\n    display: flex\n    justify-content: space-between\n    font-family: 'SFProDisplay', sans-serif\n    opacity: 0.7\n    font-style: italic\n    font-weight: 400\n    font-size: 12px\n\n    &.readonly {\n      color: rgba(255, 255, 255, 0.35)\n    }\n  }\n}\n</style>\n\n<script>\nimport charslen from 'controls/charslen'\nimport validators from 'utils/validators'\n\nexport default {\n  components: {\n    charslen\n  },\n\n  props: {\n    label: {\n      type: String,\n      default: '',\n      required: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    placeholder: {\n      type: String,\n      default: '',\n      required: false\n    },\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: String,\n      default: '',\n      required: true\n    },\n    valid:{\n      type: Boolean,\n      required: false\n    },\n    max_length:{\n      type: Number,\n      default: 150,\n      required: false\n    },\n    height: {\n      type: String,\n      default: '79px'\n    },\n    allowed: {\n      type: Object,\n      default: validators.text_allowed(),\n      required: false\n    }\n  },\n  \n  emits: [\n    'update:modelValue'\n  ],\n\n  computed: {\n    input_style () {\n      return {\n        'min-height': this.height\n      }\n    }\n  },\n\n  methods: {\n    onKeyDown(ev) {\n      // TODO: merge 'allowed', 'valid' & 'max_chars' to one regex\n      if (this.allowed && !this.allowed.test(ev.key)) {\n        ev.preventDefault()\n      }\n    }\n  }\n}\n</script>\n",".textarea-container {\n  width: 100%;\n  box-sizing: border-box;\n}\n.textarea-container .label {\n  display: block;\n  margin-bottom: 10px;\n  color: rgba(255,255,255,0.6);\n  font-family: 'SFProDisplay', sans-serif;\n  font-size: 14px;\n}\n.textarea-container .input {\n  box-sizing: border-box;\n  font-family: 'SFProDisplay', sans-serif;\n  background-color: rgba(255,255,255,0.08);\n  border: none;\n  outline-width: 0;\n  font-size: 14px;\n  color: #fff;\n  padding: 0;\n  border-radius: 10px;\n  padding: 10px 12px;\n  width: 100%;\n  resize: none;\n}\n.textarea-container .input:read-only {\n  background-color: rgba(255,255,255,0.03);\n  color: rgba(255,255,255,0.3);\n}\n.textarea-container .input::placeholder {\n  font-size: 14px;\n  color: rgba(255,255,255,0.3);\n}\n.textarea-container .input:not(:read-only):focus {\n  background-color: rgba(255,255,255,0.12);\n  outline-width: 0;\n}\n.textarea-container .info {\n  display: flex;\n  justify-content: space-between;\n  font-family: 'SFProDisplay', sans-serif;\n  opacity: 0.7;\n  font-style: italic;\n  font-weight: 400;\n  font-size: 12px;\n}\n.textarea-container .info.readonly {\n  color: rgba(255,255,255,0.35);\n}\n","<template>\n  <div :style=\"ctrlStyle\">\n    <div class=\"add-image-container\" :style=\"borderStyle\" :readonly=\"readonly\" :class=\"{'error': error || (modelValue || {}).error}\">\n      <div v-if=\"modelValue && !readonly\" class=\"remove\" :style=\"remove_style\">\n        <img src=\"~/assets/remove.svg\" @click=\"onRemove\"/>\n      </div>\n      <img v-if=\"modelValue && modelValue.object\" ref=\"image\" :src=\"modelValue.object\" class=\"image\" :style=\"image_style\" @load=\"onLoad\"/>\n      <div v-if=\"modelValue && modelValue.loading\" class=\"text\" :readonly=\"readonly\">Loading...</div>\n      <div v-if=\"modelValue && modelValue.error\" class=\"text\" :readonly=\"readonly\">Failed to load image</div>\n      <label v-if=\"!modelValue\" class=\"text\" :for=\"input_id\" :readonly=\"readonly\" v-html=\"title\"/>\n      <input v-if=\"!readonly\"\n             :id=\"input_id\"\n             ref=\"input\"\n             type=\"file\"\n             class=\"files\"\n             :accept=\"accept\"\n             @change=\"onUpload\"\n      />\n    </div>\n    <div v-if=\"error && show_error\" class=\"error\">\n      {{ error }}\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .add-image-container {\n    display: flex\n    align-items: center\n    justify-content: center\n    position:relative\n    background-color: rgba(26, 246, 214, 0.1)\n    height: 100%\n\n    &[readonly] {\n      opacity: 0.6\n    }\n\n    .remove {\n      background-color: rgba(0, 0, 0, 0.7)\n      position: absolute\n      z-index: 2\n      border-radius: 9999px\n      cursor: pointer\n      width: 34px\n      height: 34px\n      display: flex\n      align-items: center\n      justify-content: center\n\n      &>img {\n        width: 20px\n        height: 20px\n      }\n    }\n\n    .image {\n      width: 100%\n      height: 100%\n      border: 1px dashed transparent\n    }\n    \n    .files {\n      visibility:hidden\n      width: 0\n    }\n\n    .text {\n      width: 100%\n      height: 100%\n      display: flex\n      text-align: center\n      justify-content: center\n      align-items: center\n      font-size: 14px\n      color: #1af6d6\n\n      &:not([readonly]) {\n        cursor: pointer\n      }\n\n      &[readonly] {\n        opacity: 0.6\n      }\n    }\n  }\n\n  .error {\n    font-size: 12px\n    font-weight: 400\n    font-style: italic\n    text-align: right\n    padding-right: 4px\n  }\n</style>\n\n<script>\nimport utils from 'utils/utils'\nimport {common, genUniqueID} from 'utils/consts'\n\nexport default {\n  props: {\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: Object,\n      required: false,\n      default: undefined\n    },\n    error: {\n      type: String,\n      required: false,\n      default:undefined\n    },\n    height: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    width: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    min_height: {\n      type: Number,\n      required: false,\n      default: undefined\n    },\n    min_width: {\n      type: Number,\n      required: false,\n      default: undefined\n    },\n    title: {\n      type: String,\n      default: '',\n      required: true\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n    accept: {\n      type: String,\n      default: 'image/*',\n      required: false\n    },\n    contain: {\n      type: Boolean,\n      default: false\n    },\n    cover: {\n      type: Boolean,\n      default: false\n    },\n    show_error: {\n      type: Boolean,\n      default: true\n    },\n    rounded: {\n      type: Boolean,\n      default: false\n    },\n  },\n\n  emits: [\n    'update:modelValue',\n    'update:error'\n  ],\n\n  data() {\n    return {\n      input_id: genUniqueID()\n    }\n  },\n\n  computed: {\n    ctrlStyle() {\n      let res = {}\n\n      if (this.height) {\n        res.height = this.height\n      }\n\n      if (this.width) {\n        res.width = this.width\n      }\n\n      return res\n    },\n    borderStyle() {\n      return {\n        'border': this.modelValue ? '1px dashed transparent' : '1px dashed #1AF6D6',\n        'border-radius': this.rounded ? `${parseInt(this.height)/2}px` : '10px'\n      }\n    },\n    image_style() {\n      let res = {\n        'border-radius': this.rounded ? `${parseInt(this.height)/2}px` : '10px'\n      }\n      \n      if (this.cover) {\n        res['object-fit'] = 'cover'\n      }\n\n      if (this.contain) {\n        res['object-fit'] = 'contain'\n      }\n\n      return res\n    },\n    remove_style() {\n      if (this.rounded) {\n        return {\n          'left': `${parseInt(this.height)/2-17}px`,\n          'top': `${parseInt(this.height)/2-17}px`\n        }\n      }\n      return {\n        'top': '20px',\n        'right': '20px'\n      }\n    },\n  },\n  methods: {\n    onRemove () {\n      this.$refs.input.value = ''\n      this.$emit('update:modelValue', null)\n      this.$emit('update:error', null)\n    },\n    onUpload (e) {\n      let file = e.target.files[0]\n      let reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = (e) => {\n        this.$emit('update:modelValue', {\n          object: e.target.result,\n          file\n        })\n      }\n    },\n    onLoad() {\n      console.log('!!!!Image', this.modelValue)\n      //\n      // Check file size\n      //\n      let file = this.modelValue.file\n      if (file) {\n        if (file.size >= common.MAX_IMAGE_SIZE) {\n          let error = `Image size must be less than ${utils.formatBytes(common.MAX_IMAGE_SIZE)}`\n          this.$emit('update:error', error)\n          return\n        }\n      }\n\n      //\n      // Check image size\n      //\n      if (this.min_width || this.min_height) {\n        let type = file ? file.type : this.modelValue.mime_type\n        if (type !== 'image/svg+xml') {\n          let werr = this.min_width && this.$refs.image.naturalWidth < this.min_width\n          let herr = this.min_height && this.$refs.image.naturalHeight < this.min_height\n          if (werr || herr) {\n            this.$emit('update:error', `Image size must be at least ${this.min_width}x${this.min_height}px`) \n            return\n          }\n        }\n      }\n\n      //\n      // Everything is OK\n      //\n      this.$emit('update:error', undefined)\n    }\n  }\n}\n</script>\n",".add-image-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: rgba(26,246,214,0.1);\n  height: 100%;\n}\n.add-image-container[readonly] {\n  opacity: 0.6;\n}\n.add-image-container .remove {\n  background-color: rgba(0,0,0,0.7);\n  position: absolute;\n  z-index: 2;\n  border-radius: 9999px;\n  cursor: pointer;\n  width: 34px;\n  height: 34px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.add-image-container .remove>img {\n  width: 20px;\n  height: 20px;\n}\n.add-image-container .image {\n  width: 100%;\n  height: 100%;\n  border: 1px dashed transparent;\n}\n.add-image-container .files {\n  visibility: hidden;\n  width: 0;\n}\n.add-image-container .text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  color: #1af6d6;\n}\n.add-image-container .text:not([readonly]) {\n  cursor: pointer;\n}\n.add-image-container .text[readonly] {\n  opacity: 0.6;\n}\n.error {\n  font-size: 12px;\n  font-weight: 400;\n  font-style: italic;\n  text-align: right;\n  padding-right: 4px;\n}\n","<template>\n  <messageModal ref=\"messageModal\"/>\n  <div class=\"edit-artist-container\">\n    <template v-if=\"edit_self\">\n      <pageTitle title=\"Edit your Artist\"/>\n      <p class=\"description\">\n        <i>After your account is changed it would not be visible until reviewed by a moderator.<br>\n          NFTs from this collection would still appear in the gallery.\n        </i>\n      </p>\n    </template>\n    <template v-else>\n      <pageTitle title=\"Become an Artist\"/>\n      <p class=\"description\">\n        To become a publisher you need to set up a username.<br>\n        Registration will allow you to publish and manage your NFTs.<br>\n        <i>After your account is created it would not be visible until reviewed by a moderator.</i>\n      </p>\n    </template>\n    <div class=\"scrollable\">\n      <div class=\"fields\">\n        <div class=\"col-first\">\n          <formInput v-model=\"label\"\n                     label=\"Artist Name*\"\n                     :valid=\"label_valid\"\n                     :max_length=\"25\"\n                     :readonly=\"edit_self || in_set_artist\"\n                     style=\"margin-bottom:58px;margin-top:0\"\n          />\n          <formInput v-model=\"website\"\n                     label=\"Website\"\n                     placeholder=\"https://website.name/\"\n                     img=\"globe\"\n                     :max_length=\"150\"\n                     :valid=\"website_valid\"\n                     :readonly=\"in_set_artist\"\n          />\n          <formInput v-model=\"twitter\"\n                     label=\"Twitter\"\n                     placeholder=\"twitter\"\n                     img=\"twitter\"\n                     :max_length=\"15\"\n                     :valid=\"twitter_valid\"\n                     :readonly=\"in_set_artist\"\n                     :counter=\"false\"\n                     :allowed=\"twitter_allowed\"\n          />\n          <formInput v-model=\"instagram\"\n                     label=\"Instagram\"\n                     placeholder=\"instagram\"\n                     img=\"instagram\"\n                     :max_length=\"30\"\n                     :valid=\"instagram_valid\"\n                     :readonly=\"in_set_artist\"\n                     :counter=\"false\"\n                     :allowed=\"instagram_allowed\"\n          />\n        </div>\n        <div class=\"col-second\">\n          <textArea v-model=\"about\"\n                    label=\"About me\"\n                    :valid=\"about_valid\"\n                    :max_length=\"75\"\n                    :readonly=\"in_set_artist\"\n          />\n          <div class=\"uploads-container\" style=\"margin-top:45px;\">\n            <addImage v-model=\"banner\"\n                      v-model:error=\"banner_error\"\n                      accept=\"image/jpeg,image/png,image/svg+xml\"\n                      title=\"Add an artist banner<br>(*.jpg, *.png, *.svg)<br>&nbsp;\"  \n                      height=\"135px\"\n                      cover\n                      :show_error=\"false\"\n                      :min_width=\"1400\"\n                      :min_height=\"260\"\n                      :readonly=\"in_set_artist\" \n            />\n            <div class=\"ellipse\" :style=\"ellipse_style\">\n              <addImage v-model=\"avatar\"\n                        v-model:error=\"avatar_error\"\n                        accept=\"image/jpeg,image/png,image/svg+xml\"\n                        title=\"Add an artist image<br>(*.jpeg, *.png, *.svg)\"\n                        height=\"136px\"\n                        width=\"136px\"\n                        cover\n                        rounded\n                        :show_error=\"false\"\n                        :min_width=\"136\"\n                        :min_height=\"136\"\n                        :readonly=\"in_set_artist\" \n              />  \n            </div>\n            <div v-if=\"!avatar_valid || !banner_valid\" class=\"error_msg\">\n              <p class=\"error\">{{ banner_error || avatar_error }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p v-if=\"in_set_artist\" class=\"intx_text\">\n        Artist info cannot be changed while artist transaction is in progress\n      </p>\n      <div class=\"actions\">\n        <btn text=\"cancel\" @click=\"$store.toBack()\">\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn :text=\"edit_self ? 'update artist' : 'create account'\" \n             color=\"green\" \n             :disabled=\"!can_submit || in_set_artist\" \n             @click=\"onSetArtist\"\n        >\n          <img src=\"~assets/create.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .edit-artist-container {\n    width: 100%\n    height: 100%\n    display: flex\n    flex-direction: column\n\n    .description {\n      font-size: 14px\n      text-align: center\n      color: #fff\n      margin: 10px 0px 30px 0px\n      font-family: 'SFProDisplay', sans-serif\n\n      & > i {\n        opacity: 0.7\n        display: block\n        margin-top: 6px\n      }\n    }\n\n    .intx_text {\n      font-size: 14px\n      text-align: center\n      color: #fff\n      margin: 30px 0px 0px 0px\n      font-family: 'SFProDisplay', sans-serif\n    }\n\n    .scrollable {\n      overflow-y: overlay\n      overflow-x: hidden\n      flex: 1\n\n      .fields {\n        padding: 0 30px\n        display: flex\n\n        .col-first {\n          flex-basis: 50%\n\n          & > *:not(:last-child) {\n            margin-bottom: 20px\n          }\n        }\n\n        .col-second {\n          flex-basis: 50%\n          padding-left: 30px\n          height: 420px\n\n          & > *:not(:last-child) {\n            margin-bottom: 20px\n          }\n\n          .uploads-container {\n            position: relative\n\n            .ellipse {\n              border-radius: 74px\n              width: 150px\n              height: 150px\n              position: relative\n              left: 50%\n              transform: translate(-50%, -30%)\n              display: flex\n              justify-content: center\n              align-items: center\n\n              .avatar {\n                height: 136px\n                width: 136px\n                background-color: rgba(26, 246, 214, 0.1)\n                border-radius: 68px\n\n                .text {\n                  height: 100%\n                  display: flex\n                  justify-content: center\n                  align-items: center\n                  font-size: 14px\n                  color: #1af6d6\n                  cursor: pointer\n\n                  &[readonly] {\n                    opacity: 0.6\n                  }\n                }\n\n                &[readonly] {\n                  opacity: 0.6\n                }\n\n                .remove {\n                  background-color: rgba(0, 0, 0, 0.7)\n                  position: absolute\n                  left: 50%\n                  top: 50%\n                  transform: translate(-50%,-50%)\n                  z-index: 2\n                  border-radius: 9999px\n                  padding: 7px 7px 3px 7px\n                  cursor: pointer\n                }\n\n                .files {\n                  visibility:hidden\n                  width: 0\n                }\n              \n                .image {\n                  width: 100%\n                  height: 100%\n                  object-fit: cover\n                  border-radius: 9999px\n                  border: 1px dashed transparent\n                }\n              }\n            }\n          \n            .error_msg {\n              text-align: center\n              margin-top: -42px\n              margin-bottom: 26px\n\n              & > p {\n                font-style: italic\n                font-size: 12px\n                font-weight: 400\n                margin: 0\n              }\n            }\n          }\n        }\n      }\n\n      .actions {\n        display:flex\n        justify-content: center\n        margin-top: 30px\n        margin-bottom: 10px\n\n        & > *:not(:first-child) {\n          margin-left: 30px\n        }\n      }\n    }\n  }\n</style>\n\n<script>\nimport messageModal from 'components/message-modal'\nimport formInput from 'controls/form-input'\nimport textArea from 'controls/textarea'\nimport pageTitle from 'controls/page-title'\nimport btn from 'controls/button'\nimport addImage from 'controls/add-image'\nimport artistsStore from 'stores/artists'\nimport validators from 'utils/validators'\nimport utils from 'utils/utils'\nimport {common} from 'utils/consts'\n\nexport default {\n  components: {\n    messageModal,\n    formInput, \n    textArea, \n    pageTitle,\n    addImage,\n    btn\n  },\n\n  props: {\n    id: {\n      type: String,\n      required: false,\n      default: ''\n    }\n  },\n\n  data () {\n    return {\n      label_: undefined,\n      website_: undefined,\n      twitter_: undefined,\n      instagram_: undefined,\n      about_: undefined,\n      banner_: undefined,\n      banner_error: undefined,\n      avatar_: undefined,\n      avatar_error: undefined\n    }\n  },\n\n  computed: {\n    in_set_artist() {\n      return !!artistsStore.artist_tx\n    },\n    edit_self () {\n      return !!(this.id === artistsStore.my_id && artistsStore.is_artist)\n    },\n    avatar_style() {\n      return {\n        'border' :  this.avatar ? '1px dashed transparent' : (this.in_set_artist ? '1px dashed rgba(26, 246, 214, 0.7)' : '1px dashed #1AF6D6'),\n      }\n    },\n    ellipse_style() {\n      return {\n        'background-color': utils.getStyles().background_main\n      }\n    },\n    label_valid() {\n      let value = this.label\n      return !value || value.length <= 25\n    },\n    website_valid() {\n      let value = this.website\n      return !value || (value.length <= 150 && validators.url(value))\n    },\n    twitter_allowed() {\n      return validators.twitter_allowed()\n    },\n    twitter_valid() {\n      let value = this.twitter\n      return !value || validators.twitter(value)\n    },\n    instagram_allowed() {\n      return validators.instagram_allowed()\n    },\n    instagram_valid() {\n      let value = this.instagram\n      return !value || validators.instagram(value)\n    },\n    about_valid() {\n      let value = this.about\n      return !value || value.length <= 75\n    },\n    banner_valid() {\n      return !this.banner || !this.banner_error\n    },\n    avatar_valid() {\n      return !this.avatar || !this.avatar_error\n    },\n    can_submit () {\n      return this.label && this.label_valid &&\n             this.website_valid &&\n             this.twitter_valid &&\n             this.instagram_valid &&\n             this.about_valid &&\n             this.banner_valid &&\n             this.avatar_valid\n    },\n    artist () {\n      return this.id ? artistsStore.artists[this.id] : undefined\n    },\n    label: {\n      get () {\n        return this.label_ != undefined ? this.label_ : (this.artist || {}).label\n      },\n      set (val) {\n        console.log('set label: ', val)\n        this.label_ = val\n      }\n    },\n    website: {\n      get () {\n        return this.website_ != undefined ? this.website_ : (this.artist || {}).website\n      },\n      set (val) {\n        this.website_ = val\n      }\n    },\n    twitter: {\n      get () {\n        return this.twitter_ != undefined ? this.twitter_ : (this.artist || {}).twitter\n      },\n      set (val) {\n        this.twitter_ = val\n      }\n    },\n    instagram: {\n      get () {\n        return this.instagram_ != undefined ? this.instagram_ : (this.artist || {}).instagram\n      },\n      set (val) {\n        this.instagram_ = val\n      }\n    },\n    about: {\n      get () {\n        return this.about_ != undefined ? this.about_ : (this.artist || {}).about\n      },\n      set (val) {\n        this.about_ = val\n      }\n    },\n    banner: {\n      get () {\n        if (this.banner_ === null) {\n          return undefined\n        }\n        return this.banner_ || (this.artist || {}).banner\n      },\n      set (val) {\n        this.banner_ = val\n      }\n    },\n    avatar: {\n      get () {\n        if (this.avatar_ === null) {\n          return undefined\n        }\n        return this.avatar_ || (this.artist || {}).avatar\n      },\n      set (val) {\n        this.avatar_ = val\n      }\n    },\n    max_image_size() {\n      return utils.formatBytes(common.MAX_IMAGE_SIZE)\n    },\n  },\n\n  methods: {    \n    async onSetArtist() {\n      if (this.$state.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n\n      try {\n        let data = {\n          website:   this.website,\n          twitter:   this.twitter,\n          instagram: this.instagram,\n          about:     this.about,\n          avatar:    this.avatar,\n          banner:    this.banner\n        }        \n        let txid = await artistsStore.setArtist(this.label, data)\n        if (!txid) {\n          // user cancelled\n          return\n        }\n      }\n      catch(err) {\n        if (err.error === 'label already exists') {\n          this.$refs.messageModal.open(\n            'Duplicate artist name',\n            'Artist with the same name already exists.<br>Choose another name and retry.',\n            true)\n          return\n        }\n        throw err\n      }\n      this.$store.toBack()\n    }\n  }\n}\n</script>",".edit-artist-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.edit-artist-container .description {\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  margin: 10px 0px 30px 0px;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.edit-artist-container .description > i {\n  opacity: 0.7;\n  display: block;\n  margin-top: 6px;\n}\n.edit-artist-container .intx_text {\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  margin: 30px 0px 0px 0px;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.edit-artist-container .scrollable {\n  overflow-y: overlay;\n  overflow-x: hidden;\n  flex: 1;\n}\n.edit-artist-container .scrollable .fields {\n  padding: 0 30px;\n  display: flex;\n}\n.edit-artist-container .scrollable .fields .col-first {\n  flex-basis: 50%;\n}\n.edit-artist-container .scrollable .fields .col-first > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.edit-artist-container .scrollable .fields .col-second {\n  flex-basis: 50%;\n  padding-left: 30px;\n  height: 420px;\n}\n.edit-artist-container .scrollable .fields .col-second > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container {\n  position: relative;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse {\n  border-radius: 74px;\n  width: 150px;\n  height: 150px;\n  position: relative;\n  left: 50%;\n  transform: translate(-50%, -30%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar {\n  height: 136px;\n  width: 136px;\n  background-color: rgba(26,246,214,0.1);\n  border-radius: 68px;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar .text {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  color: #1af6d6;\n  cursor: pointer;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar .text[readonly] {\n  opacity: 0.6;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar[readonly] {\n  opacity: 0.6;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar .remove {\n  background-color: rgba(0,0,0,0.7);\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  border-radius: 9999px;\n  padding: 7px 7px 3px 7px;\n  cursor: pointer;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar .files {\n  visibility: hidden;\n  width: 0;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .ellipse .avatar .image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 9999px;\n  border: 1px dashed transparent;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .error_msg {\n  text-align: center;\n  margin-top: -42px;\n  margin-bottom: 26px;\n}\n.edit-artist-container .scrollable .fields .col-second .uploads-container .error_msg > p {\n  font-style: italic;\n  font-size: 12px;\n  font-weight: 400;\n  margin: 0;\n}\n.edit-artist-container .scrollable .actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  margin-bottom: 10px;\n}\n.edit-artist-container .scrollable .actions > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <messageModal ref=\"messageModal\"/>\n  <div class=\"collection-container\">\n    <template v-if=\"edit_mode\">\n      <pageTitle title=\"Edit collection\"/>\n      <p v-if=\"collection\" class=\"description\">\n        After collection is changed it would not be visible until reviewed by a moderator.<br> \n        NFTs from collection would still appear in gallery.\n      </p>\n    </template>\n    <template v-else>\n      <pageTitle title=\"Add new collection\"/>\n      <p class=\"description\">\n        Before you can add any NFT you need to create a collection<br>\n        <i>After your collection is created it would not be visible until reviewed by a moderator.</i>\n      </p>\n    </template>\n    <loading v-if=\"edit_mode && collection === undefined\" text=\"Loading Collection\"/>\n    <notFound v-else-if=\"edit_mode && collection == null\" text=\"Collection Not Found\" error/>\n    <div v-else class=\"scrollable\">\n      <div class=\"fields\">\n        <div class=\"col-first\">\n          <formInput v-model=\"label\"\n                     label=\"Collection Name*\"\n                     :valid=\"label_valid\"\n                     :max_length=\"40\"\n                     style=\"margin-bottom:55px;margin-top:0\"\n          />\n          <formInput v-model=\"website\"\n                     label=\"Website\"\n                     placeholder=\"https://website.name/\"\n                     img=\"globe\"\n                     :max_length=\"150\"\n                     :valid=\"website_valid\"\n          />\n          <formInput v-model=\"twitter\"\n                     label=\"Twitter\"\n                     placeholder=\"twitter\"\n                     img=\"twitter\"\n                     :max_length=\"15\"\n                     :valid=\"twitter_valid\"\n                     :counter=\"false\"\n                     :allowed=\"twitter_allowed\"\n          />\n          <formInput v-model=\"instagram\"\n                     label=\"Instagram\"\n                     placeholder=\"instagram\"\n                     img=\"instagram\"\n                     :max_length=\"30\"\n                     :valid=\"instagram_valid\"\n                     :counter=\"false\"\n                     :allowed=\"instagram_allowed\"\n          />\n        </div>\n        <div class=\"col-second\">\n          <textArea v-model=\"description\"\n                    label=\"Description\"\n                    height=\"198px\"\n                    :valid=\"description_valid\"\n                    :max_length=\"1000\"\n          />\n          <addImage v-model=\"cover\"\n                    v-model:error=\"cover_error\"\n                    title=\"Add collection image<br>(*.jpg, *.png, *.svg)\"\n                    accept=\"image/jpeg,image/png,image/svg+xml\"\n                    height=\"135px\"\n                    :min_width=\"1400\"\n                    :min_height=\"260\"\n                    cover\n          />\n        </div>\n      </div>\n      <div class=\"actions\">\n        <btn text=\"cancel\" @click=\"$store.toBack()\">\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn :text=\"edit_mode ? 'update collection' : 'create collection'\" \n             color=\"green\" \n             :disabled=\"!can_submit\" \n             @click=\"onSetCollection\"\n        >\n          <img src=\"~assets/create.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .collection-container {\n    width: 100%\n    height: 100%\n    display: flex\n    flex-direction: column\n\n    .description {\n      font-size: 14px\n      text-align: center\n      color: #fff\n      margin: 10px 0px 20px 0px\n      font-family: 'SFProDisplay', sans-serif\n\n      & > i {\n        opacity: 0.7\n        line-height: 29px\n      }\n    }\n\n    .scrollable {\n      overflow-y: overlay\n      overflow-x: hidden\n      flex: 1\n\n      .fields {\n        padding: 0 30px\n        display: flex\n\n        .col-first {\n          flex-basis: 50%\n\n          & > *:not(:last-child) {\n            margin-bottom: 20px\n          }\n        }\n\n        .col-second {\n          flex-basis: 50%\n          margin-left: 30px\n\n          & > *:not(:last-child) {\n            margin-bottom: 20px\n          }\n        }\n      }\n\n      .text {\n        width: 100%\n        height: 100%\n        display: flex\n        justify-content: center\n        align-items: center\n        font-size: 14px\n        color: #1af6d6\n        cursor: pointer\n      }\n    }\n\n    .actions {\n      display: flex\n      justify-content: center\n      margin-top: 35px\n      margin-bottom: 10px\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n  }\n</style>\n\n<script>\nimport formInput from 'controls/form-input'\nimport textArea from 'controls/textarea'\nimport pageTitle from 'controls/page-title'\nimport btn from 'controls/button'\nimport addImage from 'controls/add-image'\nimport loading from 'controls/loading'\nimport notFound from 'controls/not-found'\nimport collsStore from 'stores/collections'\nimport validators from 'utils/validators'\nimport messageModal from 'components/message-modal'\n\nexport default {\n  components: {\n    messageModal,\n    formInput, \n    textArea, \n    pageTitle,\n    btn,\n    addImage,\n    loading,\n    notFound\n  },\n\n  props: {\n    id: {\n      type: Number,\n      required: false,\n      default: undefined\n    },\n  },\n\n  setup(props) {\n    let collection = props.id ? collsStore.getLazyItem(props.id) : undefined\n    return {\n      collection\n    }\n  },\n\n  data () {\n    return {\n      label_: undefined,\n      website_: undefined,\n      twitter_: undefined,\n      instagram_: undefined,\n      description_: undefined,\n      cover_: undefined,\n      cover_error: undefined,\n    }\n  },\n\n  computed: {\n    edit_mode () {\n      return this.id !== undefined\n    },\n    label: {\n      get () {\n        return this.label_ != undefined ? this.label_ : (this.collection || {}).label\n      },\n      set (val) {\n        this.label_ = val\n      }\n    },\n    label_valid() {\n      let value = this.label\n      return !value || value.length <= 40\n    },\n    website: {\n      get () {\n        return this.website_ != undefined ? this.website_ : (this.collection || {}).website\n      },\n      set (val) {\n        this.website_ = val\n      }\n    },\n    website_valid() {\n      let value = this.website\n      if (!value) return true\n      return value.length <= 150 && validators.url(value)\n    },\n    twitter: {\n      get () {\n        return this.twitter_ != undefined ? this.twitter_ : (this.collection || {}).twitter\n      },\n      set (val) {\n        this.twitter_ = val\n      }\n    },\n    twitter_valid() {\n      let value = this.twitter\n      return !value || validators.twitter(value)\n    },\n    twitter_allowed() {\n      return validators.twitter_allowed()\n    },\n    instagram: {\n      get () {\n        return this.instagram_ != undefined ? this.instagram_ : (this.collection || {}).instagram\n      },\n      set (val) {\n        this.instagram_ = val\n      }\n    },\n    instagram_valid() {\n      let value = this.instagram\n      return !value || validators.instagram(value)\n    },\n    instagram_allowed() {\n      return validators.instagram_allowed()\n    },\n    description: {\n      get () {\n        return this.description_ != undefined ? this.description_ : (this.collection || {}).description\n      },\n      set (val) {\n        this.description_ = val\n      }\n    },\n    description_valid() {\n      let value = this.description\n      return !value || value.length <= 1000\n    },\n    cover: {\n      get () {\n        if (this.cover_ === null) {\n          return undefined\n        }\n        return this.cover_ || (this.collection || {}).cover\n      },\n      set (val) {\n        this.cover_ = val\n      }\n    },\n    cover_valid() {\n      return !this.cover || !this.cover_error\n    },\n    can_submit () {\n      return this.label && this.label_valid &&\n             this.website_valid &&\n             this.twitter_valid &&\n             this.instagram_valid &&\n             this.description_valid &&\n             this.cover_valid\n    }\n  },\n\n  methods: {   \n    async onSetCollection() {\n      if (this.$state.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n      \n      try {\n        let data = {\n          website:     this.website,\n          twitter:     this.twitter,\n          instagram:   this.instagram,\n          description: this.description,\n          cover:       this.cover\n        }\n        let txid = await collsStore.setCollection(this.id, this.label, data)\n        if (!txid) {\n          // user cancelled\n          return\n        }\n      }\n      catch(err) {\n        if (err.error === 'label already exists') {\n          this.$refs.messageModal.open(\n            'Duplicate collection name', \n            'You already have a collection with the same name.<br>Please choose another name and retry.',\n            true\n          )\n          return\n        }\n        throw err\n      }\n      this.$store.toBack()\n    }\n  }\n}\n</script>",".collection-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.collection-container .description {\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  margin: 10px 0px 20px 0px;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.collection-container .description > i {\n  opacity: 0.7;\n  line-height: 29px;\n}\n.collection-container .scrollable {\n  overflow-y: overlay;\n  overflow-x: hidden;\n  flex: 1;\n}\n.collection-container .scrollable .fields {\n  padding: 0 30px;\n  display: flex;\n}\n.collection-container .scrollable .fields .col-first {\n  flex-basis: 50%;\n}\n.collection-container .scrollable .fields .col-first > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.collection-container .scrollable .fields .col-second {\n  flex-basis: 50%;\n  margin-left: 30px;\n}\n.collection-container .scrollable .fields .col-second > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.collection-container .scrollable .text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  color: #1af6d6;\n  cursor: pointer;\n}\n.collection-container .actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 35px;\n  margin-bottom: 10px;\n}\n.collection-container .actions > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <div class=\"switch-container\">\n    <label class=\"switch\">\n      <input type=\"checkbox\"\n             :checked=\"modelValue\"\n             @change=\"$emit('update:modelValue', $event.target.checked)\"\n      >\n      <span class=\"slider round\"></span>\n    </label>\n    <label class=\"switch_text\">{{ label }}</label>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n.switch-container {\n  display: flex\n  align-items: flex-end\n\n  .switch {\n    position: relative\n    display: inline-block\n    width: 29px\n    height: 19px\n              \n    .slider {\n      position: absolute\n      cursor: pointer\n      top: 0\n      left: 0\n      right: 0\n      bottom: 0\n      background-color: rgba(255, 255, 255, 0.05)\n      transition: 0.4s\n      border: 1px solid #b4bec8\n\n      &::before {\n        position: absolute\n        content: \"\"\n        height: 17px\n        width: 16px\n        left: 0px\n        bottom: 0px\n        background-color: #b4bec8\n        transition: 0.4s\n      }\n    }\n    .round {\n      border-radius: 34px\n\n      &:before {\n        border-radius: 50%\n      }\n    }\n\n    input {\n      opacity: 0\n      width: 0\n      height: 0\n      \n      &:checked + .slider {\n        background-color: rgba(26, 246, 214, 0.35)\n      }\n\n      &:focus + .slider {\n        box-shadow: 0 0 1px #2196f3\n      }\n\n      &:checked + .slider:before {\n        transform: translateX(11px)\n      }\n    }\n  }\n\n  .switch_text {\n    margin-left:10px\n    font-size: 14px\n    line-height: 17px\n    color: rgba(255, 255, 255, 0.7)\n  }\n}\n</style>\n\n<script>\nexport default {\n  props: {\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: Boolean,\n      required: true,\n    },\n    label: {\n      type: String,\n      default: '',\n    },\n  },\n  emits: [\n    'update:modelValue'\n  ]\n}\n</script>\n",".switch-container {\n  display: flex;\n  align-items: flex-end;\n}\n.switch-container .switch {\n  position: relative;\n  display: inline-block;\n  width: 29px;\n  height: 19px;\n}\n.switch-container .switch .slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(255,255,255,0.05);\n  transition: 0.4s;\n  border: 1px solid #b4bec8;\n}\n.switch-container .switch .slider::before {\n  position: absolute;\n  content: \"\";\n  height: 17px;\n  width: 16px;\n  left: 0px;\n  bottom: 0px;\n  background-color: #b4bec8;\n  transition: 0.4s;\n}\n.switch-container .switch .round {\n  border-radius: 34px;\n}\n.switch-container .switch .round:before {\n  border-radius: 50%;\n}\n.switch-container .switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.switch-container .switch input:checked + .slider {\n  background-color: rgba(26,246,214,0.35);\n}\n.switch-container .switch input:focus + .slider {\n  box-shadow: 0 0 1px #2196f3;\n}\n.switch-container .switch input:checked + .slider:before {\n  transform: translateX(11px);\n}\n.switch-container .switch_text {\n  margin-left: 10px;\n  font-size: 14px;\n  line-height: 17px;\n  color: rgba(255,255,255,0.7);\n}\n","<template>\n  <div>\n    <div class=\"form-container\">\n      <label class=\"label\">{{ title }}</label>\n    </div>\n    <div class=\"custom-select\" :class=\"{'readonly': readonly}\" @blur=\"show = false\">\n      <div class=\"selected\" :class=\"{'open focus': show}\" @click=\"open\">\n        {{ options[modelValue].name }}\n        <img src=\"~assets/arrow-down.svg\" class=\"arrow\"/>\n      </div>\n      <div v-show=\"show\" class=\"items\">\n        <div v-for=\"(option, idx) in (options || [])\" :key=\"option.id\" @click=\"onSelected($event, idx)\">\n          <span :class=\"{ highlight: modelValue === idx}\">{{ option.name }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.form-container {\n  box-sizing: border-box\n\n  .label {\n    display: block\n    margin-bottom:10px\n    color: rgba(255,255,255,0.6)\n    font-family: 'SFProDisplay', sans-serif\n    font-size: 14px\n\n    &.error {\n      color: rgba(255, 98, 92, 0.7)\n    }\n  }\n}\n\n.custom-select {\n  position: relative\n  display: flex\n  outline: none\n  background-color: rgba(255, 255, 255, 0.08)\n  border-radius: 10px\n  cursor: pointer\n\n  .selected {\n    color: #fff\n    width: 100%\n    user-select: none\n    font-size: 14px\n    font-weight: normal\n    letter-spacing: 0.47px\n    padding: 12px 15px\n\n    &.open {\n      border: none\n      border-radius: 10px\n    }\n\n    &.focus {\n      background-color: rgba(255, 255, 255, 0.12)\n    }\n  }\n\n  .arrow {\n    width: 9px\n    height: 5px\n    position: absolute\n    right: 20px \n    top:50%\n  }\n\n  .items {\n    background-color: rgb(50, 50, 50)\n    color: #fff\n    position: absolute\n    border:none\n    border-radius: 4px\n    font-size: 14px\n    right: 0\n    z-index: 1\n    margin-top: 47px\n    width: 100%\n    max-height: 250px\n    overflow-y: scroll\n\n    div {\n      color: #fff\n      padding: 15px 0px 15px 15px\n      white-space: nowrap\n      line-height: 1\n      cursor: pointer\n      user-select: none\n      \n      &:hover {\n        color: #00f6d2\n      }\n    }\n\n    .highlight {\n      font-weight: bold\n      color: #00f6d2\n    }\n  }\n}\n\n.readonly {\n  background: rgba(255, 255, 255, 0.03)\n  cursor: initial\n}\n</style>\n\n<script>\nimport {nextTick} from 'vue'\n \nexport default {\n  props: {\n    title: {\n      type: String,\n      default: '',\n      requred: true\n    },\n    options: {\n      type: Array,\n      required: true,\n    },\n    // eslint-disable-next-line vue/prop-name-casing\n    modelValue: {\n      type: [Number],\n      required: true,\n      default: 0,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n      required: false\n    },\n  },\n  \n  emits: [\n    'update:modelValue'\n  ],\n\n  data () {\n    return {\n      show: false,\n    }\n  },\n  \n  methods: {\n    onSelected(ev, idx) {\n      this.$emit('update:modelValue', idx)\n      nextTick(() => {\n        this.show = false\n      })\n    },\n    close() {\n      this.show = false\n    },\n    open(ev) {\n      if(this.readonly) {\n        return \n      }\n      if (this.show) {\n        return\n      }\n      this.show = true\n      nextTick(() => {\n        let clickAway = (evc) => {\n          if (ev != evc) {\n            document.removeEventListener('click', clickAway, true)\n            this.close()\n          }\n        }\n        document.addEventListener('click', clickAway, true)\n      })\n    },\n  }\n}\n</script>\n\n",".form-container {\n  box-sizing: border-box;\n}\n.form-container .label {\n  display: block;\n  margin-bottom: 10px;\n  color: rgba(255,255,255,0.6);\n  font-family: 'SFProDisplay', sans-serif;\n  font-size: 14px;\n}\n.form-container .label.error {\n  color: rgba(255,98,92,0.7);\n}\n.custom-select {\n  position: relative;\n  display: flex;\n  outline: none;\n  background-color: rgba(255,255,255,0.08);\n  border-radius: 10px;\n  cursor: pointer;\n}\n.custom-select .selected {\n  color: #fff;\n  width: 100%;\n  user-select: none;\n  font-size: 14px;\n  font-weight: normal;\n  letter-spacing: 0.47px;\n  padding: 12px 15px;\n}\n.custom-select .selected.open {\n  border: none;\n  border-radius: 10px;\n}\n.custom-select .selected.focus {\n  background-color: rgba(255,255,255,0.12);\n}\n.custom-select .arrow {\n  width: 9px;\n  height: 5px;\n  position: absolute;\n  right: 20px;\n  top: 50%;\n}\n.custom-select .items {\n  background-color: #323232;\n  color: #fff;\n  position: absolute;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  right: 0;\n  z-index: 1;\n  margin-top: 47px;\n  width: 100%;\n  max-height: 250px;\n  overflow-y: scroll;\n}\n.custom-select .items div {\n  color: #fff;\n  padding: 15px 0px 15px 15px;\n  white-space: nowrap;\n  line-height: 1;\n  cursor: pointer;\n  user-select: none;\n}\n.custom-select .items div:hover {\n  color: #00f6d2;\n}\n.custom-select .items .highlight {\n  font-weight: bold;\n  color: #00f6d2;\n}\n.readonly {\n  background: rgba(255,255,255,0.03);\n  cursor: initial;\n}\n","<template>\n  <div class=\"nft-container\">\n    <pageTitle title=\"Add NFT\"/>\n    <loading v-if=\"collections === undefined\" text=\"Loading collections\"/>\n    <notFound v-else-if=\"collections == null\" text=\"Failed to load collections\" error/>\n    <template v-else>\n      <p class=\"description\">\n        <i>After NFT is created it would not be visible<br>\n          until reviewed by a moderator.</i>\n      </p>\n      <div class=\"scrollable\">\n        <div class=\"fields\">\n          <div class=\"col-first\">\n            <formInput v-model=\"name\"\n                       label=\"NFT Name*\"\n                       :valid=\"name_valid\"\n                       :max_length=\"35\"\n            />\n            <textArea v-model=\"description\"\n                      label=\"Description\"\n                      :valid=\"description_valid\"\n                      :max_length=\"300\"\n            />\n            <formSelect v-model=\"collection\"\n                        title=\"Collection\"\n                        :options=\"collections\"\n            />\n            <priceInput v-model=\"price\"\n                        label=\"Price\"\n            />\n            <switchInput v-model=\"dontsell\" label=\"Not for sale\"/>\n          </div>\n          <div class=\"col-second\">\n            <addImage v-model=\"image\"\n                      v-model:error=\"image_error\"\n                      class=\"add-image\"\n                      accept=\"image/apng,image/gif,image/jpeg,image/png,image/svg+xml,image/webp\"\n                      title=\"Add NFT image here<br>(*.apng, *.gif, *.jpeg, *.png, *.svg, *.webp)\"\n                      height=\"390px\"\n                      width=\"390px\"\n                      :min_width=\"360\"\n                      :min_height=\"360\"\n                      contain\n            />\n          </div>\n        </div>\n        <div class=\"actions\">\n          <btn text=\"cancel\" @click=\"$store.toBack()\">\n            <img src=\"~assets/cancel.svg\"/>\n          </btn>\n          <btn text=\"upload NFT\" color=\"green\" :disabled=\"!can_submit\" @click=\"onUploadNFT\">\n            <img src=\"~assets/create.svg\"/>\n          </btn>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n  .nft-container {\n    width: 100%\n    height: 100%\n    display: flex\n    flex-direction: column\n\n    .description {\n      font-size: 14px\n      text-align: center\n      color: #fff\n      margin: 10px 0px 20px 0px\n      font-family: 'SFProDisplay', sans-serif\n\n      & > i {\n        opacity: 0.7\n        display: block\n        margin-top: 6px\n      }\n    }\n\n    .scrollable {\n      overflow-y: overlay\n      overflow-x: hidden\n      flex: 1\n      \n      .fields {\n        padding: 0px 30px 0px 30px\n        display: flex\n        \n        .col-first {\n          flex: 1\n\n          & > *:not(:last-child) {\n            margin-bottom: 20px\n          }\n        }\n\n        .col-second {\n          margin-left: 30px\n          margin-top: 30px\n        }\n      }\n    }\n\n    .actions {\n      display:flex\n      justify-content: center\n      margin-top: 25px\n      margin-bottom: 10px\n\n      & > *:not(:first-child) {\n        margin-left: 30px\n      }\n    }\n  }\n</style>\n\n<script>\nimport formInput from 'controls/form-input'\nimport textArea from 'controls/textarea'\nimport pageTitle from 'controls/page-title'\nimport notFound from 'controls/not-found'\nimport btn from 'controls/button'\nimport addImage from 'controls/add-image'\nimport priceInput from 'controls/price-input'\nimport switchInput from 'controls/switch-input'\nimport formSelect from 'controls/form-select'\nimport loading from 'controls/loading'\nimport collsStore from 'stores/collections'\nimport nftsStore from 'stores/nfts'\nimport {common} from 'utils/consts'\nimport {computed} from 'vue'\n\nexport default {\n  components: {\n    formInput, \n    textArea, \n    pageTitle,\n    btn,\n    addImage,\n    priceInput,\n    switchInput,\n    formSelect,\n    loading,\n    notFound\n  },\n\n  props: {\n    collid: {\n      type: Number,\n      default: undefined,\n      required: false\n    }\n  },\n\n  setup (props) {\n    const lazyColls = collsStore.getLazyAllItems('artist')\n    const collections = computed(() => {\n      let colls = lazyColls.value\n      if (!colls) {\n        return undefined\n      }\n      let res = []\n      for (let coll of colls) {\n        res.push({\n          name: coll.label,\n          id: coll.id\n        })\n      }\n      return res\n    })\n    return {\n      collections\n    }\n  },\n\n  data () {\n    return {\n      name: '',\n      description: '',\n      image: undefined,\n      image_error: undefined,\n      price: '',\n      dontsell: true,\n      collection: 0\n    }\n  },\n\n  computed: {\n    name_valid() {\n      let value = this.name\n      return !value || value.length <= 35\n    },\n    description_valid() {\n      let value = this.description\n      return !value || value.length <= 300\n    },\n    can_submit () {\n      return this.name && this.name_valid &&\n             this.description_valid &&\n             this.image && !this.image_error\n    }\n  },\n\n  watch: {\n    dontsell(newval) {\n      if(newval) {\n        this.price = ''\n      }\n    },\n    price(newval) {\n      this.dontsell = !newval || parseFloat(newval) === 0.0\n    }\n  },\n\n  created() {\n    let unwatch = this.$watch('collections', (newval) => {\n      if (this.collid !== undefined && newval.length) {\n        for(let idx = 0; idx < newval.length; idx++) {\n          if(newval[idx].id === this.collid) {\n            this.collection = idx\n            break\n          }\n        }\n        unwatch()\n      }\n    })\n  },\n\n  methods: {    \n    async onUploadNFT() {\n      let data = {\n        description: this.description,\n        image: this.image\n      }\n      let collID = this.collections[this.collection].id\n      let price  = parseFloat(this.price) * common.GROTHS_IN_BEAM\n      let txid = await nftsStore.createNFT(collID, this.name, data, price)\n      if (!txid) {\n        // user cancelled\n        return\n      }\n      this.$store.toBack()\n    }\n  }\n}\n</script>",".nft-container {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.nft-container .description {\n  font-size: 14px;\n  text-align: center;\n  color: #fff;\n  margin: 10px 0px 20px 0px;\n  font-family: 'SFProDisplay', sans-serif;\n}\n.nft-container .description > i {\n  opacity: 0.7;\n  display: block;\n  margin-top: 6px;\n}\n.nft-container .scrollable {\n  overflow-y: overlay;\n  overflow-x: hidden;\n  flex: 1;\n}\n.nft-container .scrollable .fields {\n  padding: 0px 30px 0px 30px;\n  display: flex;\n}\n.nft-container .scrollable .fields .col-first {\n  flex: 1;\n}\n.nft-container .scrollable .fields .col-first > *:not(:last-child) {\n  margin-bottom: 20px;\n}\n.nft-container .scrollable .fields .col-second {\n  margin-left: 30px;\n  margin-top: 30px;\n}\n.nft-container .actions {\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  margin-bottom: 10px;\n}\n.nft-container .actions > *:not(:first-child) {\n  margin-left: 30px;\n}\n","<template>\n  <div class=\"admin-container\">\n    <div class=\"rewards-row\">\n      <span>Rewards left: {{ balance_reward }}</span>&nbsp;&nbsp;&nbsp;\n      <input type=\"button\" value=\"Add Rewards\" @click=\"onAddRewards\"/>\n    </div>\n\n    <div v-if=\"moderators.length\" class=\"moderators-list\">\n      Moderators list\n      <table> \n        <thead><th>ID</th><th>Name</th><th>Status</th><th>Action</th></thead>\n        <tbody>\n          <tr v-for=\"(moderator) in (moderators || [])\" :key=\"moderator.id\" class=\"moderator\">\n            <td>{{ moderator.id.substring(0, 5) }}...{{ moderator.id.slice(-5) }}</td>\n            <td>{{ moderator.name }}</td>\n            <td>{{ moderator.status }}</td>\n            <td class=\"link\" @click=\"onAction(moderator.id, moderator.status)\">\n              {{ moderator.status === \"approved\" ? 'DISABLE' : 'ENABLE' }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <input type=\"button\" value=\"Add Moderator\" @click=\"onAddModerator\"/>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  .admin-container {\n    .rewards-row {\n      display: flex\n      margin-bottom: 20px\n    }\n    .moderators-list {\n      border-top: 1px solid rgba(225, 255, 255, 0.6)\n      padding-top: 10px\n      \n      & table {\n        margin-top: 10px\n        border-collapse: collapse\n        border: 1px solid rgba(225, 255, 255, 0.6) !important\n        margin-bottom: 15px\n\n        & thead {\n          & th {\n            padding-bottom: 5px\n            border-bottom: 1px solid rgba(225, 255, 255, 0.6) !important\n          }\n        }\n\n        & td {\n          padding: 6px 10px\n        }\n\n        & tr:last-child {\n          & td {\n            padding-bottom: 9px\n          }\n        }\n      }\n      \n      .link {\n        color: #00f6d2\n        cursor: pointer\n      }\n    }\n  }\n</style>\n\n<script>\nimport utils from 'utils/utils'\nimport artistsStore from 'stores/artists'\nimport {common} from 'utils/consts'\nimport {computed} from 'vue'\n\nexport default {\n  computed: {\n    balance_reward () {\n      return utils.formatAmountFixed(this.$state.balance_reward, 4)\n    },\n    moderators () {\n      let result = []\n      for (let moderator of this.$state.moderators) {\n        let author = artistsStore.loadArtist(moderator.id)\n        moderator.name = computed(() => {\n          if (author.loading) return 'N/A'\n          if (author.error) return 'ERROR'\n          return author.label\n        })\n        result.push(moderator)\n      }\n      return result\n    }\n  },\n\n  methods: {\n    async onAddRewards() {\n      let amount = prompt('Enter amount in REWARD TOKEN (full coins)')\n      if (amount == null) {\n        return\n      }\n      await this.$store.addRewards(parseInt(amount) * common.GROTHS_IN_BEAM)\n    },\n    async onAction(id, status) {\n      await this.$store.setModerator(id, status === 'approved' ? 0 : 1)\n    },\n    async onAddModerator() {\n      let id = prompt('Enter moderator\\'s artist ID')\n      if (id != null) {\n        await this.$store.setModerator(id, 1)\n      }\n    }\n  }\n}\n</script>\n",".admin-container .rewards-row {\n  display: flex;\n  margin-bottom: 20px;\n}\n.admin-container .moderators-list {\n  border-top: 1px solid rgba(225,255,255,0.6);\n  padding-top: 10px;\n}\n.admin-container .moderators-list table {\n  margin-top: 10px;\n  border-collapse: collapse;\n  border: 1px solid rgba(225,255,255,0.6) !important;\n  margin-bottom: 15px;\n}\n.admin-container .moderators-list table thead th {\n  padding-bottom: 5px;\n  border-bottom: 1px solid rgba(225,255,255,0.6) !important;\n}\n.admin-container .moderators-list table td {\n  padding: 6px 10px;\n}\n.admin-container .moderators-list table tr:last-child td {\n  padding-bottom: 9px;\n}\n.admin-container .moderators-list .link {\n  color: #00f6d2;\n  cursor: pointer;\n}\n","<template>\n  <div class=\"admin-page\">\n    <pageTitle :title=\"page_title\">\n      <btnWallet/>\n      <btnKey/>\n      <btnProfile/>\n    </pageTitle>\n    <div class=\"gallery-container\">\n      <tabsctrl v-model=\"active_tab\" class=\"tabs\" :tabs=\"tabs\"/>\n      <list v-if=\"show_nfts\"\n            class=\"list\"\n            items_name=\"NFTs to be reviewed\"\n            component=\"approve-nft\"\n            mode=\"moderator\"\n            selectable\n            :store=\"nftsStore\"\n            :selected=\"selected_nfts\"\n            @selected=\"onNFTSelected\"\n      />\n      <list v-if=\"show_collections\"\n            class=\"list\"\n            items_name=\"collections to be reviewed\"\n            component=\"approve-collection\"\n            mode=\"moderator\"\n            selectable\n            :store=\"collsStore\"\n            :selected=\"selected_collections\"\n            @selected=\"onCollectionSelected\"\n      />\n      <list v-if=\"show_artists\"\n            class=\"list\"\n            items_name=\"artists to be reviewed\"\n            component=\"approve-artist\"\n            mode=\"moderator\"\n            selectable\n            :store=\"artistsStore\"\n            :selected=\"selected_artists\"\n            @selected=\"onArtistSelected\"\n      />\n      <adminPage v-if=\"show_admin\" class=\"list\"/>\n      <div v-if=\"show_buttons\" class=\"buttons\">\n        <btn text=\"cancel\" \n             :disabled=\"!any_selected\"\n             @click=\"onCancel\"\n        >\n          <img src=\"~assets/cancel.svg\"/>\n        </btn>\n        <btn text=\"reject\"\n             color=\"red\"\n             :disabled=\"!any_selected\"\n             @click=\"onReject\"\n        >\n          <img src=\"~assets/reject.svg\"/>\n        </btn>\n        <btn text=\"approve\"\n             color=\"green\"\n             :disabled=\"!any_selected\"\n             @click=\"onApprove\"\n        >\n          <img src=\"~assets/ok.svg\"/>\n        </btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.admin-page {\n  width: 100%\n  height: 100%\n  display: flex\n  flex-direction: column\n\n  & > .gallery-container {\n    flex: 1\n    box-sizing: border-box\n    display: flex\n    flex-direction: column\n    min-height: 0\n    margin-top: 15px\n\n    & > .list {\n      margin-top: 20px\n      flex: 1\n    }\n\n    & > .buttons {\n      display: flex\n      flex-direction: row\n      justify-content: center\n      margin: 20px 0px\n\n      & > * {\n        margin-right: 15px\n      }\n    }\n  }\n}\n</style>\n\n<script>\nimport adminPage from 'components/admin-page'\nimport tabsctrl from 'controls/tabs'\nimport pageTitle from 'controls/page-title'\nimport btn from 'controls/button'\nimport btnKey from 'controls/btn-key'\nimport btnWallet from 'controls/btn-wallet'\nimport btnProfile from 'controls/btn-profile'\nimport list from 'controls/lazy-list'\nimport collsStore from 'stores/collections'\nimport nftsStore from 'stores/nfts'\nimport artistsStore from 'stores/artists-lazy'\nimport {admin_tabs} from 'utils/consts'\n\nexport default {\n  components: {\n    tabsctrl,\n    pageTitle,\n    btnKey,\n    btnWallet,\n    btnProfile,\n    adminPage,\n    list,\n    btn\n  },\n\n  data() {\n    return {\n      selected_nfts: [],\n      selected_collections: [],\n      selected_artists: []\n    }\n  },\n\n  computed: {\n    page_title() {\n      return this.$state.is_admin ? 'admin panel' : 'moderator panel'\n    },\n    tabs () {\n      let tabs = []\n\n      if (this.$state.is_moderator) {\n        tabs.push({id: admin_tabs.NFTS, name: 'NFTs'})\n        tabs.push({id: admin_tabs.COLLECTIONS, name: 'Collections'})\n        tabs.push({id: admin_tabs.ARTISTS, name: 'Artists'})\n      }\n\n      if (this.$state.is_admin) {\n        tabs.push({id: admin_tabs.ADMIN, name: 'Admin'})\n      }\n\n      return tabs\n    },\n    active_tab: {\n      get() {\n        return this.$state.admin_active_tab\n      },\n      set(value) {\n        this.$store.setAdminTab(value)\n      }\n    },\n    show_artists() {\n      return this.active_tab === admin_tabs.ARTISTS\n    },\n    show_collections() {\n      return this.active_tab == admin_tabs.COLLECTIONS\n    },\n    show_nfts() {\n      return this.active_tab == admin_tabs.NFTS\n    },\n    show_admin() {\n      return this.active_tab == admin_tabs.ADMIN\n    },\n    show_buttons() {\n      return !this.show_admin\n    },\n    collsStore() {\n      return collsStore\n    },\n    nftsStore() {\n      return nftsStore\n    },\n    artistsStore() {\n      return artistsStore\n    },\n    active_selected() {\n      if (this.show_artists) return this.selected_artists\n      if (this.show_collections) return this.selected_collections\n      return this.selected_nfts\n    },\n    any_selected() {\n      return this.active_selected.length > 0\n    },\n    active_approve() {\n      if (this.show_artists) return this.$store.approveArtists\n      if (this.show_collections) return this.$store.approveCollections\n      return this.$store.approveNFTs\n    }\n  },\n\n  methods: {\n    onCollectionSelected(id) {\n      if (this.selected_collections.includes(id)) {\n        this.selected_collections = this.selected_collections.filter(item => item != id)\n      } else {\n        this.selected_collections.push(id)\n      }\n    },\n    onNFTSelected(id) {\n      if (this.selected_nfts.includes(id)) {\n        this.selected_nfts = this.selected_nfts.filter(item => item != id)\n      } else {\n        this.selected_nfts.push(id)\n      }\n    },\n    onArtistSelected(id) {\n      if (this.selected_artists.includes(id)) {\n        this.selected_artists = this.selected_artists.filter(item => item != id)\n      } else {\n        this.selected_artists.push(id)\n      }\n    },\n    onCancel() {\n      this.active_selected.length = 0\n    },\n    async onReject() {\n      if (this.$state.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n\n      let txid = await this.active_approve.call(this.$store, this.active_selected, false)\n      if (txid) this.active_selected.length = 0\n    },\n    async onApprove() {\n      if (this.$state.is_headless) {\n        return this.$store.switchToHeaded()  \n      } \n      \n      let txid = await this.active_approve.call(this.$store, this.active_selected, true)\n      if (txid) this.active_selected.length = 0\n    }\n  }\n}\n</script>\n",".admin-page {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.admin-page > .gallery-container {\n  flex: 1;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  margin-top: 15px;\n}\n.admin-page > .gallery-container > .list {\n  margin-top: 20px;\n  flex: 1;\n}\n.admin-page > .gallery-container > .buttons {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 20px 0px;\n}\n.admin-page > .gallery-container > .buttons > * {\n  margin-right: 15px;\n}\n","<template>\n  <div :class=\"{'nft': true, 'error': item.error}\" @click=\"onDetails\" @contextmenu=\"onMenu\">\n    <moderationMenu ref=\"moderationMenu\" :item=\"item\"/>\n\n    <!---- Preview OR Loading ---->\n    <preview :image=\"item.image\" \n             :default=\"def_nft\"\n             height=\"213px\" \n             text_color=\"dimgray\"\n             contain\n    >\n      <div v-if=\"error && debug\" class=\"debug error\">{{ error }}</div>\n      <moderationStatus :item=\"item\"/>\n      <likes class=\"likes\" :item=\"item\"/>\n    </preview>\n\n    <!---- First info row ---->\n    <div class=\"info-row\">\n      <!---- Title ---->\n      <div class=\"title\" :class=\"{'error': item.error}\">{{ label }}</div>\n    </div>\n\n    <!---- Second info row, author ---->\n    <div class=\"info-row\" :class=\"{'error': item.author_error}\">\n      <span class=\"author\" v-html=\"by_author\"></span>\n    </div>\n\n    <!---- Third info row, price/buy/sell ----->\n    <div class=\"price-row\">\n      <price :nft=\"item\" mode=\"compact\"/>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  .nft {\n    display: flex\n    flex-direction: column\n    width: 213px\n    border: none\n    background-color: rgba(240, 205, 205, 0.05)\n    border-radius: 10px\n    position:relative\n    overflow: hidden\n    cursor: pointer\n\n    & .debug {\n      text-align: center\n      color: black\n      padding: 0px 5px\n    }\n\n    & > .delete {\n      position: absolute\n      left: 190px\n      top: 8px\n      width: 15px\n      cursor: pointer\n    }\n\n    & > .info-row {\n      box-sizing: border-box\n      padding: 0 12px 3px 12px\n      display: flex\n      align-items: center\n      flex-direction: row\n      overflow: hidden\n\n      & .title {\n        font-size: 14px\n        color: #fff\n        white-space: nowrap\n        text-overflow: ellipsis\n        overflow: hidden\n        padding-top: 14px\n        flex: 1\n      }\n\n      & .author {\n        font-size: 12px\n        color: rgba(255, 255, 255, 0.5)\n        display: inline-block\n        white-space: nowrap\n        overflow: hidden\n        text-overflow: ellipsis\n      }\n    }\n\n    & .likes {\n      position: absolute\n      bottom: 9px\n      right: 8px\n    }\n\n    & .price-row {\n      min-height: 31px\n      margin: 3px 0 7px 0\n      padding: 0 12px 0 14px\n      display: flex\n      align-items: center\n      flex-direction: row\n    }\n  }\n</style>\n\n<script>\nimport price from 'controls/price'\nimport preview from 'controls/preview'\nimport likes from 'controls/likes'\nimport moderationMenu from 'controls/moderation-menu'\nimport moderationStatus from 'controls/moderation-status'\nimport nftsStore from 'stores/nfts'\nimport artistsStore from 'stores/artists'\nimport {def_images} from 'utils/consts'\n\nexport default {\n  components: {\n    price,\n    preview,\n    likes,\n    moderationMenu,\n    moderationStatus\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    mode: {\n      type: String,\n      default: 'user'\n    },\n  },\n\n  data () {\n    return {\n      // eslint-disable-next-line no-undef\n      def_nft: def_images.nft\n    }\n  },\n\n  computed: {\n    label () {\n      return this.$state.debug ? `[${this.item.id}] - ${this.item.label}` : this.item.label\n    },\n\n    is_headless () {\n      return this.$state.is_headless\n    },\n\n    id () {\n      return this.item.id\n    },\n\n    by_author() {\n      return this.mode === 'artist' && this.item.author === artistsStore.my_key ? this.item.by_author : this.item.safe_by_author\n    },\n\n    error() {\n      return this.item.error\n    },\n\n    debug() {\n      return this.$state.debug\n    }\n  },\n\n  methods: {\n    onDelete (ev) {\n      ev.stopPropagation()\n      this.$store.approveNFTs([this.id], false)\n    },\n\n    onDetails(ev) {\n      nftsStore.toDetails(this.id, this.mode)\n    },\n\n    onMenu (ev) {\n      this.$refs.moderationMenu.open(ev)\n    }\n  }\n}\n</script>",".nft {\n  display: flex;\n  flex-direction: column;\n  width: 213px;\n  border: none;\n  background-color: rgba(240,205,205,0.05);\n  border-radius: 10px;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n}\n.nft .debug {\n  text-align: center;\n  color: #000;\n  padding: 0px 5px;\n}\n.nft > .delete {\n  position: absolute;\n  left: 190px;\n  top: 8px;\n  width: 15px;\n  cursor: pointer;\n}\n.nft > .info-row {\n  box-sizing: border-box;\n  padding: 0 12px 3px 12px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  overflow: hidden;\n}\n.nft > .info-row .title {\n  font-size: 14px;\n  color: #fff;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding-top: 14px;\n  flex: 1;\n}\n.nft > .info-row .author {\n  font-size: 12px;\n  color: rgba(255,255,255,0.5);\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.nft .likes {\n  position: absolute;\n  bottom: 9px;\n  right: 8px;\n}\n.nft .price-row {\n  min-height: 31px;\n  margin: 3px 0 7px 0;\n  padding: 0 12px 0 14px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n}\n","<template>\n  <messageModal ref=\"messageModal\"/>\n  <btn v-if=\"item.owned\" \n       padding=\"0px\" \n       radius=\"6px\" \n       width=\"35px\"\n       height=\"35px\"\n       color=\"rgba(0, 0, 0, 0.6)\"\n       class=\"btn-edit\"\n       :hover=\"false\"\n       @click=\"onEdit\"\n  >\n    <img width=\"18\" src=\"~assets/pencil.svg\">\n  </btn>\n</template>\n\n<style lang=\"stylus\" scoped>\n  .btn-edit {\n    position: absolute\n    bottom: 10px\n    right: 10px\n  }\n</style>\n\n<script>\nimport btn from 'controls/button'\nimport messageModal from 'components/message-modal'\n\nexport default {\n  components: {\n    btn,\n    messageModal\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true\n    }\n  },\n\n  methods: {\n    onEdit(ev) {\n      ev.stopPropagation()\n      if (!this.$state.is_desktop) {\n        this.$refs.messageModal.open('Edit collection', 'It is not possible edit colleciton in web & mobile wallets.<br>Please download desktop wallet and try from there.')\n        return\n      }\n      if (!this.item.owned || this.item.error) {\n        return\n      }\n      this.item.store.toEditItem(this.item.id)\n    }\n  }\n}\n</script>\n",".btn-edit {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n","<template>\n  <!--selectItem-->\n  <div :class=\"{'collection': true, 'error': item.error}\" @click=\"onDetails\" @contextmenu=\"onMenu\">\n    <moderationMenu ref=\"moderationMenu\" :item=\"item\"/>\n    <preview :image=\"item.cover\"\n             :default=\"def_cover\"\n             height=\"140px\" \n             cover\n    >\n      <div v-if=\"error && debug\" class=\"debug error\">{{ error }}</div>\n      <btnEdit :item=\"item\"/> \n      <moderationStatus :item=\"item\"/>\n    </preview>\n    <div class=\"info-row\">  \n      <div class=\"avatar\" :class=\"{'error': item.author_error}\">\n        <preview :image=\"avatar\" \n                 :show_text=\"false\"\n                 :default=\"def_avatar\"\n                 width=\"72px\" \n                 height=\"72px\" \n                 radius=\"36px 36px\"\n        />\n      </div>\n      <div class=\"text\">\n        <div class=\"label\" :class=\"{'error': item.error}\">{{ coll_name }}</div>\n        <div class=\"author\" :class=\"{'error': item.author_error}\" v-html=\"by_author\"></div>\n        <div class=\"description\">{{ item.description }}</div>\n        <hr class=\"line\"/>\n        <div class=\"items-info\" :class=\"{'error': item.error}\">\n          <div class=\"count\">\n            <div class=\"text\">{{ nfts_count }}</div>\n            <div>{{ nfts_count == 1 ? 'NFT' : 'NFTs' }}</div>\n          </div>\n          <amount :amount=\"trade_volume\" size=\"12px\" info=\"trade volume\" class=\"icon_styles\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /selectitem -->\n</template>\n    \n<style scoped lang=\"stylus\">\n  .collection {\n    width: 442px\n    border: none\n    background-color: rgba(240, 205, 205, 0.05)\n    border-radius: 10px\n    position: relative\n    overflow: hidden\n    cursor: pointer\n\n    & .debug {\n      text-align: center\n      color: black\n      padding: 0px 5px\n    }\n\n    & > .info-row {\n      display: flex\n      flex-direction: row\n      padding: 10px 16px 10px 20px\n\n      & > .avatar {\n        margin-right: 18px\n      }\n\n      & > .text {\n        flex: 1\n        \n        & > .label {\n          font-weight: 700\n          font-size: 16px\n          height: 22px\n        }\n\n        & > .author {\n          font-size: 14px\n        }\n\n        & > .description {\n          font-size: 12px\n          color: rgba(255, 255, 255, 0.5)\n          margin-top: 6px\n          height: 32px\n          display: -webkit-box\n          -webkit-line-clamp: 2\n          -webkit-box-orient: vertical\n          overflow: hidden\n        }\n\n        & > .line {\n          height: 1px\n          opacity: 0.1\n          background-color: white\n          border: none\n        }\n\n        & > .items-info {\n          display:flex\n          font-size: 12px\n          margin-top: 10px\n          \n          .count {\n            display: flex\n            flex-direction: column\n            flex-basis: 20%\n            \n            & > .text {\n              font-weight: bold\n              color: white\n            }\n          }\n\n          .icon_styles {\n            height: 18px\n          }\n        }\n      }\n    }\n  }\n</style>\n\n<script>\nimport preview from 'controls/preview'\nimport amount from 'controls/amount'\nimport moderationStatus from 'controls/moderation-status'\nimport btnEdit from 'controls/btn-edit-collection'\nimport collsStore from 'stores/collections'\nimport artistsStore from 'stores/artists'\nimport {def_images} from 'utils/consts'\nimport moderationMenu from 'controls/moderation-menu'\n\nexport default {\n  components: {\n    preview,\n    amount,\n    btnEdit,\n    moderationStatus,\n    moderationMenu\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    },\n    mode: {\n      type: String,\n      default: 'user'\n    }\n  },\n\n  data () {\n    return {\n      def_avatar: def_images.artist_avatar,\n      def_cover: def_images.artist_banner\n    }\n  },\n\n  computed: {\n    coll_name () {\n      return this.$state.debug ? `[${this.item.id}] - ${this.item.label}` : this.item.label\n    },\n    avatar() {\n      return this.mode === 'artist' && this.item.author === artistsStore.my_key ? this.item.avatar : this.item.safe_avatar\n    },\n    by_author() {\n      return this.mode === 'artist' && this.item.author === artistsStore.my_key ? this.item.by_author : this.item.safe_by_author\n    },\n    nfts_count() {\n      return (this.mode === 'artist' ? this.item.nfts_count : this.item.approved_nfts_count) || 0\n    },\n    debug() {\n      return this.$state.debug\n    },\n    error() {\n      return this.item.error || this.item.author_error\n    },\n    trade_volume() {\n      return this.item.total_sold.volume\n    }\n  },\n\n  methods: {\n    onDetails (ev) {\n      collsStore.toDetails(this.item.id, this.mode)\n    },\n    onMenu (ev) {\n      ev.stopPropagation()\n      this.$refs.moderationMenu.open(ev)\n    }\n  }\n}\n</script>",".collection {\n  width: 442px;\n  border: none;\n  background-color: rgba(240,205,205,0.05);\n  border-radius: 10px;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n}\n.collection .debug {\n  text-align: center;\n  color: #000;\n  padding: 0px 5px;\n}\n.collection > .info-row {\n  display: flex;\n  flex-direction: row;\n  padding: 10px 16px 10px 20px;\n}\n.collection > .info-row > .avatar {\n  margin-right: 18px;\n}\n.collection > .info-row > .text {\n  flex: 1;\n}\n.collection > .info-row > .text > .label {\n  font-weight: 700;\n  font-size: 16px;\n  height: 22px;\n}\n.collection > .info-row > .text > .author {\n  font-size: 14px;\n}\n.collection > .info-row > .text > .description {\n  font-size: 12px;\n  color: rgba(255,255,255,0.5);\n  margin-top: 6px;\n  height: 32px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n.collection > .info-row > .text > .line {\n  height: 1px;\n  opacity: 0.1;\n  background-color: #fff;\n  border: none;\n}\n.collection > .info-row > .text > .items-info {\n  display: flex;\n  font-size: 12px;\n  margin-top: 10px;\n}\n.collection > .info-row > .text > .items-info .count {\n  display: flex;\n  flex-direction: column;\n  flex-basis: 20%;\n}\n.collection > .info-row > .text > .items-info .count > .text {\n  font-weight: bold;\n  color: #fff;\n}\n.collection > .info-row > .text > .items-info .icon_styles {\n  height: 18px;\n}\n","<template>\n  <div v-if=\"!is_desktop\" class=\"new-box\">\n    It is not possible to create collections in web and mobile wallets.<br>\n    Please download desktop wallet and try from there.\n  </div>\n  <div v-else class=\"new-box\" @click=\"onNewCollection\">\n    Create new collection\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.new-box {\n  width: 442px\n  height: 150px !important\n  border-radius: 10px\n  border: 1px dashed rgba(26, 246, 214, 0.5)\n  background-color: rgba(26, 246, 214, 0.1)\n  cursor: pointer\n  color: rgba(26, 246, 214, 0.7)\n  font-size: 14px\n\n  display: flex\n  align-items: center\n  justify-content: center\n  text-align: center\n}\n</style>\n\n<script>\nimport collsStore from 'stores/collections'\n\nexport default {\n  computed: {\n    is_desktop() {\n      return this.$state.is_desktop\n    }\n  },\n  methods: {\n    onNewCollection () {\n      collsStore.toNewItem()\n    }\n  } \n}\n</script>",".new-box {\n  width: 442px;\n  height: 150px !important;\n  border-radius: 10px;\n  border: 1px dashed rgba(26,246,214,0.5);\n  background-color: rgba(26,246,214,0.1);\n  cursor: pointer;\n  color: rgba(26,246,214,0.7);\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n","<template>\n  <div class=\"approve-collection\" :class=\"{'error': item.error}\">\n    <div v-if=\"item.error\" class=\"info-error\">\n      Failed to load Collection<br>Collection ID: {{ item.id }}<br>{{ item.error }}\n    </div>\n    <div v-else class=\"row\">\n      <div class=\"type\">\n        <div>Artist</div>\n        <div>Name</div>\n        <div v-if=\"item.website\">Website</div>\n        <div v-if=\"item.twitter\">Twitter</div>\n        <div v-if=\"item.instagram\">Instagram</div>\n        <div v-if=\"item.description\">Description</div>\n      </div>\n      <div class=\"info\">\n        <preview :image=\"item.cover\" \n                 :default=\"def_cover\"\n                 radius=\"10px\"\n                 width=\"348px\"\n                 height=\"108px\"\n                 cover\n                 style=\"float: right; margin-left: 15px; margin-bottom: 10px;\"\n        >\n        </preview>\n        <div>{{ item.author_name }}</div>\n        <div>{{ item.label }}</div>\n        <!-- do not remove space and &nbsp; or clamp would not work -->\n        <div v-if=\"item.website\" class=\"link clamp\" @click=\"onWebsite\">{{ item.website }} &nbsp;</div>\n        <div v-if=\"item.twitter\" class=\"link\" @click=\"onTwitter\">@{{ item.twitter }}</div>\n        <div v-if=\"item.instagram\" class=\"link\" @click=\"onInstagram\">@{{ item.instagram }}</div>\n        <div v-if=\"item.description\">{{ item.description }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.approve-collection {\n  background-color: rgba(255, 255, 255, 0.05)\n  border-radius: 10px\n  box-sizing: border-box\n  padding: 20px 20px 20px 70px\n  display:flex\n  flex-direction: column\n  font-size: 14px\n\n  & .row {\n    display: flex\n    flex-direction: row\n\n    & > .type {\n      width: 100px\n     \n      & > div {\n        color: #8da1ad\n        user-select: none\n        display: inline-block\n        width: 100px\n\n        &:not(:last-child) {\n          margin-bottom: 12px\n        }\n      }\n    }\n\n    & > .info {\n      display: block\n      width: 100%\n      min-width: 0\n\n      & > div {\n        &:not(:last-child) {\n          margin-bottom: 12px\n        }\n\n        &.link {\n          cursor: pointer\n          color: rgba(0, 246, 210, 1)\n          \n          &.clamp {\n            display: -webkit-box\n            -webkit-line-clamp: 1\n            -webkit-box-orient: vertical\n            overflow: hidden\n          }\n\n          &:hover {\n            text-decoration: underline\n          }\n        }\n      }\n    }\n  }\n\n  & .info-error {\n    flex: 1\n  }\n}\n</style>\n\n<script>\nimport preview from 'controls/preview'\nimport {def_images} from 'utils/consts'\n\nexport default {\n  components: {\n    preview,\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    }\n  },\n\n  emits: [\n    'selected'\n  ],\n\n  data () {\n    return {\n      def_cover: def_images.artist_banner\n    }\n  },\n\n  methods: {\n    onWebsite(ev) {\n      ev.stopPropagation()\n      this.$store.openUrl(this.item.website)\n    },\n    onTwitter(ev) {\n      ev.stopPropagation()\n      this.$store.openTwitter(this.item.twitter)\n    },\n    onInstagram(ev){\n      ev.stopPropagation()\n      this.$store.openInstagram(this.item.instagram)\n    }\n  }\n}\n</script>\n",".approve-collection {\n  background-color: rgba(255,255,255,0.05);\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 20px 20px 20px 70px;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n}\n.approve-collection .row {\n  display: flex;\n  flex-direction: row;\n}\n.approve-collection .row > .type {\n  width: 100px;\n}\n.approve-collection .row > .type > div {\n  color: #8da1ad;\n  user-select: none;\n  display: inline-block;\n  width: 100px;\n}\n.approve-collection .row > .type > div:not(:last-child) {\n  margin-bottom: 12px;\n}\n.approve-collection .row > .info {\n  display: block;\n  width: 100%;\n  min-width: 0;\n}\n.approve-collection .row > .info > div:not(:last-child) {\n  margin-bottom: 12px;\n}\n.approve-collection .row > .info > div.link {\n  cursor: pointer;\n  color: #00f6d2;\n}\n.approve-collection .row > .info > div.link.clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n.approve-collection .row > .info > div.link:hover {\n  text-decoration: underline;\n}\n.approve-collection .info-error {\n  flex: 1;\n}\n","<template>\n  <div class=\"approve-artist\" :class=\"{'error': item.error}\">\n    <div v-if=\"item.error\" class=\"info-error\">\n      Failed to load Artist<br>Artist ID: {{ item.id }}<br>{{ item.error }}\n    </div>\n    <div v-else class=\"row\">\n      <div class=\"type\">\n        <div>Name</div>\n        <div v-if=\"item.website\">Website</div>\n        <div v-if=\"item.twitter\">Twitter</div>\n        <div v-if=\"item.instagram\">Instagram</div>\n        <div v-if=\"item.about\">About</div>\n      </div>\n      <div class=\"info\">\n        <div class=\"images\">\n          <preview class=\"banner\"\n                   :image=\"item.banner\" \n                   :default=\"def_banner\"\n                   radius=\"10px\"\n                   width=\"432px\"\n                   height=\"135px\"\n                   cover\n          />\n          <div class=\"ellipse\" :style=\"ellipse_style\">\n            <preview :image=\"item.avatar\" \n                     :default=\"def_avatar\"\n                     width=\"120px\"\n                     height=\"120px\"\n                     radius=\"120px\"\n            />\n          </div>\n        </div>\n        <div>{{ item.label }}</div>\n        <!-- do not remove space and &nbsp; or clamp would not work -->\n        <div v-if=\"item.website\" class=\"link clamp\" @click=\"onWebsite\">{{ item.website }} &nbsp;</div>\n        <div v-if=\"item.twitter\" class=\"link\" @click=\"onTwitter\">@{{ item.twitter }}</div>\n        <div v-if=\"item.instagram\" class=\"link\" @click=\"onInstagram\">@{{ item.instagram }}</div>\n        <div v-if=\"item.about\">{{ item.about }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"stylus\">\n.approve-artist {\n  background-color: rgba(255, 255, 255, 0.05)\n  border-radius: 10px\n  box-sizing: border-box\n  padding: 20px 20px 4px 70px\n  display:flex\n  flex-direction: column\n  font-size: 14px\n\n  & .row {\n    display: flex\n    flex-direction: row\n\n    & > .type {\n      width: 100px\n     \n      & > div {\n        color: #8da1ad\n        user-select: none\n        display: inline-block\n        width: 100px\n\n        &:not(:last-child) {\n          margin-bottom: 12px\n        }\n      }\n    }\n\n    & > .info {\n      display: block\n      min-width: 0\n      flex: 1\n\n      & > div {\n        &:not(:last-child) {\n          margin-bottom: 12px\n        }\n\n        &.link {\n          cursor: pointer\n          color: rgba(0, 246, 210, 1)\n          \n          &.clamp {\n            display: -webkit-box\n            -webkit-line-clamp: 1\n            -webkit-box-orient: vertical\n            overflow: hidden\n          }\n\n          &:hover {\n            text-decoration: underline\n          }\n        }\n      }\n\n      & > .images {\n        float: right\n        margin: 0px 0px 0px 15px !important\n        height: 220px\n        position: relative\n\n        .ellipse {\n          position: absolute\n          left: 164px\n          top: 81px\n          border-radius: 74px\n          width: 132px\n          height: 132px\n          background-color: orange\n          display: flex\n          justify-content: center\n          align-items: center\n        }\n      }\n    }\n  }\n\n  & .info-error {\n    flex: 1\n  }\n}\n</style>\n\n<script>\nimport preview from 'controls/preview'\nimport {def_images} from 'utils/consts'\n\nexport default {\n  components: {\n    preview\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    }\n  },\n\n  data () {\n    return {\n      def_banner: def_images.artist_banner,\n      def_avatar: def_images.artist_avatar\n    }\n  },\n\n  computed: {\n    ellipse_style() {\n      return {\n        'background-color': '#232323'\n      }\n    }\n  },\n\n  methods: {\n    onWebsite(ev) {\n      ev.stopPropagation()\n      this.$store.openUrl(this.item.website)\n    },\n    onTwitter(ev) {\n      ev.stopPropagation()\n      this.$store.openTwitter(this.item.twitter)\n    },\n    onInstagram(ev){\n      ev.stopPropagation()\n      this.$store.openInstagram(this.item.instagram)\n    }\n  }\n}\n</script>",".approve-artist {\n  background-color: rgba(255,255,255,0.05);\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 20px 20px 4px 70px;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n}\n.approve-artist .row {\n  display: flex;\n  flex-direction: row;\n}\n.approve-artist .row > .type {\n  width: 100px;\n}\n.approve-artist .row > .type > div {\n  color: #8da1ad;\n  user-select: none;\n  display: inline-block;\n  width: 100px;\n}\n.approve-artist .row > .type > div:not(:last-child) {\n  margin-bottom: 12px;\n}\n.approve-artist .row > .info {\n  display: block;\n  min-width: 0;\n  flex: 1;\n}\n.approve-artist .row > .info > div:not(:last-child) {\n  margin-bottom: 12px;\n}\n.approve-artist .row > .info > div.link {\n  cursor: pointer;\n  color: #00f6d2;\n}\n.approve-artist .row > .info > div.link.clamp {\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n.approve-artist .row > .info > div.link:hover {\n  text-decoration: underline;\n}\n.approve-artist .row > .info > .images {\n  float: right;\n  margin: 0px 0px 0px 15px !important;\n  height: 220px;\n  position: relative;\n}\n.approve-artist .row > .info > .images .ellipse {\n  position: absolute;\n  left: 164px;\n  top: 81px;\n  border-radius: 74px;\n  width: 132px;\n  height: 132px;\n  background-color: #ffa500;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.approve-artist .info-error {\n  flex: 1;\n}\n","<template>\n  <div v-if=\"limit_reached\" class=\"new-box\" @click=\"onNewCollection\">\n    You cannot have more than<br>500 NFTs in one collection.<br><br>\n    Click here to create<br>new collection.\n  </div>\n  <div v-else-if=\"!is_desktop\" class=\"new-box\">\n    It is not possible to create NFTs<br>in web and mobile wallets.<br><br>\n    Please download desktop wallet and try from there.\n  </div>\n  <div v-else-if=\"has_collections\" class=\"new-box\" @click=\"onNewNFT\">\n    Create new NFT\n  </div>\n  <div v-else class=\"new-box\" @click=\"onNewCollection\">\n    To create new NFT, you need<br>\n    to have a collection.<br><br>\n    Click here to create<br>a collection.\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.new-box {\n  width: 213px\n  height: 309px\n  border-radius: 10px\n  border: 1px dashed rgba(26, 246, 214, 0.5)\n  background-color: rgba(26, 246, 214, 0.1)\n  cursor: pointer\n  color: rgba(26, 246, 214, 0.7)\n  font-size: 14px\n  box-sizing: border-box\n\n  display: flex\n  align-items: center\n  justify-content: center\n  text-align: center\n}\n</style>\n\n<script>\nimport collsStore from 'stores/collections'\nimport nftsStore from 'stores/nfts'\n\nexport default {\n  props: {\n    selected_collection: {\n      type: Number,\n      default: undefined,\n      required: false\n    },\n    limit_reached: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    has_collections() {\n      return collsStore.getAllItemsCount('artist') > 0\n    },\n    is_desktop() {\n      return this.$state.is_desktop\n    }\n  },\n\n  methods: {\n    onNewNFT () {\n      nftsStore.toNewItem(this.selected_collection)\n    },\n    \n    onNewCollection() {\n      collsStore.toNewItem()\n    }\n  } \n}\n</script>",".new-box {\n  width: 213px;\n  height: 309px;\n  border-radius: 10px;\n  border: 1px dashed rgba(26,246,214,0.5);\n  background-color: rgba(26,246,214,0.1);\n  cursor: pointer;\n  color: rgba(26,246,214,0.7);\n  font-size: 14px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n","<template>\n  <div class=\"approve-nft\" :class=\"{'error': item.error}\">\n    <div v-if=\"item.error\" class=\"info-error\">\n      Failed to load NFT<br>NFT ID: {{ item.id }}<br>{{ item.error }}\n    </div>\n    <template v-else>\n      <div class=\"info\">\n        <div class=\"type\">Artist</div>\n        <div class=\"value\">{{ item.author_name }}</div>\n        <div class=\"type\">Name</div>\n        <div class=\"value\">{{ item.label }}</div>\n        <div v-if=\"item.description\" class=\"type\">Description</div>\n        <div v-if=\"item.description\" class=\"value\">{{ item.description }}</div>\n      </div>\n      <preview :image=\"item.image\" \n               :default=\"def_nft\"\n               radius=\"10px\"\n               width=\"200px\"\n               height=\"200px\"\n               contain\n      />\n    </template>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n.approve-nft {\n  background-color: rgba(255, 255, 255, 0.05)\n  border-radius: 10px\n  box-sizing: border-box\n  padding: 20px 20px 20px 70px\n  display:flex\n  flex-direction: row\n  font-size: 14px\n\n  & > .info-error {\n    flex: 1\n  }\n\n  & > .info {\n    flex: 1\n    display: grid\n    margin-right: 20px\n    grid-template-columns: 100px auto\n    align-content: start\n\n    & > .type {\n      color: #8da1ad\n      margin-bottom: 12px\n      user-select: none\n    }\n\n    & > .value {\n      color: #fff\n    }\n  }\n}\n</style>\n\n<script>\nimport preview from 'controls/preview'\nimport {def_images} from 'utils/consts'\n\nexport default {\n  components: {\n    preview,\n  },\n\n  props: {\n    item: {\n      type: Object,\n      required: true,\n    }\n  },\n\n  data () {\n    return {\n      def_nft: def_images.nft\n    }\n  },\n}\n</script>\n",".approve-nft {\n  background-color: rgba(255,255,255,0.05);\n  border-radius: 10px;\n  box-sizing: border-box;\n  padding: 20px 20px 20px 70px;\n  display: flex;\n  flex-direction: row;\n  font-size: 14px;\n}\n.approve-nft > .info-error {\n  flex: 1;\n}\n.approve-nft > .info {\n  flex: 1;\n  display: grid;\n  margin-right: 20px;\n  grid-template-columns: 100px auto;\n  align-content: start;\n}\n.approve-nft > .info > .type {\n  color: #8da1ad;\n  margin-bottom: 12px;\n  user-select: none;\n}\n.approve-nft > .info > .value {\n  color: #fff;\n}\n"],"names":[],"sourceRoot":""}